 <!DOCTYPE html>
<html>
<head lang="en">
    <title>ONC Family Table</title>
    <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
    <script>
	/* Comment the correct line for live vs local */    
	var url ="http://cfs.idtus.com:8902";
//	var url ="http://localhost:8902"; 
  
	var urlYears = url.concat("/dbStatus?token=REPLACE_TOKEN&callback=?");
	var urlAgents = url.concat("/agents?token=REPLACE_TOKEN&year=YEAR&callback=?");
	var urlFamilies = url.concat("/families?token=REPLACE_TOKEN&year=YEAR&callback=?");
	var urlRefer = url.concat("/referral");
	var urlCreateNewFamily = url.concat("/newfamily");
	var currYear;
	var priorYear;
	var pyFamJson;
	var cyFamJson;
	
	sessionStorage.setItem("whoamI", "REPLACE_TOKEN");
	
    $( document ).ready(function()
    {
    	currYear = new Date().getFullYear();
		document.getElementById('curragtenslbl').innerHTML = currYear.toString() + ' Families Referred By:';
		
		priorYear = new Date().getFullYear()-1;
		
    	//get the list of years from the data base and put it in the year combo box
    	$.getJSON(urlYears, function(data)
    	{
			var combo = document.getElementById("dbYears");
    		for (var i = data.length-1; i >= 0; i--)
    		{
    			var option = document.createElement("option");
    			option.text = data[i].id;
    	    	option.value = data[i].id;
    	    	if(option.value != currYear)	//dont add current year to year selections
    	    	{
    	    		try 
    	    		{
    	        		combo.add(option, null); //Standard 
    	    		} 
    	    		catch(error) 
    	    		{
    	        		combo.add(option); // IE only
    	    		}
    	    	}
    		}
    	});
    	//get the list of prior year agents & families from the server and display them
    	getPYAgentsAndFamiliesFromServer(priorYear.toString());
    	
    	//get the list of current year agents & familes from the server and display them
    	getCYAgentsAndFamiliesFromServer(currYear.toString());
    });
    
    function getPYFamiliesFromServer(year)
    {
    	$.getJSON(urlFamilies.replace("YEAR", year.toString()), function(data)
    	{
    		pyFamJson = data;
    		updatePYTable();
    	});
    }
    
    function getCYFamiliesFromServer(year)
    {
    	$.getJSON(urlFamilies.replace("YEAR", year.toString()), function(data)
    	{
    		cyFamJson = data;
    		updateCYTable();
    	});
    }
    
    function getPYAgentsAndFamiliesFromServer(year)
    {
    	//get reference to agent combobox
    	var agtcb = document.getElementById('pyagents');
    	
    	//clear the agent combobox
    	agtcb.options.length = 0;
		
    	//get updated agentJson from server and place into combobox
    	$.getJSON(urlAgents.replace("YEAR", year.toString()), function(data)
    	{
			//add the "Anyone" option if there is more than one agent object
			if(data.length > 1)
			{
				var agtOption = document.createElement("option");
				agtOption.text = "Anyone";
	    		agtOption.value = -1;
	    		try 
	    		{
	        		agtcb.add(agtOption, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		agtcb.add(agtOption); // IE only
	    		}
			}
	    	
	    	//add the agents for the year
    		for (var i=0; i < data.length; i++)
    		{
    			var agtOption = document.createElement("option");
    			agtOption.text = data[i].name;
    	    	agtOption.value = data[i].id;
    	    	try 
    	    	{
    	        	agtcb.add(agtOption, null); //Standard 
    	    	}
    	    	catch(error)
    	    	{
    	        	agtcb.add(agtOption); // IE only
    	    	}  
    		}
	    	
	    	getPYFamiliesFromServer(year);
    	});
    }
    
    function getCYAgentsAndFamiliesFromServer(year)
    {
    	//get reference to agent combobox
    	var agtcb = document.getElementById('curragents');
    	
    	//clear the agent combobox
    	agtcb.options.length = 0;
		
    	//get updated agentJson from server and place into combobox
    	$.getJSON(urlAgents.replace("YEAR", year.toString()), function(data)
    	{
			//add the "Anyone" option if there is more than one agent object
			if(data.length > 1)
			{
				var agtOption = document.createElement("option");
				agtOption.text = "Anyone";
	    		agtOption.value = -1;
	    		try 
	    		{
	        		agtcb.add(agtOption, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		agtcb.add(agtOption); // IE only
	    		}
			}
	    	
	    	//add the agents for the year
    		for (var i=0; i < data.length; i++)
    		{
    			var agtOption = document.createElement("option");
    			agtOption.text = data[i].name;
    	    	agtOption.value = data[i].id;
    	    	try 
    	    	{
    	        	agtcb.add(agtOption, null); //Standard 
    	    	}
    	    	catch(error)
    	    	{
    	        	agtcb.add(agtOption); // IE only
    	    	}  
    		}
	    	
    		getCYFamiliesFromServer(year);
    	});
    }
    
    function updateForYearSelection()
    {
    	//get selected year
    	var yearCB = document.getElementById("dbYears");
		priorYear = yearCB.options[yearCB.selectedIndex].value;
    	
    	getPYAgentsAndFamiliesFromServer(priorYear);	//get agents & families from server
    }
    
    function updatePYTable()
    {
    	$("#tbodyid").empty();
    	var e = document.getElementById("pyagents");
    	var agentID = e.options[e.selectedIndex].value;
    	
    	for(var i=0; i<pyFamJson.length; i++)
		{
    		if(agentID == -1 || agentID == pyFamJson[i].agentID)
    		{
    			addPYTableRow(pyFamJson[i]);	//add row to table
    		}
		}
    }
    
    function updateCYTable()
    {
    	$("#tbodycurrid").empty();
    	var e = document.getElementById("curragents");
    	var agentID = e.options[e.selectedIndex].value;
    	
    	for(var i=0; i<cyFamJson.length; i++)
		{
    		if(agentID == -1 || agentID == cyFamJson[i].agentID)
    		{
    			addCYTableRow(cyFamJson[i]);	//add row to table
    		}
		}
    }
    
    function addPYTableRow(family)
    {
        if (!document.getElementsByTagName) return;
        
        var familyinfo = [family.oncNum, family.HOHFirstName, family.HOHLastName, family.DNSCode,
      					  family.fstatus, family.dstatus, family.mealStatus];
        
	    var tabBody = document.getElementById("pyTable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < familyinfo.length; index++)	//create the family info cells
        {
        	cell = document.createElement("td");
        	cell.appendChild(document.createTextNode(familyinfo[index]));
        	row.appendChild(cell);
        }
        
        btn = document.createElement("button");
        btn.value=family.id;
        btn.innerHTML = "Refer";
        btn.onclick=function() {referFamily(family.id);};
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
    
    function addCYTableRow(family, tablename, buttonname)
    {
        if (!document.getElementsByTagName) return;
        
        var familyinfo = [family.oncNum, family.HOHFirstName, family.HOHLastName, family.DNSCode,
      					  family.fstatus, family.dstatus, family.mealStatus];
        
	    var tabBody = document.getElementById("cyTable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < familyinfo.length; index++)	//create the family info cells
        {
        	cell = document.createElement("td");
        	cell.appendChild(document.createTextNode(familyinfo[index]));
        	row.appendChild(cell);
        }
        
        btn = document.createElement("button");
        btn.value=family.id;
		btn.value=family.HOHLastName;
        btn.innerHTML = "Detail";
        btn.onclick=function() {details(family.HOHLastName);};
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
    
    function referFamily(id)
    {
		var params = {}
		params["year"] = priorYear.toString();
		params["token"] = "REPLACE_TOKEN";
		params["famID"] = id.toString();
		
		post(urlRefer, params);
    }
    
    function newFamily()
    {
    	var params = {}
		params["token"] = "REPLACE_TOKEN";
		
		post(urlCreateNewFamily, params);
    }
    
    function details(id)
    {
    	alert(id);
    }
    
	function post(path, params, method) 
	{
	    method = method || "post"; // Set method to post by default if not specified.

	    // The rest of this code assumes you are not using a library.
	    // It can be made less wordy if you use one.
	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

	    for(var key in params) {
	        if(params.hasOwnProperty(key)) {
	            var hiddenField = document.createElement("input");
	            hiddenField.setAttribute("type", "hidden");
	            hiddenField.setAttribute("name", key);
	            hiddenField.setAttribute("value", params[key]);

	            form.appendChild(hiddenField);
	         }
	    }

	    document.body.appendChild(form);
	    form.submit();
	}
    </script>
    <style type="text/css">
        .scrolltable {
            overflow-x: scroll;
            height: 100%;
            display: flex;
            display: -webkit-flex;
            flex-direction: column;
            -webkit-flex-direction: column;
        }
        .scrolltable > .header {
        }
        .scrolltable > .body {
            /*noinspection CssInvalidPropertyValue*/
            width: -webkit-fit-content;
            overflow-y: scroll;
            flex: 1;
            -webkit-flex: 1;
        }
        th, td {
            min-width: 116px;
        }
        /* an outside constraint to react against */
        #constrainer {
            width: 880px;
            height: 200px;
        }
        #constrainer2 {
            width: 880px;
            overflow-x: scroll;
        }
        #constrainer2 table {
            overflow-y: scroll;
        }
        #constrainer2 tbody {
            overflow-x: scroll;
            display: block;
            height: 200px;
        }
        #constrainer2 thead {
            display: table-row;
        }
        /* only styling below here */
        #constrainer, #constrainer2 {
            border: 1px solid lightgrey;
        }
        table {
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid gray;
        }
        th {
            background-color: lightgrey;
            border-width: 1px;
        }
        td {
            border-width: 1px;
        }
        tr:first-child td {
            border-top-width: 0;
        }
        tr:nth-child(even) {
            background-color: #eee;
        }
        button {
        	background-color: #336699;
        	color: #ffffff;
        }
    </style>
</head>
<body>
	<p align="center"><b><i>USER_NAME_HERE, welcome to Our Neighbors Child!</i></b></p>
	<form>
		<select id="dbYears" name="dbYear" onchange="updateForYearSelection()" ></select>
		<label for="pyagents">Families Referred By:</label>
		<select id="pyagents"  onchange="updatePYTable()" name="pyagtID"></select>
	</form>
<div id="constrainer2">
    <table id="pyTable">
        <thead>
        <tr>
       		<th>ONC #</th><th>First Name</th><th>Last Name</th><th>DNS Code</th>
        	<th>Gift Status</th><th>Delivery Status</th><th>Meal Status</th>
        </tr>
        </thead>
        <tbody id="tbodyid">
        </tbody>
	</table>
</div>
<p><button onclick="newFamily()">Refer New Family</button></p>
<form>
		<label id= curragtenslbl for="curragents">xxxx Families Referred By:</label>
		<select id="curragents"  onchange="updateCYTable()" name="curragtID"></select>
	</form>
<div id="constrainer2">
    <table id = cyTable>
        <thead>
        <tr>
       		<th>ONC #</th><th>First Name</th><th>Last Name</th><th>DNS Code</th>
        	<th>Gift Status</th><th>Delivery Status</th><th>Meal Status</th>
        </tr>
        </thead>
        <tbody id="tbodycurrid">
        </tbody>
	</table>
</div>
<br>
	<form action="logout?token=REPLACE_TOKEN" method="post">
  		<button type="submit">Logout</button>
	</form>
</body>
</html>