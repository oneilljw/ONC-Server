 <!DOCTYPE html>
<html>
<head lang="en">
  <title>ONC Main Login Page</title>
  <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
  <script>
	var currYear;
	var priorYear;
	var familyRefs = {};
	var famJson = {};
	var agtJson;
	var childrenJson = {};
	var wishJson = {};
	var famIndex = 0;
	
	sessionStorage.setItem('token', "REPLACE_TOKEN");
	sessionStorage.setItem('thanksgivingCutoff', "THANKSGIVING_CUTOFF");
	sessionStorage.setItem('decemberCutoff', "DECEMBER_CUTOFF");
	sessionStorage.setItem('editCutoff', "EDIT_CUTOFF");
	
    $( document ).ready(function()
    {
    	currYear = new Date().getFullYear();
		priorYear = new Date().getFullYear()-1;
		sessionStorage.setItem("prioryear", priorYear);
		
    	//get the list of years from the data base and put it in the year combo box
    	var dbyearsparams = "token=" + sessionStorage.getItem("token") + "&callback=?";
    	$.getJSON('dbStatus', dbyearsparams, function(data)
    	{
			var yearCombo = document.getElementById("yearlist");
    		for (var i = data.length-1; i >= 0; i--)
    		{
    			var option = document.createElement("option");
    			option.text = data[i].id;
    	    	option.value = data[i].id;

    	    	try 
	    		{
	        		yearCombo.add(option, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		yearCombo.add(option); // IE only
	    		}
    		}
    		var year = yearCombo.options[yearCombo.selectedIndex].value;
    		getFamilyReferencesFromServer(year);
    	});
    });
    
    function getFamilyReferencesFromServer(year)
    {
    	familyparams = "token=" + sessionStorage.getItem("token") +
    	"&year=" + year + "&callback=?";
    	$.getJSON('references', familyparams, function(data)
    	{
    		familyRefs = data;
    		if(familyRefs.length > 0)
    		{
    			getFamilyFromServer(year, familyRefs[0].id)
    		}
    		else
    		{
    			document.getElementById('onc').value= "No";
    			document.getElementById('ref').value= "Families";
    		}
    	});
    }
    
    function getFamilyFromServer(year, id)
    {
    	familyparams = "token=" + sessionStorage.getItem("token") +
    	"&year=" + year +
    	"&targetid=" + id + "&callback=?";
    	$.getJSON('getfamily', familyparams, function(data)
    	{
    		famJson = data;
    		document.getElementById('onc').value= famJson.oncNum;
			document.getElementById('ref').value= famJson.targetID;
			document.getElementById('batch').value= "";
			document.getElementById('dns').value= famJson.DNSCode;
    		document.getElementById('hohfn').value= famJson.HOHFirstName;
			document.getElementById('hohln').value= famJson.HOHLastName;
			document.getElementById('famstat').value= famJson.fstatus;
			document.getElementById('delstat').value= famJson.dstatus;
			document.getElementById('mealstat').value= famJson.mealStatus;
			document.getElementById('language').value= famJson.Language;
			document.getElementById('homephone').value= famJson.HomePhone;
			document.getElementById('cellphone').value= famJson.OtherPhone;
			document.getElementById('email').value= famJson.FamilyEmail;
			document.getElementById('housenum').value= famJson.HouseNum;
			document.getElementById('street').value= famJson.Street;
			document.getElementById('unit').value= famJson.UnitNum;
			document.getElementById('city').value= famJson.City;
			document.getElementById('zipcode').value= famJson.ZipCode;
			document.getElementById('transport').value= famJson.transportation;
			document.getElementById('detail').value= famJson.details;
			
			getAgentFromServer(year, famJson.agentID);
			getFamiliesChildrenFromServer(year, famJson.targetID);
    	});
    }
    
    function getAgentFromServer(year, agtid)
    {
    	agentparams = "token=" + sessionStorage.getItem("token") +
    	"&year=" + year +
    	"&agentid=" + agtid + "&callback=?";
    	$.getJSON('getagent', agentparams, function(data)
    	{
    		agtJson = data;
    		document.getElementById('agentname').value= agtJson.name;
			document.getElementById('agentorg').value= agtJson.org;
			document.getElementById('agenttitle').value= agtJson.title;
    		document.getElementById('agentphone').value= agtJson.phone;
			document.getElementById('agentemail').value= agtJson.email;
    	});
    }
    
    function getFamiliesChildrenFromServer(year, targetid)
    {
    	childrenparams=  "token=" + sessionStorage.getItem("token") + "&" +
		"year=" + year + "&" +
		"targetid=" + targetid + "&" +
		"callback=?";

		$.getJSON('children', childrenparams, function(data)
		{
			childrenJson = data;
			updateChildTable();
			if(childrenJson.length > 0)
			{
				getChildWishesFromServer(year, childrenJson[0].id);
			}
		});
    }
    
    function getChildWishesFromServer(year, childid)
    {
    	childwishparams=  "token=" + sessionStorage.getItem("token") + "&" +
		"year=" + year + "&" +
		"childid=" + childid + "&" +
		"callback=?";

		$.getJSON('wishes', childwishparams, function(data)
		{
			wishJson = data;
			updateWishTable(wishJson);
		});
    }
   
    function updateChildTable()
    {
    	$("#tchildbody").empty();
    	
    	var childSelect = document.getElementById("childfn");
    	clearSelect(childSelect);
    	
    	for(var i=0; i<childrenJson.length; i++)
		{
    		addChildTableRow(i, childrenJson[i]);	//add row to table
    		
    		var option = document.createElement("option"); //add child fn to select
			option.text = childrenJson[i].firstname;
	    	option.value = i;

	    	try 
    		{
        		childSelect.add(option, null); //Standard 
    		} 
    		catch(error) 
    		{
        		childSelect.add(option); // IE only
    		}
    		
   		}
    }
	
	function updateWishTable(wishJson)
    {
    	$("#twishbody").empty();
    	
    	for(var i=0; i<wishJson.length; i++)
		{
    		addWishTableRow(i, wishJson[i]);	//add row to table
		}
    }
	
	function updateAdultTable()
    {
    	$("#tadultbody").empty();
    	
    	for(var i=0; i<adultsJson.length; i++)
		{
    		addAdultTableRow(i, adultsJson[i]);	//add row to table
		}
    }
	
	function addChildTableRow(cnum, child)
    {
        var childinfo = [child.firstname, child.lastname, child.sDOB, child.gender, child.school];
        var fieldname = ["childfn", "childln", "childdob", "childgender", "childschool"];
        var fieldsize = [15, 16, 11, 11, 20];
        
	    var tabBody = document.getElementById("childtable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
    	
        for(index=0; index < childinfo.length; index++)	//create the child info cells
        {
        	cell= document.createElement("td");
    	    content= document.createElement("input");
 	    	content.type="text";
 	    	content.name=fieldname[index] + cnum;
        	content.value = childinfo[index];
        	content.setAttribute("size", fieldsize[index]);
        	cell.appendChild(content);
        	row.appendChild(cell);
        	
        }
        
        btn = document.createElement("button");
        btn.value=cnum;
        btn.type="button";
        btn.innerHTML = "Remove";
        btn.onclick=function() {removeChild(cnum);};
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
	
	function addWishTableRow(wn, childwish)
    {
		var wishinfo= [wn+1, childwish.name, childwish.detail, childwish.restriction, childwish.partner, childwish.status];
		var columnsize= ['8px', '120px', '200px', '8px', '320px', '80px'];
		var wishfieldsize= [1, 12, 32, 1, 32, 10];
        
	    var tabBody = document.getElementById("wishtable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < wishinfo.length; index++)	//create the child info cells
        {
        	cell= document.createElement("td");
        	cell.style.width = columnsize[index];
    	    content= document.createElement("input");
 	    	content.type="text";
        	content.value = wishinfo[index];
        	content.readOnly = true;
        	content.setAttribute("size", wishfieldsize[index]);
        	cell.appendChild(content);
        	row.appendChild(cell);
        }
        
        tabBody.appendChild(row);
    }
	
	function addAdultTableRow(anum, adult)
    {
	    var tabBody = document.getElementById("adulttable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
        
        cell= document.createElement("td");
        adultname= document.createElement("input");
        adultname.type="text";
        adultname.name="adultname" + anum;
        adultname.value = adult.name;
        adultname.setAttribute("size", 27);
        cell.appendChild(adultname);
        row.appendChild(cell);
        
        cell= document.createElement("td");
        var adultgender= document.createElement("input");
        adultgender.type="text";
        adultgender.name="adultgender" + anum;
        adultgender.value = adult.gender;
        adultgender.setAttribute("size", 11);
        cell.appendChild(adultgender);
        row.appendChild(cell);
        
        var btn = document.createElement("button");
        btn.value= anum;
        btn.type="button";
        btn.innerHTML = "Remove";
        btn.onclick=function() {removeAdult(anum);};
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
	
	function getAge(birthdate)
	{
		var curryear = new Date().getFullYear();
		var xmasday = new Date(curryear,11,25,0,0,0,0);
		var birthdate= new Date(birthdate);
		
		var age= [];
		
		if(birthdate >= xmasday)
		{
			age.push('Newborn');
		}
		else
		{
	    	var y= [xmasday.getFullYear(), birthdate.getFullYear()],
	    	ydiff= y[0]-y[1],
	    	m= [xmasday.getMonth(), birthdate.getMonth()],
	    	mdiff= m[0]-m[1],
	    	d= [xmasday.getDate(), birthdate.getDate()],
	    	ddiff= d[0]-d[1];

	    	if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
	    	if(mdiff<0) mdiff+= 12;
	    	if(ddiff<0)
	    	{
	        	birthdate.setMonth(m[1]+1, 0);
	        	ddiff= birthdate.getDate()-d[1]+d[0];
	        	--mdiff;
	    	}
	    	
	    	if(ydiff> 0) age.push(ydiff+ ' yr. old');
	    	else if(mdiff> 0) age.push(mdiff+ ' mos. old');
		}
	    	return age.join('');
	}
	
	function updateForYearSelection()
    {
    	//get selected year
    	var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
    	
		getFamilyReferencesFromServer(year);
    }
	
	function updateForChildSelection()
    {
    	//get selected year
    	var childCB = document.getElementById("childfn");
		var childid = childrenJson[childCB.selectedIndex].id;
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
    	
		getChildWishesFromServer(year, childid)	//get child wishes from server
    }
	
	function clearSelect(select)
	{
		var i;
		for(i=select.options.length-1;i>=0;i--)
		{
	    	select.remove(i);
	    }
	}
	
	function onNextFamily()
	{
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		if(familyRefs.length > 0 && famIndex < familyRefs.length)
		{
			famIndex++;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
		else if(familyRefs.length > 0 && famIndex < familyRefs.length)
		{
			famIndex= 0;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
	}
	
	function onPreviousFamily()
	{
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		if(familyRefs.length > 0 && famIndex > 0)
		{
			famIndex--;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
		else if(familyRefs.length > 0 && famIndex === 0)
		{
			famIndex= familyRefs.length-1;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
	}
	function onSearch()
	{
		console.log("Searching");
	}
    
	function post(path, params, method) 
	{
	    method = method || "post"; // Set method to post by default if not specified.

	    // The rest of this code assumes you are not using a library.
	    // It can be made less wordy if you use one.
	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

	    for(var key in params) {
	        if(params.hasOwnProperty(key)) {
	            var hiddenField = document.createElement("input");
	            hiddenField.setAttribute("type", "hidden");
	            hiddenField.setAttribute("name", key);
	            hiddenField.setAttribute("value", params[key]);

	            form.appendChild(hiddenField);
	         }
	    }

	    document.body.appendChild(form);
	    form.submit();
	}
  </script>
  <style type="text/css">
    .topbar 
    {
    	width:900px;
    	height:72px;
    	margin:0 auto;
    	background-color: #FF0000;
		border: 1px solid black;
	}
	.topbar img
	{
    	float:left;
   		border: 0;
	}
	div.ui-datepicker
	{
		width:480px;
  		background-color: lightgray;
  		font-size:15px;
	}
	form
	{
		width:900px;
		margin:0 auto;
		background-color: #3CB371;
		border: 1px solid black;
	}
	#controlbar
	{
		width:900px;
		margin:0 auto;
		background-color: #E8E8E8;
		border: 1px solid black;
	}
	button
    {
        background-color: #336699;
        color: #ffffff;
    }      
	.major
	{
  		padding: 0.2em 0.5em;
  		border:2px solid black;
  		background-color: #E5FFCC;
  		font-size:80%;
  		text-align:left;
  	}
  	#topbar p
    {
       	text-align: center;
    }
    #banner
    {
    	font-weight: bold;
    	font-style: italic;
    	font-size: 130%;
	}
	fieldset {background-color: #E8E8E8;}
	#submitspan {float: right;}
	#errormessage
	{
		float: left;
		font-weight: bold;
		font-style: italic;
		color: red;
	}
	table, th, td {border: 1px solid black;}
	th, td {min-width: 60px; }
	button {background-color: #336699; color: #fffff;}
    #topbar p
    {
   		text-align: center;
    }
    #banner
    {
    	font-weight: bold;
    	font-style: italic;
    	font-size: 130%;
	}
	nav 
	{
		background-color: #E5FFCC;
		border: 1px solid #dedede;
		border-radius: 4px;
		box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.055);
		color: #888;
		display: inline-block;
		width:900px;
		margin: 8px 22px 8px 22px;
		overflow: hidden;
	}
	nav ul 
	{
		margin: 0;
		padding: 0;
		display: inline-block;
	}
	nav ul li 
	{
		display: inline-block;
		list-style-type: none;
		
		-webkit-transition: all 0.2s;
		-moz-transition: all 0.2s;
		-ms-transition: all 0.2s;
		-o-transition: all 0.2s;
		transition: all 0.2s; 
	}
	nav > ul > li > a 
	{
		color: black;
		display: block;
		line-height: 36px;
		padding: 0 24px;
		text-decoration: none;
	}
	nav > ul > li > a > .caret 
	{
		border-top: 4px solid #aaa;
		border-right: 4px solid transparent;
		border-left: 4px solid transparent;
		content: "";
		display: inline-block;
		height: 0;
		width: 0;
		vertical-align: middle;
	
		-webkit-transition: color 0.1s linear;
		-moz-transition: color 0.1s linear;
		-o-transition: color 0.1s linear;
 		transition: color 0.1s linear; 
	}
	nav > ul > li:hover 
	{
        background-color: rgb( 40, 44, 47 );
    }
    nav > ul > li:hover > a 
    {
        color: rgb( 0, 204, 0 );
    }
    nav > ul > li:hover > a > .caret 
    {
        border-top-color: rgb( 0, 204, 0 );
    }
    nav > ul > li > div 
    {
		background-color: rgb( 40, 44, 47 );
		border-top: 0;
		border-radius: 0 0 4px 4px;
		box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.055);
		display: none;
		margin: 0;
		opacity: 0;
		position: absolute;
		width: 165px;
		visibility: hidden;
		z-index: 100;
	
		-webkit-transiton: opacity 0.2s;
		-moz-transition: opacity 0.2s;
		-ms-transition: opacity 0.2s;
		-o-transition: opacity 0.2s;
		-transition: opacity 0.2s;
	}
	nav > ul > li:hover > div 
	{
		display: block;
		opacity: 1;
		visibility: visible;
	}
	nav > ul > li > div ul > li 
	{
		display: block;
	}
	nav > ul > li > div ul > li > a 
	{
		color: #fff;
		display: block;
		padding: 12px 24px;
		text-decoration: none;
	}
	nav > ul > li > div ul > li:hover > a 
	{
		background-color: rgba( 255, 255, 255, 0.1);
	}
	label 
	{
		font-size: 90%;
 		display: inline-block;
 		width: 116px;
 		text-align: left;
	}
	.shortlabel
	{
		width: 60px;
	}
  </style>
</head>
<body>
  <div id="topbar" class="topbar">
    <img src="onclogo" height="55" width="75"/>
	<p><span id="banner">USER_NAME, welcome to Our Neighbor's Child Family Referral System</span><br>
	<span id="message">USER_MESSAGE</span></p>
  </div>
  <nav>
	<ul>
		<li><select id="yearlist" name="yearlist" onchange="updateForYearSelection()"></select></li>
		<li>
			<a href="ONC Data.html">ONC Data <span class="caret"></span></a>
			<div>
				<ul>
					<li><a href="products.html#chair">Families</a></li>
					<li><a href="products.html#table">Partners</a></li>
					<li><a href="cooker.html">Wishes</a></li>
				</ul>
			</div>
		</li>
		<li><a href="about.html">Profile</a></li>
		<li><a href="logout?token=REPLACE_TOKEN">Logout</a></li>
	</ul>
  </nav>
  <div id='controlbar'>
  	<button id="next" onclick="onNextFamily()">Next Family</button>
  	<button id="previous" onclick="onPreviousFamily()">Previous Family</button>
  	<label for="search">Search for:</label> 
	<input id="search" type="search" placeholder="search" onsearch="onSearch()">
  </div>
  <form id="familyreferral" action="referfamily" onsubmit="return submitReferral()" method="post">
  <input id='token' type="hidden" name="token">
  <input id='year' type="hidden" name="year">
  <input id='targetid' type="hidden" name="targetid">
  <br>
  <fieldset>
  <legend class="major">Family Information & Status</legend>
    <label for="onc" class= 'shortlabel'>ONC #</label>
    <label for="ref" class= 'shortlabel'>Ref #</label>
    <label for="batch" class= 'shortlabel'>Batch #</label>
    <label for="dns" class= 'shortlabel'>DNS</label>
    <label for="hohfn">First Name</label>
    <label for="hohln">Last Name</label>
    <label for="famstat">Family Status</label>
    <label for="selstat">Delivery Status</label>
    <label for="mealstat">Meal Status</label>
    <br>
    <input id='onc' type="text" size="7">
    <input id='ref' type="text" size="7">
    <input id="batch" type="text" size="8">
    <input id="dns" type="text" size="8">
    <input id='hohfn' title="First Name" name="hohFN" type="text" size="16">
    <input id='hohln' title="Last Name" name="hohLN" type="text" size="17">
    <input id='famstat' title="Family Status" type="text" size="16">
    <input id='delstat' title="Delivery Status" type="text" size="16">
    <input id='mealstat' title="Meal Status" type="text" size="16">
    <br>
    <label for="language">Language</label>
    <label for="homephone">Home Phone</label>
    <label for="cellphone">Mobile Phone</label>
    <label for="email">Email</label>
    <br>
    <input id= 'language' title="Primary language" name="language" type= "text" size="13">
    <input id="homephone" title="Home Phone #" name="homephone" type="text" size="13">
    <input id= "cellphone" title="Cell Phone #" name="cellphone" type="text" size="13">
    <input id='email' title="E-mail address" name="email" type="email" size="30">
	<br>
	<label for="housenum">House</label>
    <label for="street">Street</label>
    <label for="unit">Unit</label>
    <label for="city">City</label>
    <label for="zipcode">Zip</label>
    <label for="transport">Transportation?</label>
    <br>
	<input id="housenum" title="House #" name="housenum" type="text" size="8" placeholder="House #" onchange="verifyHOHAddress()" autocomplete="off" required>
    <input id="street" title="Street Name" name="street" type="text" size="20" placeholder="Street Name" onchange="verifyHOHAddress()" autocomplete="off" required>
    <input id="unit" title="Apt. or Unit #" name="unit" type="text" size="8" placeholder="Apt #" onchange="verifyHOHAddress()" autocomplete="off">
    <input id="city" title="City" name="city" onchange="cityChanged('city')">
    <input id="zipcode" title="Zip Code" name="zipcode" onchange="onZipChanged('zipcode')">
	<input id="transport" title="Family has own transportation" name="transport" type="text" size="12">
	<input type="checkbox" id="sameaddress" title="Uncheck to edit HoH or Delivery address" onclick="sameAddressClicked(this)">Alt Address?
  </fieldset>
  <br>
  <fieldset>
  <legend class="major">Referring Agent Information</legend>
    <label for="agentname">Name</label>
    <label for="agentorg">Organization</label>
    <label for="agenttitle">Title</label>
    <label for="agentphone">Phone</label>
    <label for="agentemail">Email</label>
    <br>
	<input id="agentname" title="Agent Name" name="agentfn" type="text" size="18">
    <input id="agentorg" title="Agent Organization" name="agentln" type="text" size="18">
    <input id="agenttitle" title="Agent Title" name="agenttitle" type="text" size="20">
    <input id="agentphone" title="Agent Phone" name="agentphone" type="text", size="13">
    <input id="agentemail" title="Agent Email" name="agentemail" type="text" size="30">
  </fieldset>
  <br>
  <fieldset>
  <legend class="major">Family Members</legend>
  <fieldset class="gray">
  	<legend>Children in family</legend>
    <table id="childtable" border="1">
  	<thead>
    	<tr>
        	<th>First Name</th>
        	<th>Last Name</th>
        	<th>DoB </th>
        	<th>Gender </th>
        	<th>School </th>
    	</tr>
      </thead>
      <tbody id="tchildbody">
      </tbody>
  </table>
  </fieldset>
  <br>
  <fieldset>
  	<legend>Other adults in family (in addition to the head of household)</legend>
  	<input id="adultname" title="Name" type="text" size="28" placeholder="First & Last Name">
    <select id="adultgender" title="Gender">
		<option value="Male">Male</option>
		<option value="Female">Female</option>
		<option value="Unknown">Unknown</option>
	</select>
	<button type="button" onclick="addAdult()" title="Click to add adult to family">Add Adult</button>
	<button type="button" onclick="clearAddAdult()" title="Click to clear adult fields">Clear</button>
  <table id="adulttable" border="1">
  	<thead>
    	<tr>
        	<th>Name</th>
        	<th>Gender </th>
    	</tr>
    </thead>
    <tbody id="tadultbody">
    </tbody>
</table>
  </fieldset>
  </fieldset>
  <br>
  <fieldset>
   <legend class="major">Children's Wishes</legend>
   <select id="childfn" onchange="updateForChildSelection()"> </select>
  	<table id="wishtable" border="1">
  	<thead>
    	<tr>
        	<th>Wish #</th>
        	<th>Name</th>
        	<th>Detail</th>
        	<th>Res</th>
        	<th>Partner</th>
        	<th>Status</th>	
    	</tr>
      </thead>
      <tbody id="twishbody">
      </tbody>
  </table>
  </fieldset>
  <br>
  <fieldset>
  <legend class="major">Meal Assistance: ONC will refer family to WFCM or other meal providing organizations</legend>
	<input type="checkbox" onclick="mealRqrdClicked(this)" title="Check if family needs meal assistance">Check to request meal assistance for:
    <select id="mealtype" name="mealtype" title="When does the family need meal assistance?" disabled>
		<option value="No Assistance Rqrd">No Assistance Rqrd</option>
	</select>
	<input id="dietres" type="text" name="dietres" size="68" placeholder="Describe any dietary restrictions" title="Describe any family dietary restrictions" disabled>
  </fieldset>
  <br>
  <fieldset>
   <legend class="major">Family Details: Provide any additional details that may assist in serving this family</legend>
	<input id="detail" type="text" name="detail" size="128" placeholder="Details about family ONC should know" title="Provide ONC with information about the family you feel is important">
  </fieldset>
  <br>
  <div>
  	<span id="errormessage"></span>
  	<span id="submitspan">
  	  <label for="submit">Please check that all fields are complete prior to submission: </label>
  	  <input id="submit" type="submit" value="Submit to ONC" style="background-color: #336699; color: #ffffff;" title="Click to sumbit family to ONC">
  	</span>
  </div>
</form>
</body>
</html>