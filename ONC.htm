 <!DOCTYPE html>
<html>
<head lang="en">
  <title>ONC Elf Main Page</title>
  <link rel="stylesheet" type="text/css" href="oncstylesheet.css">
  <link rel="stylesheet" type="text/css" href="oncdialogstylesheet.css">
  <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
  <script>
	var currYear;
	var currFamRef;
	var familyRefs = {};
	var searchRefs = {};
	var famJson = {};
	var agtJson;
	var childrenJson = {};
	var wishJson = {};
	var famIndex = 0;
	var searchIndex = 0;
	var adultsJson= [];
	var userJson= {};
	
	sessionStorage.setItem('token', "REPLACE_TOKEN");
	sessionStorage.setItem('curryear', "REPLACE_YEAR");
	sessionStorage.setItem('famref', "REPLACE_FAM_REF");
	
    $( document ).ready(function()
    {
		//set the search buttons to hidden
		document.getElementById('srch-prior').style.visibility = 'hidden';
		document.getElementById('srch-next').style.visibility = 'hidden';
		
    	//get the list of years from the data base and put it in the year combo box
    	var dbyearsparams = "token=" + sessionStorage.getItem("token") + "&callback=?";
    	$.getJSON('dbStatus', dbyearsparams, function(data)
    	{
			var yearCombo = document.getElementById('yearlist');
    		for (var i = data.length-1; i >= 0; i--)
    		{
    			var option = document.createElement('option');
    			option.text = data[i].id;
    	    	option.value = data[i].id;

    	    	try 
	    		{
	        		yearCombo.add(option, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		yearCombo.add(option); // IE only
	    		}
    		}

    		document.getElementById('yearlist').value= sessionStorage.getItem('curryear');
    		getFamilyReferencesFromServer(sessionStorage.getItem('curryear'));
    	});
    	
    	$("#search").keyup(function (e) {
    	    if(e.keyCode == 13) 
    	    {
    	        onSearch();
    	    }
    	});
    	
    	// CLEARABLE INPUT
    	$(document).on('input', '.clearable', function()
    	{
    	    $(this)[tog(this.value)]('x');    	    
    	}).on('mousemove', '.x', function( e ){
    	    $(this)[tog(this.offsetWidth-18 < e.clientX-this.getBoundingClientRect().left)]('onX');
    	}).on('touchstart click', '.onX', function( ev ){
    	    ev.preventDefault();
    	    onClearSearch();
    	    $(this).removeClass('x onX').val('').change();   	    
    	});
    });
    
    function tog(v)
    {
    	return v?'addClass':'removeClass';
    }

    function showEditProfileDialog() 
    {
    	var params = "token=" + sessionStorage.getItem("token") + "&" + "callback=?";
			
    	$.getJSON('getuser', params, function(user)
    	{
    		userJson = user;
    		if(userJson.lastname !== '')
    		{
    			document.getElementById('userfirstname').value = user.firstname;
    	    	document.getElementById('userlastname').value = user.lastname;
    	    	document.getElementById('userorg').value = user.org;
    	    	document.getElementById('usertitle').value = user.title;
    	    	document.getElementById('useremail').value = user.email;
    	    	document.getElementById('userphone').value = user.phone;
    		}
    	});
    }
    
    function onUpdateProfile()
    {
    	if(document.getElementById('userfirstname').value !== userJson.firstname ||
    		document.getElementById('userlastname').value !== userJson.lastname ||
    		 document.getElementById('userorg').value !== userJson.org ||
    		  document.getElementById('usertitle').value !== userJson.title ||
    		   document.getElementById('useremail').value !== userJson.email ||
    		    document.getElementById('userphone').value !== userJson.phone)
    	{
    		var params = "token=" + sessionStorage.getItem("token")
			+ "&" + "firstname=" + document.getElementById('userfirstname').value
			+ "&" + "lastname=" + document.getElementById('userlastname').value
			+ "&" + "org=" + document.getElementById('userorg').value
			+ "&" + "title=" + document.getElementById('usertitle').value
			+ "&" + "email=" + document.getElementById('useremail').value
			+ "&" + "phone=" + document.getElementById('userphone').value
			+ "&" + "callback=?"
		
			$.getJSON('updateuser', params, function(mssgJson)
			{
				document.getElementById('message').textContent= mssgJson.message;
			});
    	}
    	else
    	{
    		document.getElementById('message').textContent= 'No change made to User Profile';
    	}
    	
    	window.location=document.getElementById('closepopup').href;
    }
    
    function getFamilyReferencesFromServer(year)
    {
    	familyparams = "token=" + sessionStorage.getItem("token") +
    	"&year=" + year + "&callback=?";
    	$.getJSON('references', familyparams, function(data)
    	{
    		familyRefs = data;
    		if(familyRefs.length=== 0)
    		{
    			clearPageData();
    			document.getElementById('onc').value= "No";
    			document.getElementById('ref').value= "Families";
    		}
    		else if(sessionStorage.getItem('famref')=== 'NNA')
    		{
    			famIndex= 0;
    			getFamilyFromServer(year, familyRefs[0].id);
    		}
    		else
    		{
//    			getFamilyFromServer(year, sessionStorage.getItem('famref'));
    			findFamilyIndexAndGetFamily(year, sessionStorage.getItem('famref'))
    		}	
    	});
    }
    
    function searchForFamilyReferencesFromServer(year, searchstring)
    {
    	searchparams = "token=" + sessionStorage.getItem("token") +
    	"&year=" + year + "&searchstring=" + searchstring + "&callback=?";
    	$.getJSON('familysearch', searchparams, function(data)
    	{
    		searchRefs = data;
    		if(searchRefs.length > 0)
    		{
    			//find the first family reference and fetch it
    			findFamilyIndexAndGetFamily(year, searchRefs[0].id)
    			
    			//if more than one family reference was found, show buttons
    			if(searchRefs.length === 1)
    			{
    				document.getElementById('srch-prior').style.visibility = 'hidden';
    				document.getElementById('srch-next').style.visibility = 'hidden';
    			}
    			else
    			{
    				document.getElementById('srch-prior').style.visibility = 'visible';
    				document.getElementById('srch-next').style.visibility = 'visible';
    			}
    		}
    		
    	});
    }
    
    function findFamilyIndexAndGetFamily(year, searchref)
    {
		var index=0;
		while(familyRefs[index].id !== searchref)
		{
			index++;
		}
		
		if(index < familyRefs.length)
		{
			famIndex = index;
			getFamilyFromServer(year, familyRefs[index].id)
		}
    }
    
    function getFamilyFromServer(year, id)
    {
    	familyparams = "token=" + sessionStorage.getItem("token") +
    	"&year=" + year +
    	"&targetid=" + id + "&callback=?";
    	$.getJSON('getfamily', familyparams, function(data)
    	{
    		famJson = data;
    		document.getElementById('onc').value= famJson.oncNum;
			document.getElementById('ref').value= famJson.targetID;
			document.getElementById('batch').value= famJson.BatchNum;
			document.getElementById('dns').value= famJson.DNSCode;
    		document.getElementById('hohfn').value= famJson.HOHFirstName;
			document.getElementById('hohln').value= famJson.HOHLastName;
			document.getElementById('famstat').value= famJson.fstatus;
			document.getElementById('delstat').value= famJson.dstatus;
			document.getElementById('mealstat').value= famJson.mealStatus;
			document.getElementById('language').value= famJson.Language;
			document.getElementById('homephone').value= famJson.HomePhone;
			document.getElementById('cellphone').value= famJson.OtherPhone;
			document.getElementById('email').value= famJson.FamilyEmail;
			document.getElementById('housenum').value= famJson.HouseNum;
			document.getElementById('street').value= famJson.Street;
			document.getElementById('unit').value= famJson.UnitNum;
			document.getElementById('city').value= famJson.City;
			document.getElementById('zipcode').value= famJson.ZipCode;
			document.getElementById('transport').value= famJson.transportation;
			document.getElementById('detail').value= famJson.details;
			
			getAgentFromServer(year, famJson.agentID);
			getFamiliesChildrenFromServer(year, famJson.targetID);
			getAdultsFromServer(year, famJson.targetID);
			getMealFromServer(year, famJson.mealID);
			
			sessionStorage.setItem("famref", id);
    	});
    }
    
    function clearPageData()
    {
    	document.getElementById('onc').value= '';
		document.getElementById('ref').value= '';
		document.getElementById('batch').value= '';
		document.getElementById('dns').value= '';
		document.getElementById('hohfn').value= '';
		document.getElementById('hohln').value= '';
		document.getElementById('famstat').value= '';
		document.getElementById('delstat').value= '';
		document.getElementById('mealstat').value= '';
		document.getElementById('language').value= '';
		document.getElementById('homephone').value= '';
		document.getElementById('cellphone').value= '';
		document.getElementById('email').value= '';
		document.getElementById('housenum').value= famJson.HouseNum;
		document.getElementById('street').value= '';
		document.getElementById('unit').value= '';
		document.getElementById('city').value= '';
		document.getElementById('zipcode').value= '';
		document.getElementById('transport').value= '';
		document.getElementById('detail').value= '';
		
		document.getElementById('agentname').value= '';
		document.getElementById('agentorg').value= '';
		document.getElementById('agenttitle').value= '';
		document.getElementById('agentphone').value= '';
		document.getElementById('agentemail').value= '';
		
		$("#tchildbody").empty();
		$("#adultbody").empty();
		
		removeOptions(document.getElementById("childfn"));
		document.getElementById('age').value= '';
		
		$("#twishbody").empty();
		
		document.getElementById('mealtype').value = '';
	  	document.getElementById('dietres').value = '';
    }
    
    function getAdultsFromServer(year, targetid)
    {
    	adultsparams=  "token=" + sessionStorage.getItem("token") + "&" +
			"year=" + year + "&" + "targetid=" + targetid + "&" + "callback=?";
			
		$.getJSON('adults', adultsparams, function(data)
		{
	    	adultsJson = data;
	     	updateAdultTable();
		});
    }
    
    function getMealFromServer(year, mealid)
    {
    	//get meal and update if family meal id > 1
	    if(mealid > -1)
		{
	     	var mealparams = "token=" + sessionStorage.getItem("token") + "&" +
	     						"year=" + year + "&" +
	     						"mealid=" + mealid + "&" +
	     						"callback=?";	
	     					
	     	$.getJSON('getmeal', mealparams, function(meal)
	     	{
	       		document.getElementById('mealtype').value = meal.type;
	   	  		document.getElementById('dietres').value = meal.dietaryRestrictions;
	   		});
    	}
	    else
	    {
	   		document.getElementById('mealstat').value = "None Requested";
	   		document.getElementById('mealtype').value = "None";
    		document.getElementById('dietres').value = "";
    	}   		
    }
    
    function getAgentFromServer(year, agtid)
    {
    	agentparams = "token=" + sessionStorage.getItem("token") +
    	"&year=" + year +
    	"&agentid=" + agtid + "&callback=?";
    	$.getJSON('getagent', agentparams, function(data)
    	{
    		agtJson = data;
    		document.getElementById('agentname').value= agtJson.name;
			document.getElementById('agentorg').value= agtJson.org;
			document.getElementById('agenttitle').value= agtJson.title;
    		document.getElementById('agentphone').value= agtJson.phone;
			document.getElementById('agentemail').value= agtJson.email;
    	});
    }
    
    function getFamiliesChildrenFromServer(year, targetid)
    {
    	childrenparams=  "token=" + sessionStorage.getItem("token") + "&" +
		"year=" + year + "&" +
		"targetid=" + targetid + "&" +
		"callback=?";

		$.getJSON('children', childrenparams, function(data)
		{
			childrenJson = data;
			updateChildTable();
			if(childrenJson.length > 0)
			{
				getChildWishesFromServer(year, childrenJson[0].id);
			}
		});
    }
    
    function getChildWishesFromServer(year, childid)
    {
    	childwishparams=  "token=" + sessionStorage.getItem("token") + "&" +
		"year=" + year + "&" +
		"childid=" + childid + "&" +
		"callback=?";

		$.getJSON('wishes', childwishparams, function(data)
		{
			wishJson = data;
			updateWishTable(wishJson);
		});
    }
   
    function updateChildTable()
    {
    	$("#tchildbody").empty();
    	
    	var childSelect = document.getElementById("childfn");
    	clearSelect(childSelect);
    	
    	for(var i=0; i<childrenJson.length; i++)
		{
    		addChildTableRow(i, childrenJson[i]);	//add row to table
    		
    		var option = document.createElement("option"); //add child fn to select
			option.text = childrenJson[i].firstname;
	    	option.value = i;

	    	try 
    		{
        		childSelect.add(option, null); //Standard 
    		} 
    		catch(error) 
    		{
        		childSelect.add(option); // IE only
    		}
    		
   		}
    	
    	if(childrenJson.length > 0)
    	{
    		var child = childrenJson[0];
    		var ageInput = document.getElementById('age');
    		ageInput.value = getAge(child.sDOB) + " " + child.gender.toLowerCase();
    	}
    }
	
	function updateWishTable(wishJson)
    {
    	$("#twishbody").empty();
    	
    	for(var i=0; i<wishJson.length; i++)
		{
    		addWishTableRow(i, wishJson[i]);	//add row to table
		}
    }
	
	function updateAdultTable()
    {
    	$("#tadultbody").empty();
    	
    	for(var i=0; i<adultsJson.length; i++)
		{
    		addAdultTableRow(i, adultsJson[i]);	//add row to table
		}
    }
	
	function addChildTableRow(cnum, child)
    {
        var childinfo = [child.firstname, child.lastname, child.sDOB, child.gender, child.school];
        var fieldname = ["childfn", "childln", "childdob", "childgender", "childschool"];
        var columnsize= ['108px', '116px', '72px', '56px', '144px'];
        var fieldsize = [15, 16, 10, 6, 20];
        
	    var tabBody = document.getElementById("childtable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
    	
        for(index=0; index < childinfo.length; index++)	//create the child info cells
        {
        	cell= document.createElement("td");
        	cell.style.width = columnsize[index];
    	    content= document.createElement("input");
 	    	content.type="text";
 	    	content.name=fieldname[index] + cnum;
        	content.value = childinfo[index];
        	content.setAttribute("size", fieldsize[index]);
        	cell.appendChild(content);
        	row.appendChild(cell);
        	
        }

        tabBody.appendChild(row);
    }
	
	function addWishTableRow(wn, childwish)
    {
		var wishinfo= [wn+1, childwish.name, childwish.detail, childwish.restriction, childwish.partner, childwish.status];
		var wishcolumnsize= ['56px', '120px', '240px', '8px', '240px', '80px'];
		var wishfieldsize= [1, 12, 32, 1, 32, 10];
        
	    var tabBody = document.getElementById("wishtable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < wishinfo.length; index++)	//create the child info cells
        {
        	cell= document.createElement("td");
        	cell.style.width = wishcolumnsize[index];
    	    content= document.createElement("input");
 	    	content.type="text";
        	content.value = wishinfo[index];
        	content.readOnly = true;
        	content.setAttribute("size", wishfieldsize[index]);
        	cell.appendChild(content);
        	row.appendChild(cell);
        }
        
        tabBody.appendChild(row);
    }
	
	function addAdultTableRow(anum, adult)
    {
	    var tabBody = document.getElementById("adulttable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
        
        cell= document.createElement("td");
        adultname= document.createElement("input");
        adultname.type="text";
        adultname.name="adultname" + anum;
        adultname.value = adult.name;
        adultname.setAttribute("size", 22);
        cell.appendChild(adultname);
        row.appendChild(cell);
        
        cell= document.createElement("td");
        var adultgender= document.createElement("input");
        adultgender.type="text";
        adultgender.name="adultgender" + anum;
        adultgender.value = adult.gender;
        adultgender.setAttribute("size", 8);
        cell.appendChild(adultgender);
        row.appendChild(cell);

        tabBody.appendChild(row);
    }
	
	function getAge(childbirthdate)
	{
		var yearCB = document.getElementById("yearlist");
		var curryear = yearCB.options[yearCB.selectedIndex].value;
		var xmasday = new Date(curryear,11,25,0,0,0,0);
		var birthdate= new Date(childbirthdate);
		
		var age= [];
		
		if(birthdate >= xmasday)
		{
			age.push('Newborn');
		}
		else
		{
	    	var y= [xmasday.getFullYear(), birthdate.getFullYear()],
	    	ydiff= y[0]-y[1],
	    	m= [xmasday.getMonth(), birthdate.getMonth()],
	    	mdiff= m[0]-m[1],
	    	d= [xmasday.getDate(), birthdate.getDate()],
	    	ddiff= d[0]-d[1];

	    	if(mdiff < 0 || (mdiff === 0 && ddiff < 0))--ydiff;
	    	if(mdiff < 0) mdiff+= 12;
	    	if(ddiff < 0)
	    	{
	        	birthdate.setMonth(m[1]+1, 0);
	        	ddiff= birthdate.getDate()-d[1]+d[0];
	        	--mdiff;
	    	}
	    	
	    	if(ydiff > 0) age.push(ydiff+ ' yr. old');
	    	else if(mdiff >= 0) age.push(mdiff+ ' mos. old');
		}
	    	return age.join('');
	}
	
	function updateForYearSelection()
    {
    	//get selected year
    	var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		sessionStorage.setItem('curryear', year);
		sessionStorage.setItem('famref', "NNA");
		getFamilyReferencesFromServer(year);
    }
	
	function updateForChildSelection()
    {
    	//get selected year
    	var childCB = document.getElementById("childfn");
		var child = childrenJson[childCB.selectedIndex];
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		var ageInput = document.getElementById('age');
		ageInput.value = getAge(child.sDOB) + " " + child.gender.toLowerCase();
    	
		getChildWishesFromServer(year, child.id)	//get child wishes from server
    }
	
	function clearSelect(select)
	{
		var i;
		for(i=select.options.length-1;i>=0;i--)
		{
	    	select.remove(i);
	    }
	}
	
	function onNextFamily()
	{
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		if(familyRefs.length > 0 && famIndex < familyRefs.length-1)
		{
			famIndex++;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
		else if(familyRefs.length > 0 && famIndex === familyRefs.length-1)
		{
			famIndex= 0;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
	}
	
	function onPriorFamily()
	{
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		if(familyRefs.length > 0 && famIndex > 0)
		{
			famIndex--;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
		else if(familyRefs.length > 0 && famIndex === 0)
		{
			famIndex= familyRefs.length-1;
			getFamilyFromServer(year, familyRefs[famIndex].id);
		}
	}
	
	function onNextSearchFamily()
	{
		if(searchRefs.length > 0 && searchIndex < searchRefs.length-1)
		{
			searchIndex++;
		}
		else if(searchRefs.length > 0 && searchIndex === searchRefs.length-1)
		{
			searchIndex= 0;
		}
		
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		findFamilyIndexAndGetFamily(year, searchRefs[searchIndex].id);
	}
	
	function onPriorSearchFamily()
	{
		if(searchRefs.length > 0 && searchIndex > 0)
		{
			searchIndex--;
		}
		else if(searchRefs.length > 0 && searchIndex === 0)
		{
			searchIndex= searchRefs.length-1;
		}
		
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		findFamilyIndexAndGetFamily(year, searchRefs[searchIndex].id);
	}
	
	function onSearch()
	{
		var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		
		var search = document.getElementById("search");
		
		if(search.value !== "" && familyRefs.length > 0)
		{
			searchForFamilyReferencesFromServer(year, search.value)	
		}
		else
		{
			onClearSearch();
		}
	}
	
	function onClearSearch()
	{
		document.getElementById('srch-prior').style.visibility = 'hidden';
		document.getElementById('srch-next').style.visibility = 'hidden';	
	}
	
	function onCancel()
    {
		window.location=document.getElementById('closepopup').href;
    }
	
	function removeOptions(selectbox)
	{
	    var i;
	    for(i=selectbox.options.length-1;i>=0;i--)
	    {
	        selectbox.remove(i);
	    }
	}
	
	function post(path, params, method) 
	{
	    method = method || "post"; // Set method to post by default if not specified.

	    // The rest of this code assumes you are not using a library.
	    // It can be made less wordy if you use one.
	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

	    for(var key in params) 
	    {
	        if(params.hasOwnProperty(key)) 
	        {
	            var hiddenField = document.createElement("input");
	            hiddenField.setAttribute("type", "hidden");
	            hiddenField.setAttribute("name", key);
	            hiddenField.setAttribute("value", params[key]);

	            form.appendChild(hiddenField);
	         }
	    }

	    document.body.appendChild(form);
	    form.submit();
	}
  </script>
  <style type="text/css">	
	form label 
	{
		font-size: 90%;
 		display: inline-block;
 		text-align: left;
	}
	#controlbar
	{
		width:90%;
		height: 28px;
		margin:0 auto;
		background-color: #E8E8E8;
		border: 1px solid black;
	}
	table, th, td {border: 1px solid black;}
	#searchbar {float: right;}
	#lblonc { width: 52px; }
	#lblref { width: 56px; }
	#lblbatch { width: 64px; }
	#lbldns { width: 62px; }
	#lblhohfn { width: 114px; }
	#lblhohln { width: 120px; }
	#lblfamstat { width: 104px; }
	#lbldelstat { width: 104px; }
	#lblmealstat { width: 116px; }
    #lbllanguage { width: 100px; }
	#lblhomephone { width: 94px; }
	#lblcellphone { width: 96px; }
	#lblhousenum { width: 68px; }
	#lblstreet { width: 140px; }
    #lblunit { width: 64px; }
	#lblcity { width: 138px; }
	#lblzipcode { width: 56px; }
	#lblagentname { width: 132px; }
    #lblagentorg { width: 128px; }
	#lblagenttitle { width: 140px; }
	#lblagentphone { width: 96px; }
	.clearable
	{
  		background: #fff url(http://i.stack.imgur.com/mJotv.gif) no-repeat right -10px center;
  		border: 1px solid #999;
  		padding: 3px 18px 3px 4px;     /* Use the same right padding (18) in jQ! */
  		border-radius: 3px;
  		transition: background 0.4s;
	}
	.clearable.x  { background-position: right 5px center; } /* (jQ) Show icon */
	.clearable.onX{ cursor: pointer; }              /* (jQ) hover cursor style */
	.clearable::-ms-clear {display: none; width:0; height:0;} /* Remove IE default X */
  </style>
</head>
<body>
  <div id='topbar' class="topbar">
    <img src="onclogo" height="55" width="75"/>
	<p><span id="banner">USER_NAME, welcome to Our Neighbor's Child Data Managment System</span><br>
	<span id="message">USER_MESSAGE</span></p>
  </div>
  <nav>
	<ul>
	    <li><select id="yearlist" name="yearlist" onchange="updateForYearSelection()"></select></li>
<!--	  <li><a href="">Agents <span class="caret"></span></a>
		  <div>
		    <ul>
			  <li><a href="">Manage Agents</a></li>
		    </ul>
		  </div>
	    </li> `-->
	    <li><a href="">Families <span class="caret"></span></a>
		  <div>
		    <ul>
<!-- 		  <li><a href="">Manage Families</a></li>  -->	
			  <li><a href="familystatus?token=REPLACE_TOKEN">Refer Family</a></li>
		    </ul>
		  </div>
	    </li>
	</ul>
	<ul class='floatright'>
	<li><a href="">Client Service <span class="caret"></span></a>
		  <div>
		    <ul>
			  <li><a href="#openModal" onclick='showEditProfileDialog()'>Edit Profile</a></li>
		    </ul>
		  </div>
	    </li>	    
	    <li id="logoutli"><a href="logout?token=REPLACE_TOKEN">Logout</a></li>
	</ul>
  </nav>
  <div id='controlbar'>
    <span id="navigatebar">
  	  <button id="prior" onclick="onPriorFamily()">Prior Family</button>
  	  <button id="next" onclick="onNextFamily()">Next Family</button>
  	</span>
  	<span id='searchbar'>  
  	  <label for="search">Search for:</label> 
	  <input class='clearable' id="search" type="text" placeholder="search text <enter>">
	  <button id="srch-prior" onclick="onPriorSearchFamily()">Prior</button>
  	  <button id="srch-next" onclick="onNextSearchFamily()">Next</button>
    </span>
  </div>
  <form id="familyreferral" action="referfamily" onsubmit="return submitReferral()" method="post">
  <input id='token' type="hidden" name="token">
  <input id='year' type="hidden" name="year">
  <input id='targetid' type="hidden" name="targetid">
  <br>
  <fieldset>
  <legend class="legend-major">Family Information & Status</legend>
    <label id='lblonc' for="onc">ONC #</label>
    <label id= 'lblref' for="ref">Ref #</label>
    <label id= 'lblbatch' for="batch">Batch #</label>
    <label id= 'lbldns' for="dns">DNS</label>
    <label id= 'lblhohfn' for="hohfn">First Name</label>
    <label id= 'lblhohln' for="hohln">Last Name</label>
    <label id= 'lblfamstat' for="famstat">Family Status</label>
    <label id= 'lbldelstat' for="delstat">Delivery Status</label>
    <label id= 'lblmealstat' for="mealstat">Meal Status</label>
    <br>
    <input id='onc' type="text" size="6" readonly>
    <input id='ref' type="text" size="7" readonly>
    <input id="batch" type="text" size="8" readonly>
    <input id="dns" type="text" size="8" readonly>
    <input id='hohfn' title="First Name" name="hohFN" type="text" size="16" readonly>
    <input id='hohln' title="Last Name" name="hohLN" type="text" size="17" readonly>
    <input id='famstat' title="Family Status" type="text" size="14" readonly>
    <input id='delstat' title="Delivery Status" type="text" size="14" readonly>
    <input id='mealstat' title="Meal Status" type="text" size="20" readonly>
    <br>
    <label id= 'lbllanguage' for="language">Language</label>
    <label id= 'lblhomephone' for="homephone">Home Phone</label>
    <label id= 'lblcellphone' for="cellphone">Mobile Phone</label>
    <label id= 'lblemail' for="email">Email</label>
    <br>
    <input id= 'language' title="Primary language" name="language" type= "text" size="13" readonly>
    <input id="homephone" title="Home Phone #" name="homephone" type="text" size="13" readonly>
    <input id= "cellphone" title="Cell Phone #" name="cellphone" type="text" size="13" readonly>
    <input id='email' title="E-mail address" name="email" type="email" size="30" readonly>
	<br>
	<label id="lblhousenum" for="housenum">House #</label>
    <label id="lblstreet" for="street">Street</label>
    <label id='lblunit' for="unit">Unit</label>
    <label id='lblcity' for="city">City</label>
    <label id='lblzipcode' for="zipcode">Zip</label>
    <label id='lbltransport' for="transport">Transportation?</label>
    <br>
	<input id="housenum"name="housenum" type="text" size="8" readonly>
    <input id="street" name="street" type="text" size="20"readonly>
    <input id="unit" name="unit" type="text" size="8" readonly>
    <input id="city" name="city" size='20'>
    <input id="zipcode" name="zipcode" size='7'>
	<input id="transport" name="transport" type="text" size="14">
	<input type="checkbox" id="sameaddress" title="Uncheck to edit HoH or Delivery address" onclick="sameAddressClicked(this)">Alt Address?
  </fieldset>
  <br>
  <fieldset>
  <legend class="legend-major">Referring Agent Information</legend>
    <label id='lblagentname' for="agentname">Name</label>
    <label id='lblagentorg' for="agentorg">Organization</label>
    <label id='lblagenttitle' for="agenttitle">Title</label>
    <label id='lblagentphone' for="agentphone">Phone</label>
    <label id='lblagentemail' for="agentemail">Email</label>
    <br>
	<input id="agentname" title="Agent Name" name="agentfn" type="text" size="18" readonly>
    <input id="agentorg" title="Agent Organization" name="agentln" type="text" size="18" readonly>
    <input id="agenttitle" title="Agent Title" name="agenttitle" type="text" size="20" readonly>
    <input id="agentphone" title="Agent Phone" name="agentphone" type="text", size="13" readonly>
    <input id="agentemail" title="Agent Email" name="agentemail" type="text" size="30" readonly>
  </fieldset>
  <br>
  <fieldset>
	<legend class="legend-major">Family Members</legend>
      <fieldset class='floatleft'> 
	  <legend>Children</legend>
	  <table id='childtable'>
	  	<thead>
    		<tr>
        		<th>First Name</th>
        		<th>Last Name</th>
        		<th>DoB </th>
        		<th>Gender </th>
        		<th>School </th>
    		</tr>
        </thead>
      	<tbody id="tchildbody">
      	</tbody>
      </table>
  	</fieldset>
	<fieldset class='floatleft'>
	  <legend>Additional Adults</legend>
	  <table id='adulttable'>
	  	<thead>
    		<tr>
        		<th>Name</th>
        		<th>Gender </th>
    		</tr>
    	</thead>
    	<tbody id="tadultbody">
    	</tbody>
      </table>
    </fieldset> 
  </fieldset>
  <br>
  <fieldset>
   <legend class="legend-major">Children's Wishes</legend>
   <select id="childfn" onchange="updateForChildSelection()"> </select>
   <label>is a</label>
   <input id='age' type='text' size='13'>
  	<table id="wishtable" border="1">
  	<thead>
    	<tr>
        	<th>Wish #</th>
        	<th>Name</th>
        	<th>Detail</th>
        	<th>Res</th>
        	<th>Partner</th>
        	<th>Status</th>	
    	</tr>
      </thead>
      <tbody id="twishbody">
      </tbody>
  </table>
  </fieldset>
  <br>
  <fieldset>
  <legend class="legend-major">Meal Assistance</legend>
  	<label for="mealtype">Requested Holiday: </label>
    <input id="mealtype" name="mealtype" size="18" readonly>
    <label for="deitres">Restrictions: </label>
	<input id="dietres" type="text" name="dietres" size="68" readonly>
  </fieldset>
  <br>
  <fieldset>
   <legend class="legend-major">Family Details</legend>
	<textarea id="detail", rows="3". cols="80"></textarea>
  </fieldset>
  <br>
</form>
<!-- Edit Profile Dialog -->
  <div id="openModal" class="modalDialog">
	<div id='inner'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div id='dialogtopbar'>
		  <img src="onclogo" height="45" width="65"/>
		  <span id='dialogmssg'>Edit ONC Profile</span>
		</div>
    	<p><label for="userfirstname">First Name:</label>
    	<input type="text" id="userfirstname" name="firstname" autofocus></p>
    	<p><label for="userlastname">Last Name:</label>
    	<input type="text" id="userlastname" name="lastname"><br></p>
    	<p><label for="userorg" >Organization:</label>
    	<input type="text" id="userorg" name="org"></p>
    	<p><label for="usertitle">Title:</label>
    	<input type="text" id="usertitle" name="title"><br></p>
    	<p><label for="useremail">E-Mail:</label>
    	<input type="text" id="useremail" name="email"></p>
    	<p><label for="userphone">Phone:</label>
    	<input type="text" id="userphone" name="phone"><br></p>
    	<div id='buttonbar'>
      	  <button id="cancel" onclick="onCancel()">Cancel</button>
      	  <button id="update" onclick="onUpdateProfile()">Update</button>
    	</div> 
	</div>
  </div>
</body>
</html>