 <!DOCTYPE html>
<html>
<head lang="en">
    <title>ONC Main Login Page</title>
    <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
    <script>
	var currYear;
	var priorYear;
	var pyFamJson = [];
	var cyFamJson = [];
	
	sessionStorage.setItem('token', "REPLACE_TOKEN");
	sessionStorage.setItem('thanksgivingCutoff', "THANKSGIVING_CUTOFF");
	sessionStorage.setItem('decemberCutoff', "DECEMBER_CUTOFF");
	sessionStorage.setItem('editCutoff', "EDIT_CUTOFF");
	
    $( document ).ready(function()
    {
    	currYear = new Date().getFullYear();
		document.getElementById('curragtenslbl').innerHTML = currYear.toString() + ' Families Referred By:';
		
		priorYear = new Date().getFullYear()-1;
		sessionStorage.setItem("prioryear", priorYear);
		
    	//get the list of years from the data base and put it in the year combo box
    	var dbyearsparams = "token=" + sessionStorage.getItem("token") + "&callback=?";
    	$.getJSON('dbStatus', dbyearsparams, function(data)
    	{
			var combo = document.getElementById("dbYears");
			var yearCombo = document.getElementById("yearlist");
    		for (var i = data.length-1; i >= 0; i--)
    		{
    			var option = document.createElement("option");
    			option.text = data[i].id;
    	    	option.value = data[i].id;
    	    	if(option.value != currYear)	//dont add current year to year selections
    	    	{
    	    		try 
    	    		{
    	        		combo.add(option, null); //Standard 
    	    		} 
    	    		catch(error) 
    	    		{
    	        		combo.add(option); // IE only
    	    		}
    	    	}
    	    	
    	    	try 
	    		{
	        		yearCombo.add(option, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		yearCombo.add(option); // IE only
	    		}
    		}
    	});
    	
    	//determine the color and enabling of the Refer New Family button
		var btnRNF = document.getElementById('new');
		if(sessionStorage.getItem('decemberCutoff') === 'disabled')
		{
			btnRNF.style.backgroundColor='Gray';
        	btnRNF.disabled = true;
		}
    	
    	//get the list of current year agents & familes from the server and display them
    	//this also gets prior year families and displays them
    	getCYAgentsAndFamiliesFromServer(currYear.toString());
    });
    
    function getPYFamiliesFromServer(year)
    {
    	familiesparams = "token=" + sessionStorage.getItem("token") + "&" +
    	"year=" + sessionStorage.getItem("prioryear") + "&callback=?";
    	$.getJSON('families', familiesparams, function(data)
    	{
    		pyFamJson = data;
    		updatePYTable();
    	});
    }
    
    function getCYFamiliesFromServer(year)
    {
    	familiesparams = "token=" + sessionStorage.getItem("token") + "&" +
		  				 "year=" + currYear.toString() + "&callback=?";
    	
    	$.getJSON('families', familiesparams, function(data)
    	{
    		cyFamJson = data;
    		updateCYTable();
    	});
    }
    
    function getPYAgentsAndFamiliesFromServer(year)
    {
    	//get reference to agent combobox
    	var agtcb = document.getElementById('pyagents');
    	
    	//clear the agent combobox
    	agtcb.options.length = 0;
		
    	//get updated agentJson from server and place into combobox
    	var agentsparams = "token=" + sessionStorage.getItem("token") + "&" +
    						"year=" + sessionStorage.getItem("prioryear") + "&callback=?";
    	
    	$.getJSON('agents', agentsparams, function(data)
    	{
			//add the "Anyone" option if there is more than one agent object
			if(data.length > 1)
			{
				var agtOption = document.createElement("option");
				agtOption.text = "Anyone";
	    		agtOption.value = -1;
	    		try 
	    		{
	        		agtcb.add(agtOption, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		agtcb.add(agtOption); // IE only
	    		}
			}
	    	
	    	//add the agents for the year
    		for (var i=0; i < data.length; i++)
    		{
    			var agtOption = document.createElement("option");
    			agtOption.text = data[i].name;
    	    	agtOption.value = data[i].id;
    	    	try 
    	    	{
    	        	agtcb.add(agtOption, null); //Standard 
    	    	}
    	    	catch(error)
    	    	{
    	        	agtcb.add(agtOption); // IE only
    	    	}  
    		}
	    	
	    	getPYFamiliesFromServer(year);
    	});
    }
    
    function getCYAgentsAndFamiliesFromServer(year)
    {
    	//get reference to agent combobox
    	var agtcb = document.getElementById('curragents');
    	
    	//clear the agent combobox
    	agtcb.options.length = 0;
		
    	//get updated agentJson from server and place into combobox
    	var agentsparams = "token=" + sessionStorage.getItem("token") + "&" +
    						"year=" + currYear.toString() + "&callback=?";
    	
    	$.getJSON('agents', agentsparams, function(data)
    	{
			//add the "Anyone" option if there is more than one agent object
			if(data.length > 1)
			{
				var agtOption = document.createElement("option");
				agtOption.text = "Anyone";
	    		agtOption.value = -1;
	    		try 
	    		{
	        		agtcb.add(agtOption, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		agtcb.add(agtOption); // IE only
	    		}
			}
	    	
	    	//add the agents for the year
    		for (var i=0; i < data.length; i++)
    		{
    			var agtOption = document.createElement("option");
    			agtOption.text = data[i].name;
    	    	agtOption.value = data[i].id;
    	    	try 
    	    	{
    	        	agtcb.add(agtOption, null); //Standard 
    	    	}
    	    	catch(error)
    	    	{
    	        	agtcb.add(agtOption); // IE only
    	    	}  
    		}
	    	
    		getCYFamiliesFromServer(year);
    		
    		//get the list of prior year agents & families from the server and display them
        	getPYAgentsAndFamiliesFromServer(priorYear.toString());
    	});
    }
    
    function updateForYearSelection()
    {
    	//get selected year
    	var yearCB = document.getElementById("dbYears");
		priorYear = yearCB.options[yearCB.selectedIndex].value;
		sessionStorage.setItem("prioryear", priorYear);
    	
    	getPYAgentsAndFamiliesFromServer(priorYear);	//get agents & families from server
    }
    
    function updatePYTable()
    {
    	$("#tbodyid").empty();
    	var e = document.getElementById("pyagents");
    	var agentID = e.options[e.selectedIndex].value;
    	
    	for(var i=0; i<pyFamJson.length; i++)
		{
    		if(agentID == -1 || agentID == pyFamJson[i].agentID)
    		{
    			addPYTableRow(pyFamJson[i]);	//add row to table
    		}
		}
    }
    
    function updateCYTable()
    {
    	$("#tbodycurrid").empty();
    	var e = document.getElementById("curragents");
    	var agentID = e.options[e.selectedIndex].value;
    	
    	for(var i=0; i<cyFamJson.length; i++)
		{
    		if(agentID == -1 || agentID == cyFamJson[i].agentID)
    		{
    			addCYTableRow(cyFamJson[i]);	//add row to table
    		}
		}
    }
    
    function addPYTableRow(family)
    {
        if (!document.getElementsByTagName) return;
        
        var mealstatus;
        if(family.mealStatus === 'Thanksgiving_Confirmed')
        	mealstatus = 'Thanksgiving \u2713';
        else if(family.mealStatus === 'December_Confirmed')
        	mealstatus = 'December \u2713';
        else if(family.mealStatus === 'Both_Confirmed')
        	mealstatus = 'Both \u2713';
        else
        	mealstatus = family.mealStatus;
        
        var familyinfo = [family.oncNum, family.HOHFirstName, family.HOHLastName, family.DNSCode,
      					  family.fstatus, family.dstatus, mealstatus];
        
	    var tabBody = document.getElementById("pyTable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < familyinfo.length; index++)	//create the family info cells
        {
        	cell = document.createElement("td");
        	cell.appendChild(document.createTextNode(familyinfo[index]));
        	row.appendChild(cell);
        }
        
        btn = document.createElement("button");
        btn.value=family.idNum;
        btn.innerHTML = "Refer";
        btn.onclick=function() {referFamily(family.targetID);};

        if(alreadyReferred(family.targetID) === true)
        {
        	btn.style.backgroundColor='Red';
        	btn.disabled = true;
        }
        else if(sessionStorage.getItem('decemberCutoff') === 'disabled')
        {
        	btn.style.backgroundColor='Gray';
        	btn.disabled = true;
        }
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
    
    function addCYTableRow(family, tablename, buttonname)
    {
        if (!document.getElementsByTagName) return;
        
        
        var fstatus;
        if(family.fstatus === 'Packaged')
        	fstatus = 'Packaged \u2713';
        else
        	fstatus = family.fstatus;
        
        var dstatus;
        if(family.dstatus === 'Delivered')
        	dstatus = 'Delivered \u2713';
        else if(family.dstatus === 'Empty')
        	dstatus = 'None';
        else
        	dstatus = family.dstatus;
        
        var mealstatus;
        if(family.mealStatus === 'Thanksgiving_Confirmed')
        	mealstatus = 'Thanksgiving \u2713';
        else if(family.mealStatus === 'December_Confirmed')
        	mealstatus = 'December \u2713';
        else if(family.mealStatus === 'Both_Confirmed')
        	mealstatus = 'Both \u2713';
        else
        	mealstatus = family.mealStatus;
        	
        var familyinfo = [family.oncNum, family.HOHFirstName, family.HOHLastName, family.DNSCode,
      					  fstatus, dstatus, mealstatus];
        
	    var tabBody = document.getElementById("cyTable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < familyinfo.length; index++)	//create the family info cells
        {
        	cell = document.createElement("td");
        	cell.appendChild(document.createTextNode(familyinfo[index]));
        	row.appendChild(cell);
        }
        
        btn = document.createElement("button");
        btn.value=family.id;
		btn.value=family.HOHLastName;
        btn.innerHTML = "Edit";
        btn.onclick=function() {update(family.targetID);};
        if(sessionStorage.getItem('editCutoff') === 'disabled')
        {
        	btn.style.backgroundColor='Gray';
        	btn.disabled = true;
        }
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
    
    function referFamily(targetID)
    {
    	sessionStorage.setItem("targetid", targetID);
    	
		var params = {}
		params["year"] = priorYear.toString();
		params["token"] = sessionStorage.getItem('token');
		params["targetid"] = targetID;
		
		post('referral', params);
    }
    
    function newFamily()
    {
    	sessionStorage.setItem("targetid", "NNA");
		sessionStorage.setItem("prioryear", new Date().getFullYear()-1);
    	
    	var params = {}
		params["token"] = sessionStorage.getItem('token');
		
		post('newfamily', params);
    }
    
    function alreadyReferred(targetID)
    {
    	var index = 0;
    	while(index < cyFamJson.length && cyFamJson[index].targetID != targetID)
    	    index++;
    	
    	if(index < cyFamJson.length)
    		return true;
    	else
    	    return false;
    }
    
    function update(targetID)
    {
    	sessionStorage.setItem("targetid", targetID);
    	var params = {}
		params["year"] = currYear.toString();
		params["token"] = sessionStorage.getItem('token');
		params["targetid"] = targetID;
		
		post('familyupdate', params);
    }
    
	function post(path, params, method) 
	{
	    method = method || "post"; // Set method to post by default if not specified.

	    // The rest of this code assumes you are not using a library.
	    // It can be made less wordy if you use one.
	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

	    for(var key in params) {
	        if(params.hasOwnProperty(key)) {
	            var hiddenField = document.createElement("input");
	            hiddenField.setAttribute("type", "hidden");
	            hiddenField.setAttribute("name", key);
	            hiddenField.setAttribute("value", params[key]);

	            form.appendChild(hiddenField);
	         }
	    }

	    document.body.appendChild(form);
	    form.submit();
	}
    </script>
    <style type="text/css">
    	.topbar 
    	{
    		width:900px;
    		height:72px;
    		margin:0 auto;
    		background-color: #FF0000;
			border: 1px solid black;
		}
		.topbar img
		{
    		float:left;
   			border: 0;
		}
		.tables
		{
			width:900px;
			margin:0 auto;
			background-color: #3CB371;
			border: 1px solid black;
		}
        .scrolltable 
        {
            overflow-x: scroll;
            height: 100%;
            display: flex;
            display: -webkit-flex;
            flex-direction: column;
            -webkit-flex-direction: column;
        }
        .scrolltable > .header {
        }
        .scrolltable > .body {
            /*noinspection CssInvalidPropertyValue*/
            width: -webkit-fit-content;
            overflow-y: scroll;
            flex: 1;
            -webkit-flex: 1;
        }
        th, td {
            min-width: 116px;
        }
        /* an outside constraint to react against */
        #constrainer {
            width: 880px;
            height: 200px;
        }
        #constrainer2 {
            width: 880px;
            overflow-x: scroll;
        }
        #constrainer2 table {
            overflow-y: scroll;
        }
        #constrainer2 tbody {
            overflow-x: scroll;
            display: block;
            height: 200px;
        }
        #constrainer2 thead {
            display: table-row;
        }
        /* only styling below here */
        #constrainer, #constrainer2 {
            border: 1px solid black;
        }
        table {
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid gray;
        }
        th {
            background-color: lightgrey;
            border-width: 1px;
        }
        td {
            border-width: 1px;
        }
        tr:first-child td {
            border-top-width: 0;
        }
        tr:nth-child(odd) {
            background-color: #ffffff;
        }
        tr:nth-child(even) {
            background-color: lightgrey;
        }       
        button
        {
        	background-color: #336699;
        	color: #ffffff;
        }      
        #new
        {
       		float: right;
        	background-color: #336699;
        	color: #ffffff;
        }
        input
        {
        	float: right;
        	background-color: #336699;
        	color: #ffffff;
        }
        #topbar p
        {
       		text-align: center;
        }
        #banner
        {
    		font-weight: bold;
    		font-style: italic;
    		font-size: 130%;
		}
		nav 
		{
			background-color: #E5FFCC;
			border: 1px solid #dedede;
			border-radius: 4px;
			box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.055);
			color: #888;
			display: block;
			margin: 8px 22px 8px 22px;
			overflow: hidden;
/*			width: 90%; 	*/
		}
		nav ul 
		{
			margin: 0;
			padding: 0;
		}
		nav ul li 
		{
			display: inline-block;
			list-style-type: none;
		
			-webkit-transition: all 0.2s;
			-moz-transition: all 0.2s;
			-ms-transition: all 0.2s;
			-o-transition: all 0.2s;
			transition: all 0.2s; 
		}
		nav > ul > li > a 
		{
			color: black;
			display: block;
			line-height: 36px;
			padding: 0 24px;
			text-decoration: none;
		}
		nav > ul > li > a > .caret 
		{
			border-top: 4px solid #aaa;
			border-right: 4px solid transparent;
			border-left: 4px solid transparent;
			content: "";
			display: inline-block;
			height: 0;
			width: 0;
			vertical-align: middle;
	
			-webkit-transition: color 0.1s linear;
			-moz-transition: color 0.1s linear;
			-o-transition: color 0.1s linear;
	  		transition: color 0.1s linear; 
		}
		nav > ul > li:hover 
		{
          background-color: rgb( 40, 44, 47 );
        }
        nav > ul > li:hover > a 
        {
          color: rgb( 0, 204, 0 );
        }
        nav > ul > li:hover > a > .caret 
        {
          border-top-color: rgb( 0, 204, 0 );
        }
        nav > ul > li > div 
        {
			background-color: rgb( 40, 44, 47 );
			border-top: 0;
			border-radius: 0 0 4px 4px;
			box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.055);
			display: none;
			margin: 0;
			opacity: 0;
			position: absolute;
			width: 165px;
			visibility: hidden;
			z-index: 100;
	
			-webkit-transiton: opacity 0.2s;
			-moz-transition: opacity 0.2s;
			-ms-transition: opacity 0.2s;
			-o-transition: opacity 0.2s;
			-transition: opacity 0.2s;
		}
		nav > ul > li:hover > div 
		{
			display: block;
			opacity: 1;
			visibility: visible;
		}
		nav > ul > li > div ul > li 
		{
			display: block;
		}
		nav > ul > li > div ul > li > a 
		{
			color: #fff;
			display: block;
			padding: 12px 24px;
			text-decoration: none;
		}
		nav > ul > li > div ul > li:hover > a 
		{
			background-color: rgba( 255, 255, 255, 0.1);
		}
    </style>
</head>
<body>
  <div id="topbar" class="topbar">
    <img src="onclogo" height="55" width="75"/>
	<p><span id="banner">USER_NAME, welcome to Our Neighbor's Child Family Referral System</span><br>
	<span id="message">USER_MESSAGE</span></p>
  </div>
  <nav>
	<ul>
		<li><select id="yearlist" name="yearlist"></select></li>
		<li>
			<a href="ONC Data.html">ONC Data <span class="caret"></span></a>
			<div>
				<ul>
					<li><a href="products.html#chair">Families</a></li>
					<li><a href="products.html#table">Partners</a></li>
					<li><a href="cooker.html">Wishes</a></li>
				</ul>
			</div>
		</li>
		<li><a href="about.html">Profile</a></li>
		<li><a href="logout?token=REPLACE_TOKEN">Logout</a></li>
	</ul>
  </nav>
  <div class="tables">
	<br>
	<form>
		<select id="dbYears" name="dbYear" onchange="updateForYearSelection()" ></select>
		<label for="pyagents">Families Referred By:</label>
		<select id="pyagents"  onchange="updatePYTable()" name="pyagtID"></select>
	</form>
	<div id="constrainer2">
      <table id="pyTable">
        <thead>
        <tr>
       		<th>ONC #</th><th>First Name</th><th>Last Name</th><th>DNS Code</th>
        	<th>Family Status</th><th>Delivery Status</th><th>Meal Status</th>
        </tr>
        </thead>
        <tbody id="tbodyid">
        </tbody>
	  </table>
	</div>
	<p><button id="new" onclick="newFamily()">Refer New Family</button></p>
	<br>
	<form>
		<label id= curragtenslbl for="curragents">xxxx Families Referred By:</label>
		<select id="curragents"  onchange="updateCYTable()" name="curragtID"></select>
	</form>
  	<div id="constrainer2">
      <table id = cyTable>
        <thead>
        <tr>
       		<th>ONC #</th><th>First Name</th><th>Last Name</th><th>DNS Code</th>
        	<th>Family Status</th><th>Delivery Status</th><th>Meal Status</th>
        </tr>
        </thead>
        <tbody id="tbodycurrid">
        </tbody>
	  </table>
	</div>

	<form action="logout?token=REPLACE_TOKEN" method="post">
  		<input id="submit" type="submit" value="Logout">
	</form>
  </div>
</body>
</html>