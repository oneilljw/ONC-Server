<!DOCTYPE html>
<html>
<head lang="en">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>ONC Regions</title>
  <link rel="stylesheet" type="text/css" href="oncdialogstylesheet.css">
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jq-3.3.1/jszip-2.5.0/dt-1.10.20/b-1.6.1/b-html5-1.6.1/r-2.2.3/sc-2.0.1/sl-1.3.1/datatables.min.css"/>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script> 
  <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jq-3.3.1/jszip-2.5.0/dt-1.10.20/b-1.6.1/b-html5-1.6.1/r-2.2.3/sc-2.0.1/sl-1.3.1/datatables.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/plug-ins/1.10.20/api/sum().js"></script>
  <script type="text/javascript" src="editprofile2.js"></script>
  <script>
  	var getTableData = {resource:'regions'};
	var updateObject = {storageItem:'regionid', resource:'regionupdate'};
	var bResettingFilters = false;
	var filters = null;
	
    $( document ).ready(function()
    {
    	//get filter selects
    	filters = document.getElementById('filterspan').getElementsByTagName('select');
    	
    	var table = $('#oncdatatable').DataTable( 
    	{
    		dom: 'B<"search"f>rtip',
    		orderClasses: false,
    		stripeClasses:['stripe1','stripe2'],
    		buttons: 
    		{
    			buttons: 
    			[
    			    { 
    			    	text: 'Edit Street', 
    			    	action: function ( e, dt, node, config )
    			    	{
    			    		var selectedRow = table.row('.selected').data();
    			    		if(typeof selectedRow !== 'undefined')		    						
    			    			rowAction(selectedRow.id);
    			    	},
    			    	enabled: false 
    			    },
    			    { 
    				    text: 'Add New Street', 
    				    action: function ( e, dt, node, config ) { newAction(); } 
    				},
    			    'excel',
    			    'pdf'
    			],
    			dom: 
    			{
    				button: 
    			    {
    			    	className: ''
    			    }
    			}
    		},
    		columns: 
    		[
    			{ data: "id", visible: false},
    			{ data: "streetDir", width: '28px', className: 'dt-body-center' },
    			{ data: "streetName", width: '450px', className: 'dt-head-left'  },
    			{ data: "streetType", width: '48px' },
    			{ data: "postDir", width: '28px' },
    			{ data: "zipCode", width: '64px',className: 'dt-body-center' },
    			{ data: "region", width: '28px', className: 'dt-body-center' },
    			{ data: "addressNumLow", width: '56px', className: 'dt-body-center' },
    			{ data: "addressNumHi", width: '56px', className: 'dt-body-center' },
    			{ data: "schoolRegion", visible: false},
    			{ data: "school", width: '96px', className: 'dt-head-left' }
    		],
    		scrollY: "340px",
    		scrollCollapse: true,
    		paging: false
    	});
    	
   		//get the list of years from the data base so we can determine current year
    	var params = "callback=?";
    	$.getJSON('zipcodes', params, function(codes)
		{
			buildZipCodeSelect(codes);
			
			initializeFiltersAndRowSelection();
			
			//get regions from the server
    		params = "zipcode=" + document.getElementById('zipcode').value + "&callback=?";
    		$.getJSON('regions', params, function(data)
    		{
    			if(data.hasOwnProperty('error'))
    				window.location=document.getElementById('timeoutanchor').href;
    			else
    			{
					table.rows.add(data);
						
					table.column(6).search(document.getElementById('region').value);
    				table.column(9).search(document.getElementById('school').value);
    
    				table.draw();
    			}			
			});
		});
    	
    	createGroupTable();	//create profile dialog group table
    });
    
    function buildZipCodeSelect(codes)
    {
    	bResettingFilters == true;
    	
    	var zipCodeSelect = document.getElementById('zipcode');
        for(var i=zipCodeSelect.options.length-1; i>=0; i--)
        	zipCodeSelect.remove(i); 
        
        for(i=0; i<codes.length; i++)
        	zipCodeSelect.options[i] = new Option(codes[i], codes[i]);
        
        bResettingFilters == false;
    }
    
    function getTableDataParams()
    {
    	return "zipcode=" + document.getElementById('zipcode').value + "&callback=?";
    }
    
    function initializeFiltersAndRowSelection()
    {
    	//set the filters to last stored setting
    	var bFilterSet = false;
    	for(i=0; i<filters.length; i++)
    	{
    		if(sessionStorage.getItem(filters[i].id) != null)
    		{	
    			filters[i].value = sessionStorage.getItem(filters[i].id);
    			bFilterSet = bFilterSet || filters[i].selectedIndex > 0;
    		}
    	}
    	
		document.getElementById('resetbtn').disabled = !bFilterSet;
		
		//enable row selection
		var table = $('#oncdatatable').DataTable();
		$('#oncdatatable tbody').on( 'click', 'tr', function () 
		{
		    if( $(this).hasClass('selected') )
		    {
		    	$(this).removeClass('selected');
		    }
		    else
		    {
		    	table.$('tr.selected').removeClass('selected');
		    	$(this).addClass('selected');
		    	table.button( 0 ).enable( true );
		    }
		});
		    				
		$('#oncdatatable tbody').on('dblclick', 'tr', function () 
		{
		    var selectedRowData = table.row( this ).data();
		    rowAction(selectedRowData.id);
		});
    }
    
    function getTableDataFromServer()
    {
    	$.getJSON(getTableData.resource, getTableDataParams(), function(data)
    	{
    		if(data.hasOwnProperty('error'))
    			window.location=document.getElementById('timeoutanchor').href;
    		else
    		{
    			var table = $('#oncdatatable').DataTable();
        		table.clear();
    			table.rows.add(data);
    			
    			for(i=0; i < filters.length; i++)
    				if(filters[i].dataset.type === 'search')
    					table.column(filters[i].dataset.column)
    					 	.search(filters[i].value);

    			table.draw();
    		}
    	});
    }
    
    function rowAction(objectID)
    {
    	sessionStorage.setItem(updateObject.storageItem, objectID);
		var params = {}
		params[updateObject.storageItem] = objectID;
		
		post(updateObject.resource, params);
    }
    
    function newAction()
    {
    	sessionStorage.setItem(updateObject.storageItem, "New");
    	
    	var params = {}
		post(updateObject.resource, params);
    }
    
    function executeFilter(filter)
    {
    	if(!bResettingFilters)
		{
    		sessionStorage.setItem(filter.id, filter.value);
    	    
    	    if(filter.dataset.type === 'data')
    	    	getTableDataFromServer();
    	    else
    	    {	
    	    	var table = $('#oncdatatable').DataTable();
    	    	table.column(filter.dataset.column).search(filter.value).draw();
    	    }
    	    	
    	    document.getElementById('resetbtn').disabled = !isFilterSet();
		}	
    }
    
    function isFilterSet()
    {
    	var filterSet = false;
    	for(i=0; i<filters.length; i++)
    	{
    		if(filters[i].selectedIndex > 0)
    		{
    			filterSet = true;
    			break;
    		}	
    	}
    	
    	return filterSet;
    }
      
    function onResetFilters()
    {	
    	//set flag to ingnoe listener events
    	bResettingFilters = true;
    		
    	//reset the filters
    	var fetchData = false;
    	for(i=0; i < filters.length; i++)
    	{
    		if(filters[i].dataset.type ==='data')
    			fetchData = fetchData || filters[i].selectedIndex > 0;
    		
    		filters[i].selectedIndex = 0;
    		sessionStorage.setItem(filters[i].id, filters[i].value);
    	}
    	
    	//disable the reset button
    	document.getElementById('resetbtn').disabled = true;
    	
    	//fetch data if necesary (filters/draws the table), otherwise filter the table
    	if(fetchData)
    		getTableDataFromServer();
    	else
    	{
    		var table = $('#oncdatatable').DataTable();
			table.search( '' ).columns().search( '' ).draw();	
    	}
    	
    	//clear the ignore listener event flag
    	bResettingFilters = false;
    }
    
    function onChangePW() 
    {
    	if(validate())
   	 	{
			var params = {}	
			params["field1"] = document.getElementById('currpw').value;
			params["field2"] = document.getElementById('newpw').value;
    		$.post('reqchangepw', params, function(response)
    		{
    			document.getElementById('banner-message').textContent= response;
    			document.getElementById('welcome-div').style.display = "block";
    		});
    		
    		document.getElementById('currpw').value = "";
	    	document.getElementById('newpw').value = "";
	    	document.getElementById('verifypw').value = "";
    		window.location=document.getElementById('closepopup').href;
    	}
    }
    
    function onProfileNotChanged()
    {
		var params = {}	
		$.post('profileunchanged', params, function(response)
		{
			document.getElementById('banner-message').textContent= response.message;
		}, "jsonp");
		
		window.location=document.getElementById('closepopup').href;
    }

    function onCancel()
    {
		window.location=document.getElementById('closepopup').href;
    }
	
	function validate()
    {
		var mssgEl = document.getElementById("pw_mssg");
    	var currpwEl = document.getElementById("currpw");
        var pass1El = document.getElementById("newpw");
        var pass2El = document.getElementById("verifypw");
        var ok = true;
        
        if(currpwEl.value == "")
        {
        	//alert("current password field empty");
            currpwEl.style.borderColor = "#E34234";
            
            mssgEl.style.color = "Red";
            mssgEl.textContent = "Current password not provided, please try again!";
            ok = false;
        }
        else if(pass1El.value == '' || pass2El.value == '')
		{
			//alert("Either New or Verify Passwords are empty");
    		pass1El.style.borderColor = "#E34234";
    		pass2El.style.borderColor = "#E34234";
    
    		mssgEl.style.color = "Red";
    		mssgEl.textContent = "Please fill out both New and Confirm, try again!";
    		ok = false;
		}        
        else if(pass1El.value !== pass2El.value)
        {
            //alert("New and Verify Passwords do not match");
            pass1El.style.borderColor = "#E34234";
            pass2El.style.borderColor = "#E34234";
            
            mssgEl.style.color = "Red";
            mssgEl.textContent = "New and Verify passwords don't match, please try again!";
            ok = false;
        }

        return ok;
    }
    
    function onLogoutLink()
	{
    	sessionStorage.clear();	//clear filter settings, id's, etc.
    	
		var params = {};
		post('logout', params);
	}
	
	function onSessionTimeout()
	{
		sessionStorage.clear();	//clear filter settings, id's, etc.
		
		window.location.assign('timeout');
	}
    
	function post(path, params, method) 
	{
	    method = method || "post"; // Set method to post by default if not specified.

	    // The rest of this code assumes you are not using a library.
	    // It can be made less wordy if you use one.
	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

	    for(var key in params) 
	    {
	    	if(params.hasOwnProperty(key))
	        {
	            var hiddenField = document.createElement("input");
	            hiddenField.setAttribute("type", "hidden");
	            hiddenField.setAttribute("name", key);
	            hiddenField.setAttribute("value", params[key]);

	        	form.appendChild(hiddenField);
	        }
	    }

	    document.body.appendChild(form);
	    form.submit();
	}
    </script>
    <style type="text/css">
    .header 
	{
		height: 70px;
		width: 90% ;
		margin: auto;
		background-color: #484e78;
	}
	.header-links
	{
		display: inline-block;
    	margin-top: 25px;   
	}
	.logo-img
	{
		vertical-align: middle;
    	margin-top: -8px;
    	margin-left: 5px;
    	margin-right: 10px;
    	max-height: 55px;
    	max-width: 75px;
	}
	.headerbuttons
	{
		display: inline-block;
		float: right;
		margin-top: 22px;
	}
	/* Dropdown Button */
	.dropbtn 
	{
  		color: white;
  		font-size: 16px;
  		background-color: Transparent;
  		background-repeat:no-repeat;
  		border: none;
  		cursor:pointer;
  		overflow: hidden;
  		outline:none;
	}
	.dropdown 
	{
  		position: relative;
  		display: inline-block;
	}
	.dropdown-content
	{
 		display: none;
  		position: absolute;
  		background-color: #f1f1f1;
  		min-width: 160px;
  		box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
 		 z-index: 1;
	}
	.dropdown-content a
	{
  		color: black;
  		padding: 12px 16px;
  		text-decoration: none;
  		display: block;
	}
	.dropdown-content a:hover {background-color: #bbb7ff;}
	.dropdown:hover .dropdown-content {display: block;}
	.dropdown:hover .dropbtn {background-color: #bbb7ff;}
	.header-anchor { text-decoration: none;}
	.resetbtn { margin-bottom: 8px; }	
	#logoutbtn
	{
		font-size: 16px;
  		background-color: Transparent;
  		background-repeat:no-repeat;
  		border: none;
  		cursor:pointer;
	}
	#logoutbtn:hover { background-color: #bbb7ff; }
	#welcome-div
	{
		width: 90%;
		height: 36px;
		line-height: 36px;
		margin-top: -8px;
		margin-right: auto;
		margin-left: auto;
		background-color: black;
		display: none;
	}
	#welcome-div p
	{
		color: white;
		font-size: 18px;
		font-style: italic;
		padding-left: 8px;
	}
	.breadcrumb-first, .breadcrumb-middle, .breadcrumb-current, .breadcrumb-only
	{
		color: white;
		font-size: 18px;
		text-decoration: none;
	}
	.breadcrumb-current, .breadcrumb-only { font-style: italic; }
	.breadcrumb-middle:before, .breadcrumb-current:before
	{
		color: white;
		content: ">\00a0";
		padding-left: 4px;
		padding-right: 4px;
	}
	.breadcrumb-first:hover, .breadcrumb-middle:hover { background-color: #bbb7ff; }
	#filterspan
	{
		display: inline-block;
    	margin-left: 10px;
	}
	select 
	{
		display: ck;
		vertical-align: middle;
		width: auto;
		font-size: 12px;
		font-family: sans-serif;
		font-weight: 700;
		color: #444;
		line-height: 1.3;
		padding: .6em 1.4em .5em .8em;
		max-width: 100%;
		box-sizing: border-box;
		margin: 0;
		border: 1px solid #aaa;
		box-shadow: 0 1px 0 1px rgba(0,0,0,.04);
		border-radius: .5em;
		-moz-appearance: none;
		-webkit-appearance: none;
		appearance: none;
		background-color: #fff;		
		background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%);
		background-repeat: no-repeat, repeat;
		background-position: right 0.5em top 50%, 0 0;
		background-size: .65em auto, 100%;
	}
	select::-ms-expand { display: none; }
	select:hover { border-color: #888; }
	select-css:focus 
	{
		border-color: #aaa;
		box-shadow: 0 0 1px 3px rgba(59, 153, 252, .7);
		box-shadow: 0 0 0 3px -moz-mac-focusring;
		color: #222;
		outline: none;
	}
	select option { font-weight: normal; }
	.filterlabel
	{
		display: inline-block;
		margin-left: 6px;
    	margin-right: 6px;
		font-size: 18px;
	}
	form
	{
		width:90%;
		min-width: 900px;
		margin: 0 auto;
		border: none;
	}
	fieldset 
	{
		margin-top: 5px;
		background-color: #E8E8E8;
	}
	legend
	{
  		padding: 0.2em 0.5em;
  		border:1px solid black;
  		background-color: #E8E8E8;
  		font-size:80%;
  		text-align:left;
	}
	button 
	{
		background-color: #336699;
		color: #ffffff;
    	border-radius: 6px;
  		border: none;
  		padding: 4px 6px;
  		font-size: 14px;
	}
	button:disabled
	{
		background-color: gray;
	}
	#tablediv 
	{ 
		width: 90%;
		margin: auto;
	}
	.dt-buttons
	{
		margin: 5px 0px 5px 0px;
	}
	.dt-buttons .disabled 
	{
		background-color: gray;
	}
	th 
	{
		background-color: lightgrey;
		border: 1px solid gray;
   		border-width: 1px;
	}
	td
	{
		border: 1px solid gray;
		border-width: 1px; 
	}	
	table.dataTable tbody tr.stripe1
	{
    	background-color: #FFFFFF;
	}
	table.dataTable tbody tr.stripe2 
	{
		background-color: #E8E8E8;
    }
    table.dataTable tbody tr.stripe1.selected
	{
    	background-color: #b4c2d9;
	}
	table.dataTable tbody tr.stripe2.selected
	{
    	background-color: #b4c2d9;
	}
	.search
	{
		font-weight: bold;
		padding: 10px 8px;	
	}
	div.dataTables_filter input 
	{
		width: 120px;
	}
	.floatleft { float:left; }
	.floatright { float:right; }
    </style>
</head>
<body>
  <a href="#editProfile" id="editprofileanchor" style="visibility: hidden">Edit Profile</a>
  <a href="#timeoutdlg" id="timeoutanchor" style="visibility: hidden">Timeout</a> 
  <div class='header'> 
    <img class='logo-img' src="onclogo">
    <span class='header-links'>
	  <a class='breadcrumb-first' href='dashboard'>Dashboard</a>
      <a class='breadcrumb-current' href='#'>Regions</a>
    </span>   
    <div class='headerbuttons'>
      <div class='dropdown'>
        <button class=dropbtn>Profile</button>
        <div class='dropdown-content'>
      	  <a href="#editProfile" onclick='showEditProfileDialog()'>Edit Profile</a>
      	  <a href="#chgpwdlg">Change Password</a>
      	</div> 
      </div>
      <button id='logoutbtn' onclick='onLogoutLink()'>Logout</button>
    </div>
  </div>
  <div id="welcome-div">
    <p id='banner-message'>BANNER_MESSAGE<p>
  </div>  
  <form>
    <fieldset>
  	  <legend>Filters</legend>
		<span id='filterspan'>
		  <label for='zipcode' class='filterlabel'>Zip Code:</label> 
		  <select id="zipcode" title="Zip Code" data-type='data' data-column='5' onchange='executeFilter(this)'>
		    <option value="20120">20120</option>
		  </select>
		  <label for='region' class='filterlabel'>Region:</label>
		  <select id="region" title="Region" data-type='search' data-column='6'  onchange='executeFilter(this)'>
		    <option value="">Any</option>
		    <option value="A">A</option>
		    <option value="B">B</option>
		    <option value="C">C</option>
		    <option value="D">D</option>
		    <option value="E">E</option>
		    <option value="F">F</option>
		    <option value="G">G</option>
		    <option value="H">H</option>
		    <option value="I">I</option>
		    <option value="J">J</option>
		    <option value="K">K</option>
		    <option value="L">L</option>
		    <option value="M">M</option>
		    <option value="N">N</option>
		    <option value="O">O</option>
		    <option value="P">P</option>
		    <option value="Q">Q</option>
		    <option value="R">R</option>
		    <option value="S">S</option>
		    <option value="T">T</option>
		    <option value="U">U</option>
		    <option value="V">V</option>
		    <option value="W">W</option>
		    <option value="X">X</option>
		    <option value="Y">Y</option>
		    <option value="Z">Z</option>
		  </select>
		  <label for='school' class='filterlabel'>School:</label>
	  	  <select id="school" title="Elementary School" data-type='search' data-column='9' onchange='executeFilter(this)'>
	  	  	<option value="">Any</option>
	  		<option value="J">Brookfield</option>
	  		<option value="A">Bull Run</option>
	  		<option value="B">Centre Ridge</option>
	  		<option value="C">Centreville</option>
	  		<option value="F">Cub Run</option>
	  		<option value="H">Deer Park</option>
	  		<option value="Q">Floris</option>
	  		<option value="K">Greenbriar East</option>
	  		<option value="L">Greenbriar West</option>
	  		<option value="M">Lees Corner</option>
	  		<option value="I">LondonTowne</option>
	  		<option value="R">Lutie Lewis Coates</option>
	  		<option value="S">McNair</option>
	  		<option value="T">Navy</option>
	  		<option value="P">Oak Hill</option>
	  		<option value="N">Poplar Tree</option>
	  		<option value="D">Powell</option>
	  		<option value="E">Union Mill</option>
	  		<option value="G">Virginia Run</option>
	  		<option value="O">Willow Springs</option>
	  		<option value="X">Missing</option>
	  		<option value="Z">None of the Above</option>
		  </select>
		</span>
		<span class='floatright resetbtn'>
			<button id="resetbtn" onclick='onResetFilters()'>Reset Filters</button>
		</span>
	</fieldset>		
  </form>		
  <div id='tablediv'>
    <table id="oncdatatable" class='display' style="width:100%">
      <thead>
      <tr>
        <th>ID</th>
       	<th>Dir</th>
       	<th>Street Name</th>
       	<th>Type</th>
        <th>Post Dir</th>
        <th>Zip Code</th>
        <th>Region</th>
        <th>Low #</th>
        <th>High #</th>
        <th>School Region</th>
        <th>Elementary School</th>
      </tr>
      </thead>
      <tbody>
      </tbody>
    </table>
  </div>
  <!-- Edit Profile Dialog -->
  <div id="editProfile" class="modalDialog">
	<div class='inner extended-width'>
	  <div class='dialogtopbar'>
		<img class='logo-img' src="onclogo">
		<span class='logospan'>Verify/Update ONC Profile</span>
	  </div>
	  <div class='edit-background'>
	  	  <fieldset id='contact-info-fieldset'>
  			  <legend class="legend-major">Contact Information</legend>
  			  <p>
    	  		<label for="userfirstname">Name:</label>
    	  		<input id='userfirstname' type="text" size="14" placeholder="First Name" onchange='checkForProfileChange()'>
    	  		<input id='userlastname' type="text" size="16" placeholder="Last Name" onchange='checkForProfileChange()'>
    		  </p>   		
    		  <p>
    	  		<label for="userorg">Organization:</label>
    	  		<input id='userorg' type="text" size="28" placeholder="Organization" onchange='checkForProfileChange()'>
    	 	  </p>
    	 	  <p>
    	  		 <label for="usertitle">Title:</label>
    	 		 <input id='usertitle' type="text" size="35" placeholder="Title" onchange='checkForProfileChange()'>
    	 	  </p>
    	 	  <p>
    	  		<label for="useremail">Email:</label>
    	  		<input id='useremail' type="text" size="34" placeholder="Email address" onchange='checkForProfileChange()'>
    	      </p>
    	 	  <p>
    	  		<label for="userphone">Phone:</label>
    	  		<input id='userphone' type="text" size="24" placeholder="Work Phone #" onchange='checkForProfileChange()'>
    	  	  </p>
      	  </fieldset>
	  </div>
      <div class='edit-background'>
		<fieldset>
			<legend class="legend-major">Your School(s) or Organization(s)</legend>  	 
  	    	 <table id="profiletable" class='display' style="width:100%">
  		 	  <thead>
    			<tr>
    				<th>Id</th>
        			<th>School or Organization</th>
    			</tr>
    		  </thead>
    		  <tbody>
    		  </tbody>
	    	</table>
	    	<div> 
  		  		<select id="groupselect" title="School or Organization Name" oninput='onGroupSelected(this)'></select>
  			</div>
  		</fieldset>
  	  </div>
      <div id='buttonbar'>
    	<button id="cancel" onclick="onProfileNotChanged()">No Change</button>
        <button id="update" onclick="onUpdateProfile(this)" disabled>Update</button>
      </div> 
	</div>
  </div>
<!-- Change Password Dialog -->
  <div id="chgpwdlg" class="modalDialog">
	<div class='inner regular-width'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class='logospan'>Change Password</span>
		</div>
		<p id='pw_mssg'>Enter current and new password:</p>
    	<p><label class='lbl_pw' for="currpw">Current Password:</label>
    	<input class='inp_pw' type="password" id="currpw" name="field1" autofocus></p>
    	<p><label class='lbl_pw' for="newpw">New Password:</label>
    	<input class='inp_pw' type="password" id="newpw" name="field2"></p>
    	<p><label class='lbl_pw' for="verifypw" >Verify Password:</label>
    	<input class='inp_pw' type="password" id="verifypw" name="field3"></p>
    	<div id='buttonbar'>
      	  <button id="cancel" onclick="onCancel()">Cancel</button>
      	  <button id="submit" onclick="onChangePW()">Change Password</button>
    	</div> 
	</div>
  </div>
  <!-- Timeout Dialog -->
  <div id="timeoutdlg" class="modalDialog">
	<div class='inner regular-width'>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo"/>
		  <span id='dialogmssg'>Session Timeout</span>
		</div>
		<p id='to_mssg'>Your session expired due to inactivity</p>
    	<div id='buttonbar'>
      	  <button id="timeoutsubmit" onclick="onSessionTimeout()">Logout</button>
    	</div> 
	</div>
  </div>  
</body>
</html>