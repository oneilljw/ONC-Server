 <!DOCTYPE html>
<html>
<head lang="en">
  <title>ONC Dashboard</title>
  <link rel="stylesheet" type="text/css" href="oncstylesheet.css">
  <link rel="stylesheet" type="text/css" href="oncdialogstylesheet.css">
  <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script>
	sessionStorage.setItem('token', "REPLACE_TOKEN");
	
    $( document ).ready(function()
    {
    	//get the list of years from the data base and put it in the year combo box
    	var dbyearsparams = "token=" + sessionStorage.getItem("token") + "&callback=?";
    	$.getJSON('dbStatus', dbyearsparams, function(data)
    	{
			var yearCombo = document.getElementById('yearlist');
    		for (var i = data.length-1; i >= 0; i--)
    		{
    			var option = document.createElement('option');
    			option.text = data[i].id;
    	    	option.value = data[i].id;

    	    	try 
	    		{
	        		yearCombo.add(option, null); //Standard 
	    		} 
	    		catch(error) 
	    		{
	        		yearCombo.add(option); // IE only
	    		}
	    		
	    		sessionStorage.setItem('curryear', yearCombo.value);
    		}
    		
    		google.charts.load('current', {packages: ['corechart', 'bar']});
            google.charts.setOnLoadCallback(drawFamStatusChart);		
    		
    	});
    	
    	$.getJSON('getstatus', dbyearsparams, function(status)
    	{
    		if(status.userstatus === 'Update_Profile')
    		{
				showEditProfileDialog();
				window.location=document.getElementById('editprofileanchor').href;
    		}
    	});
    });
    
    function drawFamStatusChart() 
    {
    	var familyparams = "token=" + sessionStorage.getItem("token")
		   +"&year=" + sessionStorage.getItem('curryear')
		   +"&maptype=family" + "&callback=?";
    	
    	var giftparams = "token=" + sessionStorage.getItem("token")
			+"&year=" + sessionStorage.getItem('curryear')
			+"&maptype=gift" + "&callback=?";
    	
    	var mealparams = "token=" + sessionStorage.getItem("token")
			+"&year=" + sessionStorage.getItem('curryear')
			+"&maptype=meal" + "&callback=?";
    	
    	var delparams = "token=" + sessionStorage.getItem("token")
			+"&year=" + sessionStorage.getItem('curryear')
			+"&maptype=delivery" + "&callback=?";

    	$.getJSON('metrics', familyparams, function(familyData)
        {
    		// Create our data table out of JSON data loaded from server.
    	    var famtable = new google.visualization.DataTable(familyData);
    	 	var famview = new google.visualization.DataView(famtable);
        	famview.setColumns([0, 1,
                          	{ calc: "stringify",
                              sourceColumn: 1,
                           	  type: "string",
                              role: "annotation" },
                            ]);

    		var famoptions = 
    		{
    			width: 480,
    			height: 240,
    			title: sessionStorage.getItem('curryear') + ' Family Status',
    			titleTextStyle: 
    			{
    		        fontSize: 16, // 12, 18 whatever you want (don't specify px)
    		        bold: true,    // true or false
    			},
    	    	chartArea: {width: '70%'},
    	    	hAxis: { minValue: 0 },
    	    	legend: {position: 'none'},
    		};
    	
    		var famstatuschart = new google.visualization.BarChart(document.getElementById('famstatus_div'));
    		famstatuschart.draw(famview, famoptions);
    		
    		$.getJSON('metrics', giftparams, function(giftData)
    		{
    		    // Create our data table out of JSON data loaded from server.
    		    var gifttable = new google.visualization.DataTable(giftData);
    		    var giftview = new google.visualization.DataView(gifttable);
    		    giftview.setColumns([0, 1,
    		    		             { calc: "stringify",
    		    		              	sourceColumn: 1,
    		    		                type: "string",
    		    		                role: "annotation"
    		    		             }]);

    		    var giftoptions = 
    		    {
    		    	width: 480,
    		    	height: 240,
    		    	title: sessionStorage.getItem('curryear') + ' Gift Status',
    		    	titleTextStyle: 
        			{
        		        fontSize: 16, // 12, 18 whatever you want (don't specify px)
        		        bold: true,    // true or false
        			},
    		    	chartArea: {width: '65%'},
    		    	hAxis: { minValue: 0 },
    		    	legend: {position: 'none'},
    		    	};
    		    		    	
    		    var giftstatuschart = new google.visualization.BarChart(document.getElementById('giftstatus_div'));
    		    giftstatuschart.draw(giftview, giftoptions);
    		    
    		    $.getJSON('metrics', mealparams, function(mealData)
    		    {
    		    	// Create our data table out of JSON data loaded from server.
    		    	var mealtable = new google.visualization.DataTable(mealData);
    		    	var mealview = new google.visualization.DataView(mealtable);
    		    	mealview.setColumns([0, 1,
    		                 		{ 
    		    					calc: "stringify",
    		                   		sourceColumn: 1,
    		    					type: "string",
    		                   		role: "annotation"
    		                 		}]);

    		    	var mealoptions = 
    		    	{
    		    		width: 480,
    		    		height: 240,
    		    		title: sessionStorage.getItem('curryear') + ' Meal Status',
    		    		titleTextStyle: 
    	    			{
    	    		        fontSize: 16, // 12, 18 whatever you want (don't specify px)
    	    		        bold: true,    // true or false
    	    			},
    		    		chartArea: {width: '65%'},
    		    		hAxis: { minValue: 0 },
    		    		legend: {position: 'none'},
    		    	};
    		    	
    		    	var mealstatuschart = new google.visualization.BarChart(document.getElementById('mealstatus_div'));
    		    	mealstatuschart.draw(mealview, mealoptions);
    		    	
    		    	$.getJSON('metrics', delparams, function(delData)
    		    	{
    		    		// Create our data table out of JSON data loaded from server.
    		    		var deltable = new google.visualization.DataTable(delData);
    		    		var delview = new google.visualization.DataView(deltable);
    		    		delview.setColumns([0, 1,
    		    	         				{ 
    		    							calc: "stringify",
    		    	           				sourceColumn: 1,
    		    							type: "string",
    		    	           				role: "annotation"
    		    	         				}]);

    		    		var deloptions = 
    		    		{
    		    			width: 480,
    		    			height: 240,
    		    			title: sessionStorage.getItem('curryear') + ' Gift Delivery Status',
    		    			titleTextStyle: 
    		    			{
    		    		        fontSize: 16, // 12, 18 whatever you want (don't specify px)
    		    		        bold: true,    // true or false
    		    			},
    		    			chartArea: {width: '65%'},
    		    			hAxis: { minValue: 0 },
    		    			legend: {position: 'none'},
    		    		};

    		    		var delstatuschart = new google.visualization.BarChart(document.getElementById('delstatus_div'));
    		    		delstatuschart.draw(delview, deloptions);
    		    	});
    		    });
    		});
        });   			
    }
    
    function showEditProfileDialog() 
    {
    	var params = "token=" + sessionStorage.getItem("token") + "&" + "callback=?";
			
    	$.getJSON('getuser', params, function(user)
    	{
    		userJson = user;
    		if(userJson.hasOwnProperty('error'))
      		{
				window.location=document.getElementById('timeoutanchor').href;
      		}
    		else if(userJson.lastname !== '')
    		{
    			document.getElementById('userfirstname').value = user.firstname;
    	    	document.getElementById('userlastname').value = user.lastname;
    	    	document.getElementById('userorg').value = user.org;
    	    	document.getElementById('usertitle').value = user.title;
    	    	document.getElementById('useremail').value = user.email;
    	    	document.getElementById('userphone').value = user.phone;
    		}
    	});
    }
    
    function onChangePW() 
    {
    	if(validate())
    	{
			var params = {}	
			params["token"] = sessionStorage.getItem('token');
			params["field1"] = document.getElementById('currpw').value;
			params["field2"] = document.getElementById('newpw').value;
    		$.post('reqchangepw', params, function(response)
    		{
    			document.getElementById('message').textContent= response;
    		});
    		
    		document.getElementById('currpw').value = "";
	    	document.getElementById('newpw').value = "";
	    	document.getElementById('verifypw').value = "";
    		window.location=document.getElementById('closepopup').href;
    	}
    }
    
    function onUpdateProfile()
    {
    	if(document.getElementById('userfirstname').value !== userJson.firstname ||
    		document.getElementById('userlastname').value !== userJson.lastname ||
    		 document.getElementById('userorg').value !== userJson.org ||
    		  document.getElementById('usertitle').value !== userJson.title ||
    		   document.getElementById('useremail').value !== userJson.email ||
    		    document.getElementById('userphone').value !== userJson.phone)
    	{
    		var params = "token=" + sessionStorage.getItem("token")
			+ "&" + "firstname=" + document.getElementById('userfirstname').value
			+ "&" + "lastname=" + document.getElementById('userlastname').value
			+ "&" + "org=" + document.getElementById('userorg').value
			+ "&" + "title=" + document.getElementById('usertitle').value
			+ "&" + "email=" + document.getElementById('useremail').value
			+ "&" + "phone=" + document.getElementById('userphone').value
			+ "&" + "callback=?"
		
			$.getJSON('updateuser', params, function(mssgJson)
			{
				document.getElementById('message').textContent= mssgJson.message;
			});
    		
    		window.location=document.getElementById('closepopup').href;
    	}
    	else
    	{
    		onProfileNotChanged();
    	}
    }
    
	
	function updateForYearSelection()
    {
    	//get selected year
    	var yearCB = document.getElementById("yearlist");
		var year = yearCB.options[yearCB.selectedIndex].value;
		sessionStorage.setItem('curryear', year);
		google.charts.setOnLoadCallback(drawFamStatusChart);
    }
	
	function clearSelect(select)
	{
		var i;
		for(i=select.options.length-1;i>=0;i--)
		{
	    	select.remove(i);
	    }
	}
	
	function removeOptions(selectbox)
	{
	    var i;
	    for(i=selectbox.options.length-1;i>=0;i--)
	    {
	        selectbox.remove(i);
	    }
	}
	
	function onProfileNotChanged()
    {
		var params = {}	
		params["token"] = sessionStorage.getItem('token');
		$.post('profileunchanged', params, function(response)
		{
			document.getElementById('message').textContent= response.message;
		}, "jsonp");
		
		window.location=document.getElementById('closepopup').href;
    }
	
	function onCancel()
    {
		window.location=document.getElementById('closepopup').href;
    }
	
	function validate()
    {
		var mssgEl = document.getElementById("pw_mssg");
    	var currpwEl = document.getElementById("currpw");
        var pass1El = document.getElementById("newpw");
        var pass2El = document.getElementById("verifypw");
        var ok = true;
        
        if(currpwEl.value == "")
        {
        	//alert("current password field empty");
            currpwEl.style.borderColor = "#E34234";
            
            mssgEl.style.color = "Red";
            mssgEl.textContent = "Current password not provided, please try again!";
            ok = false;
        }
        else if(pass1El.value !== pass2El.value)
        {
            //alert("New and Verify Passwords do not match");
            pass1El.style.borderColor = "#E34234";
            pass2El.style.borderColor = "#E34234";
            
            mssgEl.style.color = "Red";
            mssgEl.textContent = "New and Verify passwords don't match, please try again!";
            ok = false;
        }

        return ok;
    }
	
	function onSessionTimeout()
	{
		 window.location.assign('timeout');
	}
	
	function post(path, params, method) 
	{
	    method = method || "post"; // Set method to post by default if not specified.

	    // The rest of this code assumes you are not using a library.
	    // It can be made less wordy if you use one.
	    var form = document.createElement("form");
	    form.setAttribute("method", method);
	    form.setAttribute("action", path);

	    for(var key in params) 
	    {
	        if(params.hasOwnProperty(key)) 
	        {
	            var hiddenField = document.createElement("input");
	            hiddenField.setAttribute("type", "hidden");
	            hiddenField.setAttribute("name", key);
	            hiddenField.setAttribute("value", params[key]);

	            form.appendChild(hiddenField);
	         }
	    }

	    document.body.appendChild(form);
	    form.submit();
	}
  </script>
  <style type="text/css">	
	#controlbar
	{
		width:90%;
		height: 28px;
		margin:0 auto;
		background-color: #E8E8E8;
		border: 1px solid black;
	}
	.constrainer 
    {
        width: 90%;
		margin-left: auto;
		margin-right: auto;
        background-color: #3CB371;
        border: 1px solid black;
    }
  </style>
</head>
<body>
  <a href="#editProfile" id="editprofileanchor" style="visibility: hidden">Edit Profile</a>
  <a href="#timeoutdlg" id="timeoutanchor" style="visibility: hidden">Timeout</a>
  <div id='topbar' class="topbar">
    <img src="onclogo" height="55" width="75"/>
	<p><span id="banner">USER_NAME, welcome to Our Neighbor's Child Data Management System</span><br>
	<span id="message">USER_MESSAGE</span></p>
  </div>
  <nav>
	<ul>
	    <li><a href="#">Families <span class="caret"></span></a>
		  <div>
		    <ul>
		   	  <li><a href="familyview?token=REPLACE_TOKEN">View Family</a></li>
			  <li><a href="familystatus?token=REPLACE_TOKEN">Refer Family</a></li>
		    </ul>
		  </div>
	    </li>
	    <li><a href="#">Partners <span class="caret"></span></a>
		  <div>
		    <ul>
			  <li><a href="partnertable?token=REPLACE_TOKEN">View Partners</a></li>
		    </ul>
		  </div>
	    </li>
	     <li><a href="#">Regions <span class="caret"></span></a>
		  <div>
		    <ul>
			  <li><a href="regiontable?token=REPLACE_TOKEN">View Regions</a></li>
		    </ul>
		  </div>
	    </li>
	</ul>
	<ul class='floatright'>
	  <li id='profileli'><a href="#">Profile <span class="caret"></span></a>
		  <div>
		    <ul>
			  <li><a href="#editProfile" onclick='showEditProfileDialog()'>Edit Profile</a></li>
			  <li><a href="#chgpwdlg">Change Password</a></li>
		    </ul>
		  </div>
	  </li>	    
	  <li id="logoutli"><a href="logout?token=REPLACE_TOKEN">Logout</a></li>
	</ul>
  </nav>
  <div class='controlbar'>
    <select id="yearlist" name="yearlist" onchange="updateForYearSelection()"></select>
  </div>
  <!--Table and divs that hold the pie charts-->
  <div class="constrainer">
    <table>
      <tr>
        <td><div id="famstatus_div" style="border: 1px solid #ccc"></div></td>
        <td><div id="giftstatus_div" style="border: 1px solid #ccc"></div></td>
      </tr>
      <tr>
        <td><div id="mealstatus_div" style="border: 1px solid #ccc"></div></td>
        <td><div id="delstatus_div" style="border: 1px solid #ccc"></div></td>
      </tr>
    </table>
  </div>
<!-- Edit Profile Dialog -->
  <div id="editProfile" class="modalDialog">
	<div id='inner'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div id='dialogtopbar'>
		  <img src="onclogo" height="45" width="65"/>
		  <span id='dialogmssg'>Update ONC Profile</span>
		</div>
    	<p><label class='lbl_ep' for="userfirstname">First Name:</label>
    	<input class='inp_ep' type="text" id="userfirstname" name="firstname" autofocus></p>
    	<p><label class='lbl_ep' for="userlastname">Last Name:</label>
    	<input class='inp_ep' type="text" id="userlastname" name="lastname"><br></p>
    	<p><label class='lbl_ep' for="userorg" >Organization:</label>
    	<input class='inp_ep' type="text" id="userorg" name="org"></p>
    	<p><label class='lbl_ep' for="usertitle">Title:</label>
    	<input class='inp_ep' type="text" id="usertitle" name="title"><br></p>
    	<p><label class='lbl_ep' for="useremail">E-Mail:</label>
    	<input class='inp_ep' type="text" id="useremail" name="email"></p>
    	<p><label class='lbl_ep' for="userphone">Phone:</label>
    	<input class='inp_ep' type="text" id="userphone" name="phone"><br></p>
    	<div id='buttonbar'>
      	  <button id="cancel" onclick="onProfileNotChanged()">No Change</button>
      	  <button id="update" onclick="onUpdateProfile()">Update</button>
    	</div> 
	</div>
  </div>
<!-- Change Password Dialog -->
  <div id="chgpwdlg" class="modalDialog">
	<div id='inner'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div id='dialogtopbar'>
		  <img src="onclogo" height="45" width="65"/>
		  <span id='dialogmssg'>Change Password</span>
		</div>
		<p id='pw_mssg'>Enter current and new password:</p>
    	<p><label class='lbl_pw' for="currpw">Current Password:</label>
    	<input class='inp_pw' type="password" id="currpw" name="field1" autofocus></p>
    	<p><label class='lbl_pw'for="newpw">New Password:</label>
    	<input class='inp_pw' type="password" id="newpw" name="field2"><br></p>
    	<p><label class='lbl_pw'for="verifypw" >Verify Password:</label>
    	<input class='inp_pw' type="password" id="verifypw" name="field3"></p>
    	<div id='buttonbar'>
      	  <button id="cancel" onclick="onCancel()">Cancel</button>
      	  <button id="submit" onclick="onChangePW()">Change Password</button>
    	</div> 
	</div>
  </div>
  <!-- Timeout Dialog -->
  <div id="timeoutdlg" class="modalDialog">
	<div id='inner'>
		<div id='dialogtopbar'>
		  <img src="onclogo" height="45" width="65"/>
		  <span id='dialogmssg'>Session Timeout</span>
		</div>
		<p id='to_mssg'>Your session expired due to inactivity</p>
    	<div id='buttonbar'>
      	  <button id="submit" onclick="onSessionTimeout()">Logout</button>
    	</div> 
	</div>
  </div>    
</body>
</html>