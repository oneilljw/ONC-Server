<!DOCTYPE html>
<html>
<head lang="en">
  <title>ONC Holiday Assistance Request</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jq-3.3.1/jszip-2.5.0/dt-1.10.20/b-1.6.1/b-html5-1.6.1/r-2.2.3/sc-2.0.1/sl-1.3.1/datatables.min.css"/>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
  <link rel="stylesheet" type="text/css" href="oncstylesheet.css"> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jq-3.3.1/jszip-2.5.0/dt-1.10.20/b-1.6.1/b-html5-1.6.1/r-2.2.3/sc-2.0.1/sl-1.3.1/datatables.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/plug-ins/1.10.20/api/sum().js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/plug-ins/1.10.20/sorting/natural.js"></script>
  <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <script type="text/javascript" src="onccommon.js"></script>
  <script type="text/javascript" src="commonfamily.js"></script>
  <script>
  	var editedChild = {};	//holds original state of child when edit starts
  	var editedAdult = {};
  	
  	$( document ).ready(function()
	{
  		setBannerVisible(false);
  		createGroupTable();	//create profile dialog group table
  		
  		popluateCitySelects();
  	
  		//set the hidden values
  		document.getElementById('year').value= sessionStorage.getItem("currseason");
  		document.getElementById('targetid').value= sessionStorage.getItem("targetid");
  			
  		//setup the add child DoB year parameters with a 20 year window
  		let currentyear = sessionStorage.getItem("currseason");
  		for(year = currentyear; year > currentyear-21; year-- )
  			addComboBoxOption(document.getElementById('dobyear'), year, year);
  		
  		let months = ['January','February','March','April','May','June','July',
  					  'August','September','October','November','December'];  		
  		for(let i=0; i<months.length; i++)
  			addComboBoxOption(document.getElementById('dobmonth'), months[i], i+1);
	
  		//add days to days in month select
		for(i=1; i<=31; i++)
			addComboBoxOption(document.getElementById('dobday'), i, i);
  	
  		//clear the group combobox
  		var groupcb = document.getElementById('groupcb');
		groupcb.options.length = 0;
		
		//create the child table
		var childtable = $('#childtable').DataTable( 
		{
//		    dom: 'Brt',
		    dom: 'rtB',
		    orderClasses: false,
		    stripeClasses:['stripe1','stripe2'],
		    autoWidth: false,
		    buttons: 
		    {
		    	buttons: 
		    	[
		    		{ 
		    			text: 'Edit Child', 
		    			action: function ( e, dt, node, config )
		    			{
		    			    let selectedRowData = childtable.row('.selected').data();
		    			    let selectedRowIndex = childtable.row('.selected').index();
		    			    childAction(true, selectedRowData, selectedRowIndex);	
		    			},
		    			enabled: false
		    		},
		    		{ 
		    			text: 'Add New Child', 
		    			action: function ( e, dt, node, config )
		    			{  
		    				childAction(false, null, -1);
		    			},
		    		},
		    		{ 
		    			text: 'Move Child To Adult In Family', 
		    			action: function ( e, dt, node, config )
		    			{
		    				let selectedChild = childtable.row('.selected').data();
		    				
		    				let adult = {};
		    				adult["id"] = '-1';
		    				adult["name"] = selectedChild.firstname + ' ' + selectedChild.lastname;
		    				if(selectedChild.gender === 'Boy')
		    					adult["gender"] = 'Male';
		    				else if(selectedChild.gender === 'Girl')
		    					adult["gender"] = 'Female';
		    				else
		    					adult["gender"] = selectedChild.gender;
		    				
		    				let adultTable = $('#adulttable').DataTable();
		    				adultTable.row.add(adult).draw();
		    				childtable.row('.selected').remove().draw();
		    				
		    				childtable.button( 0 ).enable( false );
		    		    	childtable.button( 1 ).enable( true );
		    		    	childtable.button( 2 ).enable( false );
		    		    	childtable.button( 3 ).enable( false );	
		    			},
		    			enabled: false
		    		},
		    		{ 
		    			text: 'Delete Child', 
		    			action: function ( e, dt, node, config )
		    			{
		    				let selectedChild = childtable.row('.selected').data();
		    				let mssg = "Are you sure you want to delete " + selectedChild.firstname + ' from the family?\r\nClick Confirm Delete to confirm';
		    				document.getElementById('childdeletegmssg').textContent = mssg;
		    				window.location=document.getElementById('childdeleteanchor').href;
		    			},
		    			enabled: false
		    		}
		    	],
		    	dom: 
		    	{
		    		button: 
		    		{
		    			className: ''
		    		}
		    	}
		    },
		    order: [[ 3, "asc" ]],
		    columns: 
		    [
		    	{ data: "id", visible: false},
		    	{ data: "firstname", width: '11%'},
		    	{ data: "lastname", width: '14%'},
		    	{ data: "sDOB", type:'natural', width: '9%'},
		    	{
		    		data: "gender",
		    		width: '11%',
		    		render: function ( gender, type, child )
		    		{
		    			return getAge(child.sDOB) + " " + gender.toLowerCase();
		    	    }
		    	},
		    	{ data: "school", width: '15%'},
		    	{
		    		data: "wish0",
		    		width: '10%',
	    			render: function (wish, type, child )
		    		{
	    				return $('#giftreq').prop("checked") == true ? wish : '';
		    		},
		    		visible: false
		    	},
		    	{
		    		data: "wish1",
		    		width: '10%',
	    			render: function (wish, type, child )
		    		{
	    				return $('#giftreq').prop("checked") == true ? wish : '';
		    	    },
		    	    visible: false
		    	},
		    	{
		    		data: "wish2",
		    		width: '10%',
	    			render: function (wish, type, child )
		    		{
	    				return $('#giftreq').prop("checked") == true ? wish : '';
		    		},
		    		visible: false
		    	},
		    	{
		    		data: "wish3",
		    		width: '10%',
	    			render: function (wish, type, child )
		    		{
	    				return $('#giftreq').prop("checked") == true ? wish : '';
		    		},
		    		visible: false
		    	},
		    ],
//		    drawCallback: function( settings )
//		    {
//	        	var api = this.api();
//	 			updateWishTable(api.rows(), api.rows().data());
//	    	},
			language:
		    {
		    	zeroRecords: "No children in the family",
		        infoEmpty: "No children in the family"
		    },
		    scrollY: "100px",
		    scrollCollapse: true,
		    paging: false
		});
		
		$('#childtable tbody').on( 'click', 'tr', function () 
		{
		    if( $(this).hasClass('selected') )
		    {
		    	$(this).removeClass('selected');
		    	childtable.button( 0 ).enable( false );
		    	childtable.button( 1 ).enable( true );
		    	childtable.button( 2 ).enable( false );
		    	childtable.button( 3 ).enable( false );
		    }
		    else
		    {
		    	childtable.$('tr.selected').removeClass('selected');
		    	if(childtable.rows().count() > 0)
		    	{	
		    		$(this).addClass('selected');
		    		childtable.button( 0 ).enable( true );
		    		childtable.button( 1 ).enable( false );
		    		childtable.button( 2 ).enable( true );
		    		childtable.button( 3 ).enable( true );
		    	}
		    }
		});
		
		$('#childtable tbody').on('dblclick', 'tr', function () 
		{
			let table = $('#childtable').DataTable();
			if(childtable.rows().count() > 0)
	    	{
				let selectedRowData = table.row( this ).data();
				let selectedRowIndex = table.row( this ).index();
				childAction(true, selectedRowData, selectedRowIndex);
	    	}
		});
		
		//create the adult table
		var adulttable = $('#adulttable').DataTable( 
		{
//		    dom: 'Brt',
		    dom: 'rtB',
		    orderClasses: false,
		    stripeClasses:['stripe1','stripe2'],
		    buttons: 
		    {
		    	buttons: 
		    	[
		    		{ 
		    			text: 'Edit Adult', 
		    			action: function ( e, dt, node, config )
		    			{
		    			    let selectedRow = adulttable.row('.selected').data();
		    			    let selectedRowIndex = adulttable.row('.selected')[0][0];
		    			    adultAction(true, selectedRow, selectedRowIndex);	
		    			},
		    			enabled: false
		    		},
		    		{ 
		    			text: 'Add New Adult', 
		    			action: function ( e, dt, node, config )
		    			{  
		    				adultAction(false, null);
		    			}
		    		},
		    		{ 
		    			text: 'Delete Adult', 
		    			action: function ( e, dt, node, config )
		    			{
		    				let selectedAdult = adulttable.row('.selected').data();
		    				let mssg = "Are you sure you want to delete " + selectedAdult.name + ' from the family?\r\nClick Delete to confirm';
		    				document.getElementById('adultdeletegmssg').textContent = mssg;
		    				window.location=document.getElementById('adultdeleteanchor').href;
		    			},
		    			enabled: false
		    		},
		    	],
		    	dom: 
		    	{
		    		button: 
		    		{
		    			className: ''
		    		}
		    	}
		    },
		    columns: 
		    [
		    	{ data: "id", visible: false},
		    	{ data: "name", width: '180px'},
		    	{ data: "gender", width: '80px'}	
		    ],
		    language:
		    {
		    	zeroRecords: "No adults in the family",
		        infoEmpty: "No adults in the family"
		    },
		    scrollY: "100px",
		    scrollCollapse: true,
		    paging: false
		});
		
		$('#adulttable tbody').on( 'click', 'tr', function () 
		{
		    if( $(this).hasClass('selected') )
		    {
		    	$(this).removeClass('selected');
		    	adulttable.button( 0 ).enable( false );
		    	adulttable.button( 1 ).enable( true );
		    	adulttable.button( 2 ).enable( false );
		    }
		    else
		    {
		    	adulttable.$('tr.selected').removeClass('selected');
		    	if(adulttable.rows().count() > 0)
		    	{	
			    	$(this).addClass('selected');
			    	adulttable.button( 0 ).enable( true );
			    	adulttable.button( 1 ).enable( false );
			    	adulttable.button( 2 ).enable( true );
		    	}
		    }
		});
		
		$('#adulttable tbody').on('dblclick', 'tr', function () 
		{
			let table = $('#adulttable').DataTable();
			if(adulttable.rows().count() > 0)
			{	
				let selectedRowData = table.row( this ).data();
				let selectedRowIndex = table.row( this )[0][0];
				adultAction(true, selectedRowData, selectedRowIndex);
			}
		});
		
  		if(window.location.href.indexOf("referral") > -1)
  		{
  			//is a re-referral. Get info for the family
  			familyparams = "year=" + sessionStorage.getItem("prioryear") + "&" +
  				"byReference=false&" +
				"targetid=" + sessionStorage.getItem("targetid") + "&" +
				"schools=false&" +
				"callback=?";

			$.getJSON('getfamily', familyparams, function(family)
			{
				document.getElementById('hohfn').value= family.HOHFirstName;
				document.getElementById('hohln').value= family.HOHLastName;
				
				updateNewChildTable(family.childList);
  		     	updateNewAdultTable(family.adultList);
  		     	
  		     	//update the family group select
  		     	addComboBoxOption(groupcb, family.groupName, family.groupID);
  		     	document.getElementById('groupfs').style.display='none';
			});
  		}
  		else
  		{
  			//is a new referral, get updated groups for the logged in user from server and place into group
  			//combobox. agentid =-1 defaults to the logged in user
   			var groupparams = "agentid=-1&callback=?";
   			$.getJSON('groups', groupparams, function(groups)
   			{
    			//add the groups for the agent
    			for(let group of groups)
   					addComboBoxOption(groupcb, group.name, group.id);
    			
    			var groupfsel = document.getElementById('groupfs');
    			if(groups.length > 1)
    				groupfsel.style.display='block';
    			else	
  					groupfsel.style.display='none';
   			});    	
  		}
  		
  		congifureGiftIntake();
  		configureMealIntake();
	
  		$( ".address" ).tooltip({
  		  content: "Uncheck same as HOH address to edit",
  		  disabled: true,
  		  tooltipClass: "addresstooltip",
  		  position: { my: "left center", at: "right center" }  
  		});
	});
  	
  	function congifureGiftIntake()
  	{
  		//set up whether gift assistance is occurring
  		if(sessionStorage.getItem('numberGiftsPerChild') > 0)
  		{			
  			if(sessionStorage.getItem('mealIntake') == 0)
  			{
  				//gifts only, no meals 
  				document.getElementById('giftreq').checked = true;
  				document.getElementById('giftreqdiv').style.display = 'none';
  				document.getElementById('childtablediv').style.width = '100%';
	  			document.getElementById('childtablelegend').innerHTML = 'Children &#38; Gift Wishes: ONC will provide gifts to children up to age 18 (or older if still enrolled in FCPS grades 1 - 12)';
	  			setEnabledChildTableWishes(true);
  				
  				if(sessionStorage.getItem('giftDistribution') == 'Pickup')	//pickup, no delivery
  				{	
  					document.getElementById('giftassistfieldset').style.display = "none";	//no need to ask about gift assistance, it's given
  				}
  				else if(sessionStorage.getItem('giftDistribution') == 'Delivery')	//delivery, no pickup
  				{
  					document.getElementById('distprefdiv').value = 'Delivery';	//ensure del address is sent to server upon submit
  					document.getElementById('giftassistfieldset').style.display = 'block';
  					document.getElementById('deladdrfieldset').style.display = 'block';
  					document.getElementById('giftassistlegend').innerHTML = 'Delivery Address';
  				}	
  				else	//choice of delivery or pickup
  				{
  					document.getElementById('distprefdiv').style.display = "block";
  				}
  				
  				
  				document.getElementById('adultsfieldset').style.display = 'none';
  	  			document.getElementById('mealsfieldset').style.display = 'none';
  			}
  			
  			setVisibleChildWishEntry();
  		}
  		else
  			document.getElementById('giftassistfieldset').style.display = 'none';	//no gifts, only meals
  	}
  	
  	function setVisibleChildWishEntry()
  	{
  		//show wishes in child popup dialog. Display is based on number of gifts per child
  		//and whether the wish is being used
  		let numGifts = sessionStorage.getItem('numberGiftsPerChild');
  		document.getElementById('childwish0div').style.display = numGifts > 0 && intakeType(0) > 0 ? 'block' :'none';
  		document.getElementById('childwish1div').style.display = numGifts > 1 && intakeType(1) > 0 ? 'block' :'none';
  		document.getElementById('childwish2div').style.display = numGifts > 2 && intakeType(2) > 0 ? 'block' :'none';
  		document.getElementById('childwish3div').style.display = numGifts > 0 && intakeType(3) > 0 ? 'block' :'none';
  	}
  	
  	function setEnabledChildTableWishes(bEnableChildWishes)
  	{
  		//show wishes in child table, must force a redraw of the child table
		let childtable = $('#childtable').DataTable();
  		
		if(sessionStorage.getItem('numberGiftsPerChild') == 3)
			childtable.columns( [6,7,8,9] ).visible(bEnableChildWishes);
		else if(sessionStorage.getItem('numberGiftsPerChild') == 2)
		{	
			childtable.columns( [6,7,9] ).visible(true);
			document.getElementById('childwish2div').style.display = 'none';
		}
		else
		{	
			childtable.columns( [6,9] ).visible(true);
			document.getElementById('childwish2div').style.display = 'none';
			document.getElementById('childwish1div').style.display = 'none';
		}
		
		childtable.rows().invalidate('data').draw(false);
  	}
  	
  	function configureMealIntake()
  	{
  		if(sessionStorage.getItem('mealIntake') > 0 && sessionStorage.getItem('numberGiftsPerChild') == 0)
	 	{	
			//meals only, no gifts
  			document.getElementById('childwishfieldset').style.display = 'none';
  			document.getElementById('childtablediv').style.width = '65%';
  			document.getElementById('editchilddiv').classList.remove('full-width');
  			document.getElementById('editchilddiv').classList.add('extended-width');
  			document.getElementById('childdlgtitlespan').innerHTML = 'Provide Child Information';
  		}
  	}
  	
  	function childAction(bEdit, selectedRow, rowIndex)
  	{
  		if(bEdit===true && typeof selectedRow !== 'undefined')
	    {
  			document.getElementById('editChild').setAttribute('data-mode', 'edit');
  			document.getElementById('editChild').setAttribute('data-rowNumber', rowIndex);
  			
  			//save  the inital settings to determine if a change has occurred
			//and set the inputs to current table values
			editedChild["id"] = selectedRow.id;
			setInput('childid', selectedRow.id);
  			
  			editedChild["childfirstname"] = selectedRow.firstname;
	    	setInput('childfirstname', selectedRow.firstname);
	    	
	    	editedChild["childlastname"] = selectedRow.lastname;
    		setInput('childlastname', selectedRow.lastname);
    		
    		const parts = selectedRow.sDOB.split('/');
    		editedChild["dobmonth"] = parts[0];
    		document.getElementById('dobmonth').value = parts[0];
    		
			if(parts[1].charAt(0) === '0')
			{
				editedChild["dobday"] =  parts[1].charAt(1);
    			document.getElementById('dobday').value = parts[1].charAt(1);
			}
			else
			{
				editedChild["dobday"] =  parts[1];
				document.getElementById('dobday').value = parts[1];
			}	
				
			editedChild["dobyear"] = parts[2];
    		document.getElementById('dobyear').value = parts[2];
    		
			document.getElementById('childage-span').textContent = getAge(selectedRow.sDOB);
			document.getElementById('childyear-span').textContent = 'on 12/25/' +  sessionStorage.getItem('currseason');
    		
    		editedChild["childgender"] = selectedRow.gender;
    		document.getElementById('childgender').value = selectedRow.gender;
    		
    		editedChild["childschool"] = selectedRow.school;
	    	setInput('childschool', selectedRow.school);
	    	
	    	editedChild["childwish0"] = selectedRow.wish0;
	    	setInput('childwish0', selectedRow.wish0);
	    	
	    	editedChild["childwish1"] = selectedRow.wish1;
	    	setInput('childwish1', selectedRow.wish1);
	    	
	    	editedChild["childwish2"] = selectedRow.wish2;
	    	setInput('childwish2', selectedRow.wish2);
	    	
	    	editedChild["childwish3"] = selectedRow.wish3;
	    	setInput('childwish3', selectedRow.wish3);
	    	
	    	document.getElementById('childupdate').innerHTML = "Update";
	    	document.getElementById('removechildspan').style.display= 'inline';
	    }
  		else
  		{
  			document.getElementById('editChild').setAttribute('data-mode', 'add');
  			
  			setInput('childid', "-1");
  			setInput('childfirstname', '');
    		setInput('childlastname', '');
    		
    		document.getElementById('dobmonth').selectedIndex = 0;
    		document.getElementById('dobday').selectedIndex = 0;
    		document.getElementById('dobyear').selectedIndex = 0;
    		
    		let sDoB = document.getElementById('dobmonth').value + '/' +
    					document.getElementById('dobday').value + '/' +
    		 			 document.getElementById('dobyear').value;
    		
    		document.getElementById('childage-span').textContent = getAge(sDoB);
    		document.getElementById('childyear-span').textContent = 'on 12/25/' +  sessionStorage.getItem('currseason');
    		
    		document.getElementById('childgender').selectedIndex = 0;
	    	setInput('childschool', '');
	    	
	    	var wishOptions = ["Unused", "Age Appropriate Gift", "Selected by ONC", ""];
	    	setInput('childwish0', wishOptions[intakeType(0)]);
  			setInput('childwish1', wishOptions[intakeType(1)]);
    		setInput('childwish2', wishOptions[intakeType(2)]);
    		setInput('childwish3', wishOptions[intakeType(3)]);
	    	
	    	document.getElementById('childupdate').innerHTML = "Add";
	    	document.getElementById('removechildspan').style.display = 'none';
  		}
  		
  		//disable wish entry unless intake type is Agent Selected, which is intake type 3
  		document.getElementById('childwish0').disabled = intakeType(0) < 3;	
  		document.getElementById('childwish1').disabled = intakeType(1) < 3;
  		document.getElementById('childwish2').disabled = intakeType(2) < 3;
  		document.getElementById('childwish3').disabled = intakeType(3) < 3;
  		
  		document.getElementById('childupdate').disabled = true;
	    window.location=document.getElementById('editchildanchor').href;
  	}
  	
  	function intakeType(wishnum)
  	{
  		if(wishnum >= 0 && wishnum < 4)
		{	
			//determine intakeType by calculating how many bits to shift right based on the wish number
			//and if before or after the gift referral deadline. Use same info to create the mask.
			//apply the mask, shift the result, yielding an integer between 0 and 3
			let configuration = sessionStorage.getItem('intakeConfiguration');
			let timeOffset = Date.now() < sessionStorage.getItem('decemberGiftDeadline') ? 0 : 1;
			let shift = ((wishnum * 2) + timeOffset) * 2;	//even integer between 0 and 14
			let mask = 0x0003 << shift;	
			let intakeType = (configuration & mask) >> shift;
			
			return intakeType;
		}
		else
			return 0;
  	}
  	
  	function adultAction(bEdit, selectedRow, rowIndex)
  	{
  		if(bEdit===true && typeof selectedRow !== 'undefined')
	    {
  			document.getElementById('editAdult').setAttribute('data-mode', 'edit');
  			document.getElementById('editAdult').setAttribute('data-rowNumber', rowIndex);
  			
  			//save  the inital settings to determine if a change has occurred
  			editedAdult["adultname"] = selectedRow.name;
	    	setInput('adultname', selectedRow.name);
  			
  			editedAdult["adultgender"] = selectedRow.gender;
	    	document.getElementById('adultgender').value=selectedRow.gender;
	    	
	    	document.getElementById('adultupdate').innerHTML = "Update";
	    	document.getElementById('removeadultspan').style.display= 'inline';
	    }
  		else
  		{
  			document.getElementById('editAdult').setAttribute('data-mode', 'add');
  			setInput('adultname', '');
	    	document.getElementById('adultgender').selectedIndex=0;
	    	
	    	document.getElementById('adultupdate').innerHTML = "Add";
	    	document.getElementById('removeadultspan').style.display = 'none';
  		}
  		
  		document.getElementById('adultupdate').disabled = true;
	    window.location=document.getElementById('editadultanchor').href;  
  	}
	
  	function verifyAddedOrUpdatedChild()
  	{
		let child = getChild();
		let age = calculateAge(child.sDOB);
		let numGifts = sessionStorage.getItem('numberGiftsPerChild');

		if(age === 0 || child.gender === 'Unknown')
		{
			//show pop-up asking to verify birthdate and gender
			document.getElementById('childwarningmssg').textContent = "Is " + child.sDOB + " the correct" +
			" DoB and " + child.gender + " the correct gender for the child you're updating or adding?";
			
			window.location=document.getElementById('childwarninganchor').href;
		}
		else if(document.getElementById('giftreq').checked === true && numGifts == 0)
		{
			//show pop-up informing of error. Can't have gift requests the number of gifts is zero
			document.getElementById('childwarningmssg').textContent = "Error: Not providing gift assistance. Please contact ONC's school contact.";
			window.location=document.getElementById('childwarninganchor').href;
		}
		else
		{	
			//We are providing at least one gift per child, make sure corresponding gift fields are not empty
			if(document.getElementById('giftreq').checked === true && numGifts == 1 && 
				document.getElementById('childwish0').value !== '' && 
				 document.getElementById('childwish3').value !== '')
			{
				addOrUpdateValidatatedChild();
			}
			else if(document.getElementById('giftreq').checked === true && numGifts == 2 && 
					 document.getElementById('childwish0').value !== '' && 
				 	  document.getElementById('childwish3').value !== '' &&
				 	   document.getElementById('childwish1').value !== '')
			{
				addOrUpdateValidatatedChild();
			}
			else if(document.getElementById('giftreq').checked === true && numGifts > 2 && 
					 document.getElementById('childwish0').value !== '' && 
				 	  document.getElementById('childwish3').value !== '' &&
				 	   document.getElementById('childwish1').value !== '' &&
				 	    document.getElementById('childwish2').value !== '')
			{
				addOrUpdateValidatatedChild();
			}
			else
			{	
				//show pop-up asking to verify that wish is blank and to use age appropriate gift
				document.getElementById('wishwarningmssg').textContent = "One or more wish entries is blank. ONC will select" + 
				" age appropriate gifts if wish choices aren't provided.";
			
				window.location=document.getElementById('wishwarninganchor').href;
			}
		}
  	}
  	
  	function addAgeAppropriateGiftForMissingWishes()
  	{
  		let numGifts = sessionStorage.getItem('numberGiftsPerChild');
  		if(numGift > 0 && document.getElementById('childwish0').value === '')
  		{
  			document.getElementById('childwish0').value = 'Age Appropriate Gift';
  			document.getElementById('childwish3').value = 'Age Appropriate Gift';
  		}
  		if(numGifts > 1 && document.getElementById('childwish1').value === '')
  			document.getElementById('childwish1').value = 'Age Appropriate Gift';
	  	if(numGifts > 2 && document.getElementById('childwish2').value === '')
  			document.getElementById('childwish2').value = 'Age Appropriate Gift';
  		
  		addOrUpdateValidatatedChild();
  	}
  	
  	function getChild()
  	{
  		var child = {};
  		
		var sDoB = document.getElementById('dobmonth').value + '/' +
					document.getElementById('dobday').value + '/' +
					 document.getElementById('dobyear').value;
		
		child["id"] = document.getElementById('childid').value;
		child["firstname"] = document.getElementById('childfirstname').value;
       	child["lastname"] = document.getElementById('childlastname').value;
       	child["sDOB"] = sDoB;
       	child["gender"] = document.getElementById('childgender').value;
       	child["school"] = document.getElementById('childschool').value;
       	child["wish0"] = document.getElementById('childwish0').value;
       	child["wish1"] = document.getElementById('childwish1').value;
       	child["wish2"] = document.getElementById('childwish2').value;
       	child["wish3"] = document.getElementById('childwish3').value;
       	
       	return child;
  	}
  	
  	function addOrUpdateValidatatedChild()
  	{
  		let child = getChild();
  		let childTable = $('#childtable').DataTable();
   		
   		//determine if this is an edit or add action
   		if(document.getElementById('editChild').getAttribute('data-mode') === 'edit')
   		{
   			let rowNum = document.getElementById('editChild').getAttribute('data-rowNumber');
   			childTable.row(rowNum).data( child ).draw();
   		}
   		else
   			childTable.row.add(child).draw();
   		
   		onCancel();
  	}
	
	function addOrUpdateAdult()
	{
		var adult = {};
	
		adult["id"] = document.getElementById('childid').value;
		adult["name"] = document.getElementById('adultname').value;
       	adult["gender"] = document.getElementById('adultgender').value;
       	
       	let adultTable = $('#adulttable').DataTable();
       		
   		//determine if this is an edit or add action
   		if(document.getElementById('editAdult').getAttribute('data-mode') === 'edit')
   		{
   			let rowNum = document.getElementById('editAdult').getAttribute('data-rowNumber');
   			adultTable.row(rowNum).data( adult ).draw();
   		}
   		else
   			adultTable.row.add(adult).draw();
   		
   		//close the dialog
   		onCancel();
	}
	
	function onDoBChange()
	{
		//archive the existing day selection value and clear
		var select = document.getElementById("dobday");
		var curr_value = select.value;
		select.options.length = 0;
		
		var year = document.getElementById('dobyear').value;
		var month = document.getElementById('dobmonth').value;
		
		var daysInMonth = [31,28,31,30,31,30,31,31,30,31,30,31];
		var lastDayOfMonth = daysInMonth[month-1];
		
		//adjust February if leap year
		if(month == 2 && ((year % 100 === 0) ? (year % 400 === 0) : (year % 4 === 0)))
			lastDayOfMonth++;

		//add proper # of days to days in month select
		for(i=1; i<=lastDayOfMonth; i++)
			addComboBoxOption(select, i, i);
		
		//reselect the value if its in the list
		if(curr_value && curr_value <= lastDayOfMonth)
			select.value = curr_value;
		else
			select.value = 1;
		
		//update the child age span in the edit child dialog
		let sDoB = document.getElementById('dobmonth').value + '/' +
					document.getElementById('dobday').value + '/' +
		 			 document.getElementById('dobyear').value;
		
		document.getElementById('childage-span').textContent = getAge(sDoB);
		
		checkForChildChange();
	}
	
	function onDeleteChild()
	{
		onCancel();
		
		let childtable = $('#childtable').DataTable();
		childtable.row('.selected').remove().draw();
		childtable.button(0).disable();
		childtable.button(1).enable();
		childtable.button(2).disable();
		childtable.button(3).disable();
	}

	function onDeleteAdult()
	{
		onCancel();
		
		let adulttable = $('#adulttable').DataTable();
		adulttable.row('.selected').remove().draw();
		adulttable.button(0).disable();
		adulttable.button(1).enable();
		adulttable.button(2).disable();
	}
	
	function calculateAge(birthday)
	{	
		let currseason = sessionStorage.getItem('currseason');
		let xmasday = new Date(currseason,11,25,0,0,0,0);
		let birthdate= new Date(birthday);
		
		if(birthdate >= xmasday)
		{
			return 0;
		}
		else
		{
			var y= [xmasday.getFullYear(), birthdate.getFullYear()],
	    	ydiff= y[0]-y[1],
	    	m= [xmasday.getMonth(), birthdate.getMonth()],
	    	mdiff= m[0]-m[1],
	    	d= [xmasday.getDate(), birthdate.getDate()],
	    	ddiff= d[0]-d[1];

	    	if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
	    	if(mdiff<0) mdiff+= 12;
	    	if(ddiff<0)
	    	{
	        	birthdate.setMonth(m[1]+1, 0);
	        	ddiff= birthdate.getDate()-d[1]+d[0];
	        	--mdiff;
	    	}
	    	
	    	if(ydiff > 0)
	    		return ydiff;
	    	else 
	    		return 0;
		}
	}
	
	function getAge(birthday)
	{
		var currseason = sessionStorage.getItem('currseason');
		var xmasday = new Date(currseason,11,25,0,0,0,0);
		var birthdate= new Date(birthday);
		
		var age= [];
		if(birthdate >= xmasday)
			age.push('Newborn');
		else
		{
    		var y= [xmasday.getFullYear(), birthdate.getFullYear()],
    		ydiff= y[0]-y[1],
    		m= [xmasday.getMonth(), birthdate.getMonth()],
    		mdiff= m[0]-m[1],
    		d= [xmasday.getDate(), birthdate.getDate()],
    		ddiff= d[0]-d[1];

    		if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
    		if(mdiff<0) mdiff+= 12;
    		if(ddiff<0)
    		{
        		birthdate.setMonth(m[1]+1, 0);
        		ddiff= birthdate.getDate()-d[1]+d[0];
        		--mdiff;
    		}
    		  	
    		if(ydiff> 0)
    			age.push(ydiff+ ' yr. old');
    		else if(mdiff>= 0) 
    			age.push(mdiff+ ' mos. old');
    		else if(mdiff=== -1)
    			age.push('1 yr. old');	//case when dob after xmas of prior year
		}
	    
		return age.join('');
	}
	
	function onGiftAssistanceClicked(cb)
	{	
		let childtable = $('#childtable').DataTable();
		
		//set the visibility of the wish columns
		if(!cb.checked || sessionStorage.getItem('numberGiftsPerChild') == 0 )
			childtable.columns( [6,7,8,9] ).visible(false);
		else if(cb.checked && sessionStorage.getItem('numberGiftsPerChild') == 3)
  			childtable.columns( [6,7,8,9] ).visible(true);
  		else if(cb.checked && sessionStorage.getItem('numberGiftsPerChild') == 2)
  			childtable.columns( [6,7,9] ).visible(true);
  		else if(cb.checked && sessionStorage.getItem('numberGiftsPerChild') == 1)
  			childtable.columns( [6,9] ).visible(true);
		
		//set the size of the child table div
		let width = cb.checked ? '100%' : '65%';	
		$('#childtablediv').width(width);	
		
		//force a redraw of the child table
		childtable.rows().invalidate('data').draw(false);
		
		//show or hide distribution preference, delivery address and set the edit child dialog to show/hide wishes
		let distPrefEl = document.getElementById('distprefdiv');
		let distPrefSelEl = document.getElementById('distpref');
		let delAddrEl = document.getElementById('deladdrfieldset');
		let childWishEl = document.getElementById('childwishfieldset');
		let editChildEl = document.getElementById('editchilddiv');
		let childDlgTitleEl = document.getElementById('childdlgtitlespan');
		let mealreqCkBox = document.getElementById('mealreq');
		let transdiv = document.getElementById('transdiv');
		let transCkBox = document.getElementById('transYes');
		 
		distPrefEl.style.display = cb.checked && sessionStorage.getItem('giftDistribution') == 'Pickup_Delivery' ? 'block' : 'none';
		delAddrEl.style.display = cb.checked && sessionStorage.getItem('giftDistribution') == 'Delivery' ? 'block' : 'none';
		childWishEl.style.display = cb.checked ? 'block' : 'none';
		childDlgTitleEl.innerHTML = cb.checked ? 'Provide Child Information &#38; Gift Wishes' : 'Provide Child Information';
		
		if(cb.checked)
		{
			editChildEl.classList.remove('extended-width');
			editChildEl.classList.add('full-width');
			transdiv.style.display = mealreqCkBox.checked && distPrefSelEl.value == 2? 'block' : 'none';
		}
  		else
  		{
  			editChildEl.classList.remove('full-width');
  			editChildEl.classList.add('extended-width');
  			transdiv.style.display = mealreqCkBox.checked ? 'block' : 'none';
  			transCkBox.checked = false;
  		}
	}
	
	function giftDistributionChange(distPref)
	{
		//if dist pref is delivery, must get a delivery address.
		let delAddrEl = document.getElementById('deladdrfieldset');
		let transEl = document.getElementById('transYes');
		let transDivEl = document.getElementById('transdiv');
		let mealreqCkBox = document.getElementById('mealreq');
			
		delAddrEl.style.display = distPref.value == 'Delivery' ? 'block' : 'none';
		transEl.checked = distPref.value == 'Pickup';
		transDivEl.style.display = mealreqCkBox.checked && distPref.value == 'Pickup' ? 'block' : 'none';
	}

	function mealRqrdClicked(cb)
	{
		var mealCombo = document.getElementById('mealtype');
		var dietres = document.getElementById('dietres');
		//clear the meal type combobox
    	mealCombo.options.length = 0;
		
    	//get current UTC time in millis and compare to the stored deadlines. The server
    	//adjusted the deadlines from UTC to the local time zone of the browser at login
		const nowMillis = Date.now();
    	var choices;
		if(cb.checked == false)
		{
			choices = {'No Assistance Rqrd':'No Assistance Rqrd'};
			mealCombo.disabled = true;
			dietres.value="";
			dietres.disabled = true;
		}
		else if(nowMillis > sessionStorage.getItem('decemberMealCutoff'))
		{
			choices = {'Unavailable - Past Deadline' : 'Unavailable'};
			mealCombo.disabled = true;
			dietres.value="";
			dietres.disabled = true;
		}
		else if(nowMillis > sessionStorage.getItem('thanksgivingMealCutoff'))
		{
			if(sessionStorage.getItem("mealIntake") > 1)
			{	
				choices = {"December":"December"};
				mealCombo.disabled = false;
				dietres.disabled = false;
			}
			else
			{
				choices = {'Unavailable - Past Deadline' : 'Unavailable'};
				mealCombo.disabled = true;
				dietres.value="";
				dietres.disabled = true;
			}
		}
		else
		{
			if(sessionStorage.getItem("mealIntake") == 3)
			{	
				choices = {"Thanksgiving":"Thanksgiving", "December":"December",
						"Thanksgiving and December, if available":"Thanksgiving_December",
						"December and Thanksgiving, if available":"December_Thanksgiving"};
			
			}
			else if(sessionStorage.getItem("mealIntake") == 2)
			{
				choices = {"December":"December"};
			}
			else
				choices = {"Thanksgiving":"Thanksgiving"};
			
			mealCombo.disabled = false;
			dietres.disabled = false;	
		}
		
		//add the meal choices
		for(var key in choices)
		{
			var mealOption = document.createElement("option");
			mealOption.text = key;
	    		mealOption.value = choices[key];
	    		try 
	    		{
	        		mealCombo.add(mealOption, null); //Standard 
	    		}
	    		catch(error)
	    		{
	        		mealCombo.add(mealOption); // IE only
	    		}  
		}
		
		//determine whether to ask about transportation. If picking up gifts, it's not necessary
		let transEl = document.getElementById('transdiv');
		let giftReqCkBox = document.getElementById('giftreq');
		transEl.style.display = cb.checked && (!giftReqCkBox.checked || giftReqCkBox.checked && document.getElementById('distpref').value == 'Delivery') ? 'block' : 'none';
	}

	function onWishInputChanged(wishevent)
	{
		//get the childs age from the selects in the edit child dialog
		let sDoB = document.getElementById('dobmonth').value + '/' +
					document.getElementById('dobday').value + '/' +
					 document.getElementById('dobyear').value;
		
		if(calculateAge(sDoB) < 13)
		{	
			let content = document.getElementById(wishevent.id).value.toLowerCase();
			if(content.includes('gift card') || content.includes('giftcard'))
			{
				document.getElementById('giftcardmssg').textContent = "Based on limited availability, ONC" +
				"\r\ngenerally provides gift cards to children\r\n13 and older. \r\n\r\nIf there is an extenuating" +
				"\r\ncircumstance requiring a gift card," +
				"\r\nplease note it in Family Details below\r\n\and include the type of gift card" +
				"\r\n(i.e.: Target, Amazon, iTunes, etc.)\r\nwith the corresponding wish.";
			
				window.location=document.getElementById('giftcardanchor').href;
			}
		}
	}
	function checkForChildChange()
	{
		//if edit mode, check for input change, else check for empty
		if(document.getElementById('editChild').getAttribute("data-mode") === 'edit')
		{	
			if(document.getElementById('childfirstname').value === editedChild['childfirstname'] &&
				document.getElementById('childlastname').value === editedChild['childlastname'] &&
				 document.getElementById('dobyear').value === editedChild['dobyear'] &&
				  document.getElementById('dobmonth').value === editedChild['dobmonth'] &&
				   document.getElementById('dobday').value === editedChild['dobday'] &&
				    document.getElementById('childgender').value === editedChild['childgender'] &&
				     document.getElementById('childschool').value === editedChild['childschool'] &&
					  document.getElementById('childwish0').value == editedChild['childwish0'] &&
					   document.getElementById('childwish1').value == editedChild['childwish1'] &&
						document.getElementById('childwish2').value == editedChild['childwish2'] &&
						 document.getElementById('childwish3').value == editedChild['childwish3'])
			{
				document.getElementById('childupdate').disabled = true;
			}
			else
			{
				document.getElementById('childupdate').disabled = false;
			}
		}
		else	//add mode
		{
			if(document.getElementById('childfirstname').value === "" ||
					document.getElementById('childlastname').value === "")
//					 document.getElementById('childschool').value === "")
			{
				document.getElementById('childupdate').disabled = true;
			}				
			else
			{
				document.getElementById('childupdate').disabled = false;
			}
		}
	}
	function checkForAdultChange()
	{
		//if edit mode, check for input change, else check for empty
		if(document.getElementById('editAdult').getAttribute("data-mode") === 'edit')
		{
			if(document.getElementById('adultname').value === editedAdult['adultname'] &&
				document.getElementById('adultgender').value === editedAdult['adultgender'])
			{
				document.getElementById('adultupdate').disabled = true;
			}
			else
				document.getElementById('adultupdate').disabled = false;
		}
		else	//add mode
		{
			if(document.getElementById('adultname').value === "")
				document.getElementById('adultupdate').disabled = true;			
			else
				document.getElementById('adultupdate').disabled = false;
		}
	}
  </script>
  <style>
	input[type='checkbox'] { transform : scale(1.4); }
	.checkbox-label { font-size: 16px; }
	.addresstooltip
	{
  		background-color: black;
  		color: rgb(255, 77, 85) !important;
  		font-size: 14px;
	}	    
	#giftcardmssg 
	{
		margin-top: 0px;
		white-space: pre;
		line-height: 20px;
		font-style: italic;
	}
	#childtablediv 
	{
		width: 65%;
		margin-top: 5px;
	}	
	#childtable td	/* keeps table rows to single line with ... */
	{
		max-width: 0;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
	div.dt-buttons
	{
		position:relative;
		float:right;
	}
	#adulttablediv 
	{ 
		width: 40%;
	}
	#childwishfieldset { display: block; }
	.edit-background span { font-size: 14px; }
	textarea 
  	{
  		width: 75%;
    	height: 36px;
    	line-height: 18px;
    	padding: 2px 2px;
    	box-sizing: border-box;
    	border: 1px solid #ccc;
    	border-radius: 4px;
    	background-color: #f8f8f8;
    	font-size: 14px;
    	resize: none;
    	display: block;
	}
	td.cellerror
	{
		border: 3px solid red !important;
	}
	.errorimg
	{
		float: left;
		display: block;
		margin: 0px 10px 0px 0px;
	}
	#giftreqdiv
	{
		margin-bottom: 5px;
	}
	.childinfop
	{
		padding-bottom: 12px;
	}
	#distprefdiv
	{
		margin-bottom: 5px;
		display: none;
	}
	#deladdrfieldset
	{
		display: none;
	}
	#transdiv
	{
		display: none;
	}
	#childwishfieldset
	{
		display: none;
	}
  </style>
</head>
<body>
  <a href="#badfamdlg" id="badfamanchor" style="visibility: hidden">Bad Family Referral</a>
  <a href="#childwarningdlg" id="childwarninganchor" style="visibility: hidden">Child Info Verification</a>
  <a href="#wishwarningdlg" id="wishwarninganchor" style="visibility: hidden">Wish Content Verification</a>
  <a href="#childdeletedlg" id="childdeleteanchor" style="visibility: hidden">Delete Child Verification</a>
  <a href="#adultdeletedlg" id="adultdeleteanchor" style="visibility: hidden">Delete Adult Verification</a>
  <a href="#giftcarddlg" id="giftcardanchor" style="visibility: hidden">Gift Card Warning</a>
  <a href="#verifdlg" id="verifanchor" style="visibility: hidden">Address Verification</a>
  <a href="#editChild" id="editchildanchor" style="visibility: hidden">Edit Child</a>
  <a href="#editAdult" id="editadultanchor" style="visibility: hidden">Edit Adult</a>
  <a href="#editProfile" id="editprofileanchor" style="visibility: hidden">Edit Profile</a>
  <a href="#cellwarningdlg" id="cellwarninganchor" style="visibility: hidden">Cell Phone Verification</a>
  <a href="#timeoutdlg" id="timeoutanchor" style="visibility: hidden">Timeout</a>
  <div class='header'> 
    <img class='logo-img' src="onclogo">
    <span class='header-links'>
	  <a id='dashboard-anchor' class='breadcrumb-first' href='dashboard'>Dashboard</a>
      <a id='partner-anchor' class='breadcrumb-middle' href='familystatus'>Families</a>
      <a class='breadcrumb-current' href='#'>Family Referral</a>
    </span>   
    <div class='headerbuttons'>
      <div class='dropdown'>
        <button class=dropbtn>Profile</button>
        <div class='dropdown-content'>
      	  <a href="#editProfile" onclick='showEditProfileDialog()'>Edit Profile</a>
      	  <a href="#chgpwdlg">Change Password</a>
      	</div> 
      </div>
      <button id='logoutbtn' onclick='onLogoutLink()'>Logout</button>
    </div>
  </div>
  <div id="welcome-div">
    <p id='banner-message'>BANNER_MESSAGE</p>
  </div>
  <form autocomplete="off">
  <input id='year' type="hidden" name="year">
  <input id='targetid' type="hidden" name="targetid">
  <input id='uuid' type="hidden" name="uuid" value= 'SERVER_GENERATED_UUID'>
  <fieldset>
  <legend class="legend-major">Head of Household (HOH) Information</legend>
    <div>
      <input id='hohfn' title="First Name" name="hohfn" type="text" size="20" placeholder="First Name" required>
      <input id='hohln' title="Last Name" name="hohln" type="text" size="20" placeholder="Last Name" required>
      <input id="homephone" title="Home Phone #" name="homephone" type="text" size="18" placeholder="Primary Phone #" onchange="verifyPhoneNumber(0)" required>
	  <input id= "cellphone" title="Cell Phone #" name="cellphone" type="text" size="18" placeholder="Alternate Phone #" onchange="verifyPhoneNumber(1)">
	  <input id= "altphone" title="Alternate Phone #" name="altphone" type="text" size="18" placeholder="2nd Alt Phone #" onchange="verifyPhoneNumber(2)">
	  <select id='language' title='Primary language' name='language'>
		<option value="English">English</option>
		<option value="Spanish">Spanish</option>
		<option value="Arabic">Arabic</option>
		<option value="Korean">Korean</option>
		<option value="Vietnamese">Vietnamese</option>
		<option value="Other">Other</option>
		<option value="?">Unknown</option>
	  </select>
	</div>
	 <div class='fieldsetdiv'>
      <input id="housenum" class='address' title="House #" name="housenum" type="text" size="7" placeholder="House #" autocomplete="off" required>
      <input id="street" class='address' title="Street Name" name="street" type="text" size="20" placeholder="Street Name" autocomplete="off" required>
      <input id="unit" title="Apt. or Unit #" name="unit" type="text" size="8" placeholder="Apt #" autocomplete="off">
      <select id="city" title="City" name="city" onchange="cityChanged(this)">   		
	  </select>   
      <select id="zipcode" title="Zip Code" name="zipcode">	
	  </select>
	  <input id='email' title="Email address" name="email" type="email" size="30" onchange='verifyEmail()' placeholder="email address">
	  <button type="button" id='verifyhohaddress' class='verifybutton' onclick="verifyAddress(this)">Verify</button>
	</div>
  </fieldset>
  <fieldset id='giftassistfieldset'>
<!--  <legend class="legend-major">Delivery Preference &#38; Address: If family prefers gift delivery, provide address for ONC gift delivery</legend> -->
	<legend id='giftassistlegend'class='legend-major'>Gift Assistance: ONC will provide gifts to children up to age 18 (or older if still enrolled in FCPS grades 1 - 12)</legend>
	<div id='giftreqdiv'>
  	<input type="checkbox" id='giftreq' name='giftreq' onclick='onGiftAssistanceClicked(this)' title="Check if family wants gift assistance">
	<label class='checkbox-label'>Check if family is requesting gift assistance</label>
	</div>
  	<div id='distprefdiv'>
  	<label for='distpref'>How would the family prefer to get their children's gifts?: </label>
     <select id="distpref" name="distpref" title="How would the family prefer to get their child(s) gifts?" onchange='giftDistributionChange(this)'>
     	<option value="Pickup">Family will pickup gifts at an ONC distribution site</option>
		<option value="Delivery">Have ONC deliver gifts to the provided delivery address</option>
	</select>
	</div>
	 <fieldset id='deladdrfieldset'class="gray">
  	<legend>Delivery Address: Address where ONC should deliver gifts</legend>
		<input id="sameaddress" type="checkbox" title="Uncheck to edit HoH or Delivery address" onclick="sameAddressClicked(this)">
		<label class='checkbox-label'>Check if same as HOH address, else complete:</label>
		<input id="delhousenum" class='address' title="Delivery House #" name="delhousenum" type="text" size="7" placeholder="House #" autocomplete="off" required>
    	<input id="delstreet" class='address' title="Delivery Street Name" name="delstreet" type="text" size="20" placeholder="Street Name" autocomplete="off" required>
    	<input id="delunit" title="Deleivery Apt. or Unit #" name="delunit" type="text" size="8" placeholder="Apt #" autocomplete="off">
    	<select id="delcity" title="Delivery City" name="delcity" onchange="cityChanged(this)"></select>	
    	<select id="delzipcode" title="Deleivery Zip Code" name="delzipcode"></select>
		<button type="button" id='verifydeladdress' class='verifybutton' onclick="verifyAddress(this)">Verify</button>
	</fieldset>	
  </fieldset>
  <fieldset id='mealsfieldset'>
  	<legend class="legend-major">Meal Assistance: ONC will refer family to WFCM or other meal providing organizations</legend>
	<input type="checkbox" id='mealreq' onclick="mealRqrdClicked(this)" title="Check if family needs meal assistance">Check to request meal assistance for:
    <select id="mealtype" name="mealtype" title="When does the family need meal assistance?" disabled>
		<option value="No Assistance Rqrd">No Assistance Rqrd</option>
	</select>
	<input id="dietres" type="text" name="dietres" size='54' placeholder="Describe any dietary restrictions" title="Describe any family dietary restrictions" disabled>
	<div id='transdiv'>
  		<input id="transYes" type="checkbox">
		<label class='checkbox-label'>Check if family has their own transportation</label>	    
  	</div>
  </fieldset>
  <fieldset>
<!--  <legend class="legend-major">Family Members &#38; Gift Assistance</legend>  -->  
  <legend class="legend-major">Family Members</legend>
  <fieldset class="gray">
  	<legend id='childtablelegend'>Children and school attended. Enter Pre-K for children not yet enrolled)</legend>
	<div id='childtablediv'>
	  <table id="childtable" class='display compact' style="width:100%">
		<thead>
    		<tr>
    			<th>Id</th>
        		<th>First Name</th>
        		<th>Last Name</th>
        		<th>DoB</th>
        		<th>Age/Gen.</th>
        		<th>School</th>
        		<th>Wish 1</th>	<!-- hidden, stores wishes entered by counselor; Covid 2020 visible -->
        		<th>Wish 2</th>	<!-- hidden, stores wishes entered by counselor Covid 2020 visible-->
        		<th>Wish 3</th>	<!-- hidden, stores wishes entered by counselor Covid 2020 never visible-->
        		<th>Alt. Wish</th>	<!-- hidden, stores wishes entered by counselor Covid 2020 visible-->
    		</tr>
    	</thead>
    	<tbody>
    	</tbody>
      </table>
    </div>     
  </fieldset>
  <fieldset id='adultsfieldset'>
  	<legend>Other adults in family (in addition to the head of household)</legend>
   <div id='adulttablediv'> 		
	 <table id="adulttable" class='display compact' style="width:100%">
		<thead>
    		<tr>
    			<th>Id</th>
        		<th>Name</th>
        		<th>Gender</th>
    		</tr>
    	</thead>
    	<tbody>
    	</tbody>
      </table>
    </div>  
  </fieldset>
  </fieldset>
  <fieldset>
   <legend class="legend-major">Family Details: Provide any additional details that may assist in serving this family</legend>
	<input type="text" id='detail' name="detail" style='width:100%' placeholder="Details about family ONC should know" title="Provide ONC with information about the family you feel is important">
  </fieldset>
<!--   
  <fieldset>
   <legend class="legend-major">Gift Distribution</legend>
   		<fieldset class="gray">
  		<legend> Families will be notified (email or text) by ONC at the end of November. The message will include the pick-up location and a unique family number that must be displayed with a photo id in order to receive gifts. Gifts will be distributed on Sunday December 13th from 1-4pm.</legend>
	</fieldset>
  </fieldset>
-->  
  <fieldset id='groupfs'>
   <legend class="legend-major">Referring School or Organization: Please select the school or organization submitting this referral</legend>
    <select id="groupcb" name='groupcb' title="Family Group"></select>
  </fieldset>
  <div>
  	<span id="errormessage"></span>
  	<span id="submitspan">
  	  <label for="btnsubmit">Please check that all fields are complete prior to submission: </label>
  	  <button type="button" id='btnsubmit' onclick="onSubmitFamilyForm(true)">Submit</button>
  	</span>
  </div>
</form>
<!-- Invalid Family Dialog -->
  <div id="badfamdlg" class="modalDialog">
	<div class='inner regular-width'>
		<a href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class="logospan">Invalid Family Referral</span>
		</div>	
		<div>
		  <div class='column left'><img class='errorimg' src="erroricon"></div>
		  <div class='column right' id='badfammssg'></div>	  
		</div>
	</div>
  </div>
   <!-- Address Verification Dialog -->
  <div id="verifdlg" class="modalDialog">
	<div class='inner regular-width'>
		<a href="#close" title="Close" class="close">X</a>	
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class='logospan'>Address Verification</span>
		</div>	    	  	
		<div>
		  <div class='column left'><img id='verifimg' class='errorimg' src="erroricon"></div>
		  <div class='column right' id='verifmssg'></div>	  
		</div>	
	</div>
  </div>
  <!-- Child Warning Dialog -->
  <div id="childwarningdlg" class="modalDialog">
	<div class='inner regular-width'>
		<a href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class="logospan">Verify Child Info</span>
		</div>	
		<span id='childwarningmssg'></span>
		<div class='buttonbar'>
      	  <button onclick="addOrUpdateValidatatedChild()">Yes, As Best I Know</button>
      	  <button onclick="window.location=document.getElementById('editchildanchor').href">No, I'll Fix Them</button>
    	</div>
	</div>
  </div>
  <!-- Wish Warning Dialog -->
  <div id="wishwarningdlg" class="modalDialog">
	<div class='inner regular-width'>
		<a href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class="logospan">Verify Wish Content</span>
		</div>	
		<span id='wishwarningmssg'></span>
		<div class='buttonbar'>
      	  <button onclick="addAgeAppropriateGiftForMissingWishes()">Select Age Appropriate Gifts</button>
      	  <button onclick="window.location=document.getElementById('editchildanchor').href">No, I'll Fix It</button>
    	</div>
	</div>
  </div>
  <!-- Delete Child Verification Dialog -->
  <div id="childdeletedlg" class="modalDialog">
	<div class='inner regular-width'>
		<a href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class="logospan">Confirm Delete Child</span>
		</div>	
		<span id='childdeletegmssg'></span>
		<div class='buttonbar'>
      	  <button onclick="onCancel()">Cancel</button>
      	  <button onclick="onDeleteChild()">Confirm</button>
    	</div>
	</div>
  </div>
  <!-- Delete Adult Verification Dialog -->
  <div id="adultdeletedlg" class="modalDialog">
	<div class='inner regular-width'>
		<a href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class="logospan">Confirm Delete Child</span>
		</div>	
		<span id='adultdeletegmssg'></span>
		<div class='buttonbar'>
      	  <button onclick="onCancel()">Cancel</button>
      	  <button onclick="onDeleteAdult()">Confirm</button>
    	</div>
	</div>
  </div>
  <!-- Gift Card Warning Dialog -->
  <div id="giftcarddlg" class="modalDialog">
	<div class='inner regular-width'>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class=logospan>Gift Cards</span>
		</div>
		  <p id='giftcardmssg'></p>
		<div class='buttonbar'>
    	<button onclick="window.location=document.getElementById('editchildanchor').href">OK</button>
      </div>
	</div>
  </div>
<!-- Edit Profile Dialog -->
  <div id="editProfile" class="modalDialog">
	<div class='inner full-width'>
	  <div class='dialogtopbar'>
		<img class='logo-img' src="onclogo">
		<span class='logospan'>Verify/Update ONC Profile</span>
	  </div>
	  <div class='edit-background' style='height:230px'>
	  	 <fieldset id='contact-info-fieldset' style='float:left'>
  			  <legend class="legend-major">Contact Information</legend>
  			  <p>
    	  		<label for="userfirstname">Name:</label>
    	  		<input id='userfirstname' type="text" size="12" placeholder="First Name" oninput='checkForProfileChange()'>
    	  		<input id='userlastname' type="text" size="14" placeholder="Last Name" oninput='checkForProfileChange()'>
    		  </p>   		
    		  <p>
    	  		<label for="userorg">Organization:</label>
    	  		<input id='userorg' type="text" size="28" placeholder="Organization" oninput='checkForProfileChange()'>
    	 	  </p>
    	 	  <p style='width:440px'>
    	  		 <label for="usertitle">Title:</label>
    	 		 <input id='usertitle' type="text" size="34" placeholder="Title" oninput='checkForProfileChange()'>
    	 	  </p>
    	 	  <p>
    	  		<label for="useremail">Email:</label>
    	  		<input id='useremail' type="text" size="34" placeholder="Email address" oninput='checkForProfileChange()'>
    	      </p>
    	 	  <p>
    	  		<label for="workphone">Phone #'s: (Work &amp; Cell):</label>
    	  		<input id='workphone' type="text" size="16" placeholder="Work Phone #" oninput='checkForProfileChange()'>
    	  		<input id='cellphone' type="text" size="16" placeholder="Cell Phone #" oninput='checkForProfileChange()'>
    	  	  </p>
      	</fieldset>      
		<fieldset>
			<legend class="legend-major">Your School(s) or Organization(s)</legend>  	 
  	    	 <table id="profiletable" class='display' style="width:100%">
  		 	  <thead>
    			<tr>
    				<th>Id</th>
        			<th>School or Organization</th>
    			</tr>
    		  </thead>
    		  <tbody>
    		  </tbody>
	    	</table>
	    	<div> 
  		  		<select id="groupselect" title="School or Organization Name" oninput='onGroupSelected(this)'></select>
  			</div>
  		</fieldset>
  	  </div>
      <div class='buttonbar'>
    	<button id="cancel" onclick="onProfileNotChanged()">No Change</button>
        <button id="update" onclick="onUpdateProfile(this)" disabled>Update</button>
      </div> 
	</div>
  </div>
 <!-- Cell phone Warning Dialog -->
  <div id="cellwarningdlg" class="modalDialog">
	<div class='inner regular-width'>
		<a href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class="logospan">Invalid Cell Phone</span>
		</div>	
		<span id='cellwarningmssg'></span>
		<div class='buttonbar'>
      	  <button onclick="window.location=document.getElementById('editprofileanchor').href">I'll fix it</button>
    	</div>
	</div>
  </div> 
<!-- Change Password Dialog -->
  <div id="chgpwdlg" class="modalDialog">
	<div class='inner extended-width'>
		<a href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo">
		  <span class='logospan'>Change Password</span>
		</div>
		<div class='edit-background'>
	  	  <fieldset>
  			<legend class="legend-major">Enter Current and New Passwords</legend>
  			<div id='pw_mssg'>Enter current and new password:</div>
  			<table class='password-table'>
  				<tr>
  					<td>Current Password:</td>
  					<td><input type="password" id="currpw" name="field1" width='100%' oninput='checkChangePWEnable()' autofocus></td>
  				</tr>
  				<tr>
  					<td>New Password:</td>
  					<td><input type="password" id="newpw" name="field2" width='100%' oninput='checkChangePWEnable()'></td>
  				</tr>
  				<tr>
  					<td>Verify New Password:</td>
  					<td><input type="password" id="verifypw" name="field3" width='100%' oninput='checkChangePWEnable()'></td>
  				</tr>
  			</table>
		  </fieldset>
		</div>
    	<div class='buttonbar'>
      	  <button onclick="onCancel()">Cancel</button>
      	  <button id="btnchangepw" onclick="onChangePW()" disabled>Change Password</button>
    	</div> 
	</div>
  </div>
  <!-- Timeout Dialog -->
  <div id="timeoutdlg" class="modalDialog">
	<div class='inner regular-width'>
		<div class='dialogtopbar'>
		  <img class='logo-img' src="onclogo"/>
		  <span id='dialogmssg'>Session Timeout</span>
		</div>
		<p id='to_mssg'>Your session expired due to inactivity</p>
    	<div class='buttonbar'>
      	  <button id="timeoutsubmit" onclick="onSessionTimeout()">Logout</button>
    	</div> 
	</div>
  </div> 
<!-- Edit Child Dialog -->
  <div id="editChild" data-mode='edit' class="modalDialog">
	<div id='editchilddiv' class='inner full-width'>
	  <a href="#close" title="Close" class="close">X</a>
	  <div class='dialogtopbar'>
		<img class='logo-img' src="onclogo">
		<span id='childdlgtitlespan' class='logospan'>Provide Child Information &#38; Gift Wishes</span>
	  </div>
	  <div class='edit-background'style='height:250px'>
	  	  <fieldset style='float:left'>
  			  <legend class="legend-major">Child Information</legend>
  			  <div id='childiddiv' style="display: none"> 
  			  	<input id='childid' type='text'>
  			  </div>
  			  <p class='childinfop'>
    	  		<label for="childfirstname">Name:</label>
    	  		<input id='childfirstname' type="text" size="13" placeholder="First Name" oninput='checkForChildChange()'>
    	  		<input id='childlastname' type="text" size="15" placeholder="Last Name" oninput='checkForChildChange()'>
    		  </p>   		
    		  <p class='childinfop'>
    	  		<label for="childDOB">DoB:</label>
    	  		<select id='dobmonth' title='Month child was born' onchange='onDoBChange()'> 		    		
     			</select>
    			<select id='dobday' title='Day child was born' onchange='onDoBChange()'>    		
    			</select>
    			<select id='dobyear' title='Year child was born' onchange='onDoBChange()'>
    			</select>
    	 	  </p>
    	 	  <p class='childinfop'>
    	  		<label for="childgender">Age/Gender:</label>
    	  		<span id='childage-span'></span>
    	  		<select id="childgender" title="Gender of child to be added" oninput='checkForChildChange()'>
      				<option value="Unknown">Unknown</option>
					<option value="Boy">Boy</option>
					<option value="Girl">Girl</option>
				</select>
				<span id='childyear-span'></span>
    	 	  </p>
    	 	  <p class='childinfop'>
    	  		<label for="childschool">School:</label>
    	  		<input id="childschool" class='schoolname' title="School attended, if none, enter Pre-K" type="text" size="28" placeholder="School" oninput='checkForChildChange()'>
    	      </p>
      	  </fieldset>
		  <fieldset id='childwishfieldset'>
		      <legend class="legend-major">Child's Gift Wishes</legend>
	 		  <p><i>Provide child's gift wish(es) and an alternate choice. Clothing or footwear wishes <b>must</b> include size.</i></p>
	 		  <div id='childwish0div'>
		      	<label for="childwish0">Wish 1:</label>
		      	<textarea id='childwish0' oninput='checkForChildChange()' onchange='onWishInputChanged(this)'></textarea>
		      </div>
		      <div id='childwish1div'>
		      	<label for="childwish1">Wish 2:</label>
		      	<textarea id='childwish1' oninput='checkForChildChange()' onchange='onWishInputChanged(this)'></textarea>
 		  	  </div>
 		  	  <div id='childwish2div'>
 		  	  <label for="childwish2">Wish 3:</label>
		      <textarea id='childwish2' oninput='checkForChildChange()' onchange='onWishInputChanged(this)'></textarea>
		      </div>
		      <div id='childwish3div'>
		      <label for="childwish3">Alt. Wish:</label>
		      <textarea id='childwish3' oninput='checkForChildChange()' onchange='onWishInputChanged(this)'></textarea>
		      </div>
		  </fieldset>
	  </div>
      <div class='buttonbar'>
    	<button id="childcancel" onclick="onCancel()">Cancel</button>
        <button id="childupdate" onclick="verifyAddedOrUpdatedChild()" disabled>Update</button>
        <span id='removechildspan'>
          <button id="childremove" onclick="onRemoveChild(this)" disabled>Remove</button>
         </span>
      </div> 
	</div>
  </div>
<!-- Edit Adult Dialog -->
  <div id="editAdult" data-mode='edit' class="modalDialog">
	<div class='inner extended-width'>
	  <a href="#close" title="Close" class="close">X</a>
	  <div class='dialogtopbar'>
		<img class='logo-img' src="onclogo">
		<span class='logospan'>Edit Adult</span>
	  </div>
	  <div class='edit-background'>
	  	  <fieldset>
  			  <legend class="legend-major">Adult Information</legend>
  			  <p>
    	  		<label for="adultname">Name:</label>
    	  		<input id="adultname" title="Name" type="text" size="27" placeholder="First & Last Name" oninput='checkForAdultChange()'>
    		  </p>   		
    	 	  <p>
    	  		<label for="adultgender">Gender:</label>
    	  		<select id="adultgender" oninput='checkForAdultChange()'>
					<option value="Male">Male</option>
					<option value="Female">Female</option>
					<option value="Unknown">Unknown</option>
				</select>
    	 	  </p>
      	  </fieldset>
	  </div>
      <div class='buttonbar'>
    	<button id="adultcancel" onclick="onCancel()">Cancel</button>
        <button id="adultupdate" onclick="addOrUpdateAdult()" disabled>Update</button>
        <span id='removeadultspan'>
          <button id="adultremove" onclick="onRemoveAdult(this)" disabled>Remove</button>
        </span>
      </div> 
	</div>
  </div>    
</body>
</html>