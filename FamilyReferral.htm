 <!DOCTYPE html>
<html>
<head lang="en">
  <meta charset="UTF-8">
  <title>ONC Family Assistance Request</title>
<!-- <script src="//code.jquery.com/jquery-1.12.4.js"></script> -->
  <script src="jquery.js"></script>
  <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <script src="commonfamily.js"></script>
  <link rel="stylesheet" type="text/css" href="oncstylesheet.css">
  <link rel="stylesheet" type="text/css" href="oncdialogstylesheet.css">
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
  <script> 
  	var childrenJson= [];
  	var adultsJson= [];
  	var wishJson = {};
  	var errorColor = '#FF9999';
  	
  	$( function() {
  	    $( ".schoolname" ).autocomplete({
  	      source: schools
  	    });
  	  });
  	$('ul.ui-autocomplete.ui-menu').css({fontSize: '12px', width: '300px'});
  	
  	$( document ).ready(function()
	{
  		//set the hidden values
  		document.getElementById('year').value= sessionStorage.getItem("curryear");
  		document.getElementById('targetid').value= sessionStorage.getItem("targetid");
  			
  		//setup the add child DoB year parameters with a 20 year window
  		var dobYearSelect = document.getElementById('dobyear');
  		var currentyear = sessionStorage.getItem("curryear");
  		for(year = currentyear; year > currentyear-21; year-- )
  		{
  			addComboBoxOption(dobYearSelect, year, year);
  		}
  		
  		//clear the group combobox
  		var groupcb = document.getElementById('groupcb');
		groupcb.options.length = 0;
  	
  		if(window.location.href.indexOf("referral") > -1)
  		{
  			//is a re-referral. Get info for the family
  			familyparams = "year=" + sessionStorage.getItem("prioryear") + "&" +
				"targetid=" + sessionStorage.getItem("targetid") + "&" +
				"schools=false" + "&" +
				"callback=?";

			$.getJSON('getfamily', familyparams, function(family)
			{
				document.getElementById('hohfn').value= family.HOHFirstName;
				document.getElementById('hohln').value= family.HOHLastName;
				
				childrenJson = family.childList;
  		     	updateChildTable(true);
  		     	updateWishTable();
  		     	
  		     	adultsJson = family.adultList;
  		     	updateAdultTable(true);
  		     	
  		     	//update the family group select
  		     	addComboBoxOption(groupcb, family.groupName, family.groupID);
  		     	document.getElementById('groupfs').style.visibility='hidden';
			});
  		}
  		else
  		{
  			//is a new referral, get updated groups for the logged in user from server and place into group
  			//combobox. agentid =-1 defaults to the logged in user
    			var groupparams = "agentid=-1&callback=?";
 
    			$.getJSON('groups', groupparams, function(data)
    			{
	    			//add the groups for the agent
    				for (var i=0; i < data.length; i++)
    					addComboBoxOption(groupcb, data[i].name, data[i].id);
	    			
	    			var groupfselem = document.getElementById('groupfs');
	    			if(data.length > 1)
	    				groupfselem.style.visibility='visible';
	    			else	
	  				groupfselem.style.visibility='hidden';
    			});    	
  		}
  		
  		$(function() {
  		    $("form input").keypress(function (e) {
  		        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
  		            $('button[type=submit] .default').click();
  		            return false;
  		        } else {
  		            return true;
  		        }
  		    });
  		});
  		
  		$('html').bind('keypress', function(e)
  		{
  			if(e.keyCode == 13)
  			{
  				return false;
  			}
  		});
  		
  		$( ".address" ).tooltip({
  		  content: "Uncheck same as HOH address to edit",
  		  disabled: true,
  		  tooltipClass: "addresstooltip",
  		  position: { my: "left center", at: "right center" }  
  		});
	});	
	
	function updateWishTable()
    {
    		$("#twishbody").empty();
    	
    		for(var i=0; i<childrenJson.length; i++)
		{
    			addWishTableRow(i, childrenJson[i]);	//add row to table
		}
    }
	
	function addWishTableRow(cnum, child)
    {
		var childinfo= [child.firstname, getAge(child.sDOB) + " " + child.gender.toLowerCase()];
		var titleinfo= ['First name of child', 'Age as of 12/25/' + sessionStorage.getItem('curryear')];
		var childfieldsize= [15, 14];
		var wishplaceholder=["Wish 1", "Wish 2", "Wish 3", "Alt. Wish"];
        
	    var tabBody = document.getElementById("wishtable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < childinfo.length; index++)	//create the child info cells
        {
        		cell= document.createElement("td");
    	    		content= document.createElement("input");
 	    		content.type="text";
        		content.value = childinfo[index];
        		content.title = titleinfo[index];
        		content.readOnly = true;
        		content.setAttribute("size", childfieldsize[index]);
        		cell.appendChild(content);
        		row.appendChild(cell);
        }

        var giftassistancereqCkBox = document.getElementById('giftreq');
        
        for(wn=0; wn<wishplaceholder.length; wn++)
        {
        		var wlcell= document.createElement("td");
        		var wish= document.createElement("input");
        		wish.type="text";
        		wish.name="wish" + cnum + wn;
        		wish.id="wish" + cnum + wn;
        		wish.placeholder= wishplaceholder[wn] + " for " + child.firstname;
        		wish.setAttribute("size", 22);
        		wish.setAttribute('data-age', calculateAge(child.sDOB));
        		wish.setAttribute('data-cnum', cnum);
        		wish.setAttribute('data-wnum', wn);
        		wish.onchange = function(wish) { onWishInputChanged(wish); }
        		
        		if(giftassistancereqCkBox.checked)
        		{
        			wish.title="";
        			if(wn === 2)	//Wish #3 automatically is "Age Appropriate Gift" for 2019 season
        			{
        				wish.value = "Age Appropriate Gift";
        				wish.readOnly = true;
        			}
        			else
        			{
        				if(child.hasOwnProperty('wish' + wn))
        					wish.value = child['wish' + wn];
        				else
        					wish.value = "";
        				
        				wish.ReadOnly = false;
        			}	
        		}		
        		else
        		{
        			wish.title="Request gift assistace to edit";
        			wish.readOnly = true;
        			wish.value = "";
        		}
        			
        		wlcell.appendChild(wish);
        		row.appendChild(wlcell);
        }
       
        tabBody.appendChild(row);
    }
	
	function addChild()
	{
		var child = {};
	
		var sDoB = document.getElementById('dobmonth').value + '/' +
					document.getElementById('dobday').value + '/' +
					 document.getElementById('dobyear').value;
		
//		var age = calculateAge(document.getElementById('childdob').value);
		var age = calculateAge(sDoB);
		
		if(document.getElementById('childfn').value === "")
			document.getElementById('childfn').style.background = errorColor;
		else if(document.getElementById('childln').value === "")
			document.getElementById('childln').style.background = errorColor;
		else if(document.getElementById('childschool').value === "")
			document.getElementById('childschool').style.background = errorColor;
		else
		{
        		child["firstname"] = document.getElementById('childfn').value;
        		child["lastname"] = document.getElementById('childln').value;
//        	child["sDOB"] =	document.getElementById('childdob').value;
        		child["sDOB"] =sDoB;
        		child["gender"] = document.getElementById('childgender').value;
        		child["school"] = document.getElementById('childschool').value;
        		
        		if(checkForAddChildWarnings(child))
        		{
        			childrenJson.push(child);
        			updateChildTable(true);
            		updateWishTable();
            		clearAddChild();
        		}
		}
	}
	
	function onDoBChange()
	{
		//archive the existing day selection value and clear
		var select = document.getElementById("dobday");
		var curr_value = select.value;
		select.options.length = 0;
		
		var year = document.getElementById('dobyear').value;
		var month = document.getElementById('dobmonth').value;
		var daysInMonth = [31,28,31,30,31,30,31,31,30,31,30,31];
		var lastDayOfMonth = daysInMonth[month-1];
		
		if(month == 2 && ((year % 100 === 0) ? (year % 400 === 0) : (year % 4 === 0)))
			lastDayOfMonth++;

		//add proper # of days to days in month select
		for (i=1; i<=lastDayOfMonth; i++)
		{
			addComboBoxOption(select, i, i);
		}
		
		//reselect the value if its in the list
		if(curr_value <= lastDayOfMonth)
			select.value = curr_value;
		else
			select.value = 1;
	}
	
	function checkForAddChildWarnings(child)
	{
		var age = calculateAge(child.sDOB);
		if(age === 0 || child.gender === 'Unknown')
		{
			//show pop-up asking to verify birthdate and gender
			document.getElementById('childwarningmssg').textContent = "Is " + child.sDOB + " the correct" +
			" DoB and " + child.gender + " the correct gender for the child you're adding?";
			
			window.location=document.getElementById('childwarninganchor').href;
			
			return false;	//in case the user simply clicks to close the warning dialog
		}
		else
			return true;
	}
	
	function onVerifyChild(bCorrect)
	{
		if(bCorrect)
		{
			var child = {};
			child["firstname"] = document.getElementById('childfn').value;
    			child["lastname"] = document.getElementById('childln').value;
//    		child["sDOB"] =	document.getElementById('childdob').value;
    			child["sDOB"]= document.getElementById('dobmonth').value + '/' +
							document.getElementById('dobday').value + '/' +
							 document.getElementById('dobyear').value;
    			child["gender"] = document.getElementById('childgender').value;
    			child["school"] = document.getElementById('childschool').value;
    			childrenJson.push(child);
    			updateChildTable(true);
        		updateWishTable();
        		clearAddChild();
		}
		window.location=document.getElementById('closepopup').href;
	}
	
	function clearAddChild()
	{
		var childfnElement = document.getElementById('childfn');
		var childlnElement = document.getElementById('childln');
		var childschoolElement = document.getElementById('childschool');
		
		childfnElement.value="";
        childlnElement.value="";
//      document.getElementById('childdob').value="";
        document.getElementById('dobmonth').selectedIndex = 0;
        document.getElementById('dobday').selectedIndex = 0;
        document.getElementById('dobyear').selectedIndex = 0;
        
        document.getElementById('childgender').value="Unknown";
        document.getElementById('childschool').value="";
        
        childfnElement.style.background = '#FFFFFF';
        childlnElement.style.background = '#FFFFFF';
        childschoolElement.style.background = '#FFFFFF'; 
	}
	
	function removeChild(index)
	{
		childrenJson.splice(index, 1);
		
		updateChildTable(true);
        updateWishTable();	
	}
	
	function addAdult()
	{
		var adultnameElement = document.getElementById('adultname');
		
		if(adultnameElement.value === "")
			adultnameElement.style.background = errorColor;
		else
		{	
       		var adult = {};
        		adult["name"] = adultnameElement.value;
        		adult["gender"] = document.getElementById('adultgender').value;
        		adultsJson.push(adult);
        
        		updateAdultTable(true);
        
        		clearAddAdult();
		}
	}
	
	function clearAddAdult()
	{
		var adultnameElement = document.getElementById('adultname');
		
		adultnameElement.value="";
        document.getElementById('adultgender').value="Male";
        
        adultnameElement.style.background = '#FFFFFF';
	}
	
	function removeAdult(index)
	{
		adultsJson.splice(index, 1);
		updateAdultTable(true);
	}
	
	function calculateAge(birthday)
	{	
		var curryear = sessionStorage.getItem('curryear');
		var xmasday = new Date(curryear,11,25,0,0,0,0);
		var birthdate= new Date(birthday);
		
		if(birthdate >= xmasday)
		{
			return 0;
		}
		else
		{
			var y= [xmasday.getFullYear(), birthdate.getFullYear()],
	    	ydiff= y[0]-y[1],
	    	m= [xmasday.getMonth(), birthdate.getMonth()],
	    	mdiff= m[0]-m[1],
	    	d= [xmasday.getDate(), birthdate.getDate()],
	    	ddiff= d[0]-d[1];

	    	if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
	    	if(mdiff<0) mdiff+= 12;
	    	if(ddiff<0)
	    	{
	        	birthdate.setMonth(m[1]+1, 0);
	        	ddiff= birthdate.getDate()-d[1]+d[0];
	        	--mdiff;
	    	}
	    	
	    	if(ydiff > 0)
	    		return ydiff;
	    	else 
	    		return 0;
		}
	}
	
	function getAge(birthday)
	{
		var curryear = sessionStorage.getItem('curryear');
		var xmasday = new Date(curryear,11,25,0,0,0,0);
		var birthdate= new Date(birthday);
		
		var age= [];
		if(birthdate >= xmasday)
			age.push('Newborn');
		else
		{
	    		var y= [xmasday.getFullYear(), birthdate.getFullYear()],
	    		ydiff= y[0]-y[1],
	    		m= [xmasday.getMonth(), birthdate.getMonth()],
	    		mdiff= m[0]-m[1],
	    		d= [xmasday.getDate(), birthdate.getDate()],
	    		ddiff= d[0]-d[1];

	    		if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
	    		if(mdiff<0) mdiff+= 12;
	    		if(ddiff<0)
	    		{
	        		birthdate.setMonth(m[1]+1, 0);
	        		ddiff= birthdate.getDate()-d[1]+d[0];
	        		--mdiff;
	    		}
	    		  	
	    		if(ydiff> 0)
	    			age.push(ydiff+ ' yr. old');
	    		else if(mdiff>= 0) 
	    			age.push(mdiff+ ' mos. old');
	    		else if(mdiff=== -1)
	    			age.push('1 yr. old');	//case when dob after xmas of prior year
		}
	    	return age.join('');
	}
	
	function onGiftAssistanceClicked(cb)
	{		
		for(var cnum=0; cnum<childrenJson.length; cnum++)
		{
			for(var wn=0; wn<4; wn++)
			{
				var wishElement = document.getElementById('wish' + cnum + wn);
				
				if(cb.checked)
				{
					wishElement.title="";
					if(wn === 2)	//Wish #3 automatically is "Age Appropriate Gift" for 2019 season
        				{
        					wishElement.value = "Age Appropriate Gift";
        					wishElement.readOnly = true;
        				}
					else
					{
						var childJson = childrenJson[cnum];
        					if(childJson.hasOwnProperty("wish" + wn))
        						wishElement.value = childJson["wish" + wn];
        					else
        						wishElement.value = '';
        				
						wishElement.readOnly = false;
					}	
				}	
				else
				{	
					wishElement.title="Request gift assistace to edit";
					wishElement.value = '';
					wishElement.readOnly = true;
				}
			}	
		}
	}
	
	function mealRqrdClicked(cb)
	{
		var mealCombo = document.getElementById('mealtype');
		var dietres = document.getElementById('dietres');
		//clear the meal type combobox
    		mealCombo.options.length = 0;
		
    		//get current UTC time in millis, add timezone offset in millis to get local time
		//relative to deadline. This way, if a deadline is midnight UTC, it will still be
		//a midnight deadline local time.
		var date = new Date();
		var timeNow = date.getTime() + date.getTimezoneOffset() * 60 * 1000 * -1;
		
		if(cb.checked == false)
		{
			var choices = {'No Assistance Rqrd':'No Assistance Rqrd'};
			mealCombo.disabled = true;
			dietres.value="";
			dietres.disabled = true;
		}
		else if(timeNow > sessionStorage.getItem('decemberMealCutoff'))
		{
			var choices = {'Unavailable - Past Deadline' : 'Unavailable'};
			mealCombo.disabled = true;
			dietres.value="";
			dietres.disabled = true;
		}
		else if(timeNow > sessionStorage.getItem('thanksgivingMealCutoff'))
		{
			var choices = {"December":"December"};
			mealCombo.disabled = false;
			dietres.disabled = false;
		}
		else
		{
			var choices = {"Thanksgiving":"Thanksgiving", "December":"December",
							"Thanksgiving and December, if available":"Thanksgiving_December",
							"December and Thanksgiving, if available":"December_Thanksgiving"};
			mealCombo.disabled = false;
			dietres.disabled = false;	
		}
		
		//add the meal choices
		for(var key in choices)
		{
			var mealOption = document.createElement("option");
			mealOption.text = key;
	    		mealOption.value = choices[key];
	    		try 
	    		{
	        		mealCombo.add(mealOption, null); //Standard 
	    		}
	    		catch(error)
	    		{
	        		mealCombo.add(mealOption); // IE only
	    		}  
		}   	
	}
	function addComboBoxOption(combobox, text, value)
	{
		var option = document.createElement("option");
		option.text = text;
    		option.value = value;
    		try 
    		{
        		combobox.add(option, null); //Standard 
    		}
    		catch(error)
    		{
        		combobox.add(option); // IE only
    		}
	}
	function onWishInputChanged(wishevent)
	{
		var cnum = wishevent.target.getAttribute("data-cnum");
		var wnum = wishevent.target.getAttribute("data-wnum");
		
		var childJson = childrenJson[cnum];
		childJson["wish" + wnum] = wishevent.target.value;
		
		var childage = document.getElementById(event.target.id).getAttribute('data-age');
		if(childage < 13)
		{	
			var content = document.getElementById(event.target.id).value.toLowerCase();
			if(content.includes('gift card') || content.includes('giftcard'))
			{
				document.getElementById('giftcardmssg').textContent = "Based on limited availability, ONC" +
				"\r\ngenerally provides gift cards to children\r\n13 and older. If there is an extenuating" +
				"\r\ncircumstance requiring a gift card," +
				"\r\nplease note it in Family Details below\r\n\and include the type of gift card" +
				"\r\n(i.e.: Target, Amazon, iTunes, etc.)\r\nwith the corresponding wish.";
			
				window.location=document.getElementById('giftcardanchor').href;
			}
		}
	}
  </script>
  <style>
	ul.ui-autocomplete.ui-menu
	{
		font-size:12px;
		width:300px;
	}
	#submitspan {float: right;}
	#errormessage
	{
		float: left;
		font-weight: bold;
		font-style: italic;
		color: red;
	}
	table, th, td {border: 1px solid black;}
	th, td {min-width: 60px; }
	.addresstooltip
	{
  		background-color: black;
  		color: rgb(255, 77, 85) !important;
  		font-size: 11px;
	}
	.addtable  { border: none; border-collapse: collapse;}
	.addtable td { border: none; }
	.namecol { width: 198px; }
	.fncol { width: 104px; }
	.lncol { width: 110px; }
    .dobcol { width: 178px; }
    .gendercol { width: 86px; }
    .schoolcol { width: 149px; } 
    .actcol { width: 68px; } 
	#giftcardmssg 
	{
		margin-top: 0px;
		white-space: pre;
	}
	#warningbuttonbar
	{
		margin-top: 10px;
		display: flex;
 		justify-content: center;
	}
  </style>
</head>
<body>
  <a href="#badfamdlg" id="badfamanchor" style="visibility: hidden">Bad Family Referral</a>
  <a href="#childwarningdlg" id="childwarninganchor" style="visibility: hidden">Child Info Verification</a>
  <a href="#giftcarddlg" id="giftcardanchor" style="visibility: hidden">Gift Card Warning</a>
  <a href="#verifdlg" id="verifanchor" style="visibility: hidden">Address Verification</a>
  <a href="#timeoutdlg" id="timeoutanchor" style="visibility: hidden">Timeout</a>
  <div id="topbar" class="topbar">
    <img src="onclogo" height="55" width="75"/>
    <p><span id="banner">ONC Family Assistance Referral Form</span><br>
	<span id="message">(please complete and click Submit To ONC)</span></p>
  </div>
  <nav>
    <ul>
     <li id="homeli"><a id='homelink' href='startpage'>Home</a></li>
<!--  <li id="homeli"><a id='homelink'>Home</a></li>	-->  	
	</ul>
	<ul class='floatright'>
	    <li id="logoutli"><a href='javascript:onLogoutLink()'>Logout</a></li>
	</ul>
  </nav>
  <form id="familyform" action="referfamily" method="post">
  <input id='year' type="hidden" name="year">
  <input id='targetid' type="hidden" name="targetid">
  <input id='uuid' type="hidden" name="uuid" value= 'SERVER_GENERATED_UUID'>
  <br>
  <fieldset>
  <legend class="legend-major">Head of Household (HOH) Information</legend>
    <input id='hohfn' title="First Name" name="hohfn" type="text" size="20" placeholder="First Name" required>
    <input id='hohln' title="Last Name" name="hohln" type="text" size="20" placeholder="Last Name" required>
    <input id="homephone" title="Home Phone #" name="homephone" type="text" size="18" placeholder="Primary Phone #" onchange="verifyPhoneNumber(0)" required>
    <input id= "cellphone" title="Cell Phone #" name="cellphone" type="text" size="18" placeholder="Alternate Phone #" onchange="verifyPhoneNumber(1)">
    <input id= "altphone" title="Alternate Phone #" name="altphone" type="text" size="18" placeholder="2nd Alt Phone #" onchange="verifyPhoneNumber(2)">
  	<select id='language' title='Primary language' name='language'>
		<option value="English">English</option>
		<option value="Spanish">Spanish</option>
		<option value="Arabic">Arabic</option>
		<option value="Korean">Korean</option>
		<option value="Vietnamese">Vietnamese</option>
		<option value="Other">Other</option>
		<option value="?">Unknown</option>
	</select>
	<br>
    <input id="housenum" class='address' title="House #" name="housenum" type="text" size="8" placeholder="House #" autocomplete="off" required>
    <input id="street" class='address' title="Street Name" name="street" type="text" size="20" placeholder="Street Name" autocomplete="off" required>
    <input id="unit" title="Apt. or Unit #" name="unit" type="text" size="8" placeholder="Apt #" autocomplete="off">
    <select id="city" title="City" name="city" onchange="cityChanged('city')">
    	<option value="Centreville">Centreville</option>
		<option value="Chantilly">Chantilly</option>
		<option value="Clifton">Clifton</option>
		<option value="Fairfax">Fairfax</option>
		<option value="Fairfax Station">Fairfax Station</option>
		<option value="Sully Station">Sully Station</option>
		<option value="Alexandria">Alexandria</option>
		<option value="Annandale">Annandale</option>
		<option value="Arlington">Arlington</option>
		<option value="Baileys Crossroads">Baileys Crossroads</option>
		<option value="Belleview">Belleview</option>
		<option value="Burke">Burke</option>
		<option value="Cameron Station">Cameron Station</option>
		<option value="Dunn Loring">Dunn Loring</option>
		<option value="Engleside">Engleside</option>
		<option value="Falls Church">Falls Church</option>
		<option value="Fort Belvoir">Fort Belvoir</option>
		<option value="Franconia">Franconia</option>
		<option value="Great Falls">Great Falls</option>
		<option value="Greenway">Greenway</option>
		<option value="Herndon">Herndon</option>
		<option value="Jefferson Manor">Jefferson Manor</option>
		<option value="Kingstowne">Kingstowne</option>
		<option value="Lorton">Lorton</option>
		<option value="Mason Neck">Mason Neck</option>
		<option value="McLean">McLean</option>
		<option value="Merrifield">Merrifield</option>
		<option value="Mosby">Mosby</option>
		<option value="Mount Vernon">Mount Vernon</option>
		<option value="Newington">Newington</option>
		<option value="North Springfield">North Springfield</option>
		<option value="Oak Hill">Oak Hill</option>
		<option value="Oakton">Oakton</option>
		<option value="Pimmit">Pimmit</option>
		<option value="Reston">Reston</option>
		<option value="Seven Corners">Seven Corners</option>
		<option value="Springfield">Springfield</option>
		<option value="Tysons Corner">Tysons Corner</option>
		<option value="Vienna">Vienna</option>
		<option value="West McLean">West McLean</option>
		<option value="West Springfield">West Springfield</option>
	</select>   
    <select id="zipcode" title="Zip Code" name="zipcode">
		<option value="20120">20120</option>
		<option value="20121">20121</option>
		<option value="20122">20122</option>
	</select>
	<input id='email' title="Email address" name="email" type="email" size="30" onchange='verifyEmail()' placeholder="email address">
	<button type="button" id='verifyhohaddress' class='verifybutton' onclick="verifyAddress(this)">Verify</button>
  </fieldset>
  <br>
  <fieldset>
  <legend class="legend-major">Delivery Address and Transportation: Provide address that ONC will use for gift delivery and family's access to transportation</legend>
	<input type="checkbox" id="sameaddress" title="Uncheck to edit HoH or Delivery address" onclick="sameAddressClicked(this)">Check if same as HOH address above, otherwise complete:
	<input id="delhousenum" class='address' title="Delivery House #" name="delhousenum" type="text" size="8" placeholder="House #" autocomplete="off" required>
    	<input id="delstreet" class='address' title="Delivery Street Name" name="delstreet" type="text" size="20" placeholder="Street Name" autocomplete="off" required>
    <input id="delunit" title="Deleivery Apt. or Unit #" name="delunit" type="text" size="8" placeholder="Apt #" autocomplete="off">
    <select id="delcity" title="Delivery City" name="delcity" onchange="cityChanged('delcity')">
    	<option value="Centreville">Centreville</option>
		<option value="Chantilly">Chantilly</option>
		<option value="Clifton">Clifton</option>
		<option value="Fairfax">Fairfax</option>
		<option value="Fairfax Station">Fairfax Station</option>
		<option value="Sully Station">Sully Station</option>
		<option value="Alexandria">Alexandria</option>
		<option value="Annandale">Annandale</option>
		<option value="Arlington">Arlington</option>
		<option value="Baileys Crossroads">Baileys Crossroads</option>
		<option value="Belleview">Belleview</option>
		<option value="Burke">Burke</option>
		<option value="Cameron Station">Cameron Station</option>
		<option value="Dunn Loring">Dunn Loring</option>
		<option value="Engleside">Engleside</option>
		<option value="Falls Church">Falls Church</option>
		<option value="Fort Belvoir">Fort Belvoir</option>
		<option value="Franconia">Franconia</option>
		<option value="Great Falls">Great Falls</option>
		<option value="Greenway">Greenway</option>
		<option value="Herndon">Herndon</option>
		<option value="Jefferson Manor">Jefferson Manor</option>
		<option value="Kingstowne">Kingstowne</option>
		<option value="Lorton">Lorton</option>
		<option value="Mason Neck">Mason Neck</option>
		<option value="McLean">McLean</option>
		<option value="Merrifield">Merrifield</option>
		<option value="Mosby">Mosby</option>
		<option value="Mount Vernon">Mount Vernon</option>
		<option value="Newington">Newington</option>
		<option value="North Springfield">North Springfield</option>
		<option value="Oak Hill">Oak Hill</option>
		<option value="Oakton">Oakton</option>
		<option value="Pimmit">Pimmit</option>
		<option value="Reston">Reston</option>
		<option value="Seven Corners">Seven Corners</option>
		<option value="Springfield">Springfield</option>
		<option value="Tysons Corner">Tysons Corner</option>
		<option value="Vienna">Vienna</option>
		<option value="West McLean">West McLean</option>
		<option value="West Springfield">West Springfield</option>
	</select>	
    <select id="delzipcode" title="Deleivery Zip Code" name="delzipcode">
		<option value="20120">20120</option>
		<option value="20121">20121</option>
		<option value="20122">20122</option>
	</select>
	<button type="button" id='verifydeladdress' class='verifybutton' onclick="verifyAddress(this)">Verify</button>
  <br><br>
  <label>Does the family have their own transportation? </label>
  <input id="transYes" type="radio" name="transportation" value="Yes">Yes
  <input id="transNo" type="radio" name="transportation" value="No" checked>No
  </fieldset>
  <br>
  <fieldset>
  <legend class="legend-major">Family Members</legend>
  <fieldset class="gray">
  	<legend>Children in family (ONC will serve children under 18, or 18+ if they are still enrolled in FCPS. Enter Pre-K for children not yet enrolled)</legend>
  	<table class='addtable'><tr>
  	<td class='fncol'><input id="childfn" title="First name of child to be added" type="text" size='14' placeholder="First Name"></td>
  	<td class='lncol'><input id="childln" title="Last name of child to be added" type="text" size='15' placeholder="Last Name"></td>
    <td class='dobcol'><select id='dobmonth' title='Month child was born' onchange='onDoBChange()'>
    		<option value=1>Jan</option>
    		<option value=2>Feb</option>
    		<option value=3>Mar</option>
    		<option value=4>Apr</option>
    		<option value=5>May</option>
    		<option value=6>Jun</option>
    		<option value=7>Jul</option>
    		<option value=8>Aug</option>
    		<option value=9>Sep</option>
    		<option value=10>Oct</option>
    		<option value=11>Nov</option>
    		<option value=12>Dec</option>
     </select>
    	<select id='dobday' title='Day child was born'>
    		<option value=1>1</option>
    		<option value=2>2</option>
    		<option value=3>3</option>
    		<option value=4>4</option>
    		<option value=5>5</option>
    		<option value=6>6</option>
    		<option value=7>7</option>
    		<option value=8>8</option>
    		<option value=9>9</option>
    		<option value=10>10</option>
    		<option value=11>11</option>
    		<option value=12>12</option>
    		<option value=13>13</option>
    		<option value=14>14</option>
    		<option value=15>15</option>
    		<option value=16>16</option>
    		<option value=17>17</option>
    		<option value=18>18</option>
    		<option value=19>19</option>
    		<option value=20>20</option>
    		<option value=21>21</option>
    		<option value=22>22</option>
    		<option value=23>23</option>
    		<option value=24>24</option>
    		<option value=25>25</option>
    		<option value=26>26</option>
    		<option value=27>27</option>
    		<option value=28>28</option>
    		<option value=29>29</option>
    		<option value=30>30</option>
    		<option value=31>31</option>
    	</select>
    	<select id='dobyear' title='Year child was born' onchange='onDoBChange()'>
    	</select>
    	</td>
	<td class='gendercol'><select id="childgender" title="Gender of child to be added">
      	<option value="Unknown">Unknown</option>
		<option value="Boy">Boy</option>
		<option value="Girl">Girl</option>
	</select></td>
	<td class='schoolcol'><input id="childschool" class='schoolname' title="School attended, if none, enter Pre-K" type="text" size="20" placeholder="School"></td>
	<td><button type="button" onclick="addChild()" title="Click to add child">Add Child</button></td>
	<td><button type="button" onclick="clearAddChild()" title="Click to clear add child fields">Clear</button></td>
	</tr></table>
  <table id="childtable" border="1">
  	<thead>
    	<tr>
        	<th class='fncol'>First Name</th>
        	<th class='lncol'>Last Name</th>
        	<th class='dobcol'>DoB</th>
        	<th class='gendercol'>Gender</th>
        	<th class='schoolcol'>School</th>
        	<th class='actcol'>Action</th>
    	</tr>
      </thead>
      <tbody id="tchildbody">
      </tbody>
  </table>
  </fieldset>
  <br>
  <fieldset>
  	<legend>Other adults in family (in addition to the head of household)</legend>
  	<table class='addtable'><tr>
  	<td class='namecol'><input id="adultname" title="Name" type="text" size="28" placeholder="First & Last Name"></td>
    <td class='gendercol'><select id="adultgender" title="Gender">
		<option value="Male">Male</option>
		<option value="Female">Female</option>
		<option value="Unknown">Unknown</option>
	</select></td>
	<td><button type="button" onclick="addAdult()" title="Click to add adult to family">Add Adult</button></td>
	<td><button type="button" onclick="clearAddAdult()" title="Click to clear adult fields">Clear</button></td>
	</tr></table>
  <table id="adulttable" border="1">
  	<thead>
    	<tr>
        	<th class='namecol'>Name</th>
        	<th class='gendercol'>Gender</th>
        	<th class='actcol'>Action</th>
    	</tr>
    </thead>
    <tbody id="tadultbody">
    </tbody>
</table>
  </fieldset>
  </fieldset>
  <br>
  <fieldset>
   <legend class="legend-major">Gift Assistance: Check if family requests gifts and provide 3 wishes per child, in priority order, plus an alternate wish. If clothing or footwear, please include size</legend>
     <input type="checkbox" id='giftreq' name='giftreq' onclick='onGiftAssistanceClicked(this)' title="Check if family wants gift assistance">Check to request gift assistance and complete below:
  	 <table id="wishtable" border="1">
  	<thead>
    	<tr>
        	<th>First Name</th>
        	<th>Age/Gender</th>
        	<th>Wish 1</th>
        	<th>Wish 2</th>
        	<th>Wish 3</th>
        	<th>Alternate Wish</th>	
    	</tr>
      </thead>
      <tbody id="twishbody">
      </tbody>
  </table>
  </fieldset>
  <br>
  <fieldset>
  <legend class="legend-major">Meal Assistance: ONC will refer family to WFCM or other meal providing organizations</legend>
	<input type="checkbox" id='mealreq' onclick="mealRqrdClicked(this)" title="Check if family needs meal assistance">Check to request meal assistance for:
    <select id="mealtype" name="mealtype" title="When does the family need meal assistance?" disabled>
		<option value="No Assistance Rqrd">No Assistance Rqrd</option>
	</select>
	<input id="dietres" type="text" name="dietres" size="68" placeholder="Describe any dietary restrictions" title="Describe any family dietary restrictions" disabled>
  </fieldset>
  <br>
  <fieldset>
   <legend class="legend-major">Family Details: Provide any additional details that may assist in serving this family</legend>
	<input type="text" id='detail' name="detail" size="128" placeholder="Details about family ONC should know" title="Provide ONC with information about the family you feel is important">
  </fieldset>
  <fieldset id='groupfs'>
   <legend class="legend-major">Family Group: Select this referral's originating school/organization</legend>
    <select id="groupcb" name='groupcb' title="Family Group"></select>
  </fieldset>
  <br>
  <div>
  	<span id="errormessage"></span>
  	<span id="submitspan">
  	  <label for="submit">Please check that all fields are complete prior to submission: </label>
  	  <input id="btnsubmit" type="button" value="Submit" style="background-color: #336699; color: #ffffff;" title="Click to sumbit family to ONC" onclick= onSubmit(true)>
  	</span>
  </div>
</form>
<!-- Invalid Family Dialog -->
  <div id="badfamdlg" class="modalDialog">
	<div class='inner'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logoimg' src="onclogo">
		  <span class="logospan">Invalid Family Referral</span>
		</div>
		<span class='verifspan'><img class='errorimg' src="erroricon"></span>
		<span id='badfammssg'></span>
	</div>
  </div>
  <!-- Child Warning Dialog -->
  <div id="childwarningdlg" class="modalDialog">
	<div class='inner'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logoimg' src="onclogo">
		  <span class="logospan">Verify Child Info</span>
		</div>
		<span class='verifspan'><img class='errorimg' src="erroricon"></span>
		<span id='childwarningmssg'></span>
		<div id='warningbuttonbar'>
      	  <button id="correct" onclick="onVerifyChild(true)">Yes, As Best I Know</button>
      	  <button id="fixit" onclick="onVerifyChild(false)">No, I'll Fix Them</button>
    	</div>
	</div>
  </div>
  <!-- Address Verification Dialog -->
  <div id="verifdlg" class="modalDialog">
	<div class='inner'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logoimg' src="onclogo">
		  <span class='logospan'>Address Verification</span>
		</div>
		<div>
		  <span class='verifspan'><img id='verifimg' class='errorimg' src="erroricon"></span>
		  <span id='verifmssg'></span>
		</div>
	</div>
  </div>
  <!-- Gift Card Warning Dialog -->
  <div id="giftcarddlg" class="modalDialog">
	<div class='inner'>
		<a id='closepopup' href="#close" title="Close" class="close">X</a>
		<div class='dialogtopbar'>
		  <img class='logoimg' src="onclogo">
		  <span class=logospan>Gift Cards</span>
		</div>
		  <p id='giftcardmssg'></p>
	</div>
  </div>
<!-- Timeout Dialog -->
  <div id="timeoutdlg" class="modalDialog">
	<div class='inner'>
		<div class='dialogtopbar'>
		  <img class='logoimg' src="onclogo"/>
		  <span id='dialogmssg'>Session Timeout</span>
		</div>
		<p id='to_mssg'>Your session expired due to inactivity</p>
    	<div>
      	  <button id="timeoutsubmit" onclick="onSessionTimeout()">Logout</button>
    	</div> 
	</div>
  </div>    
</body>
</html>   