 <!DOCTYPE html>
<html>
<head lang="en">
  <title>ONC Family Assistance Request</title>
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
  <script> 
  	var url = window.location.protocol + '://' + window.location.host;
	var urlChildren = url.concat("/children?token=REPLACE_TOKEN&year=YEAR&targetid=TARGETID&callback=?");
  	var urlAdults = url.concat("/adults?token=REPLACE_TOKEN&year=YEAR&targetid=TARGETID&callback=?");
  	var urlAddress = url.concat("/address?token=REPLACE_TOKEN&housenum=HOUSENUM&street=STREET&city=CITY&zipcode=ZIPCODE&callback=?");
  	var childrenJson= [];
  	var adultsJson= [];
  	var hohAddressGood = false;
  	var delAddressGood = false;
  	var errorColor = '#FF9999';
  	
  	$(function() {
  	    $( "#childdob" ).datepicker({
  	      changeMonth: true,
  	      changeYear: true
  	    });
  	  });
  	
  	$( document ).ready(function()
	{
  		var yearinput = document.getElementById("year");
  		yearinput.value = new Date().getFullYear().toString();
  		
  		var urlmode = window.location.href;
  		if(urlmode.indexOf("referral") > -1)
  		{
  			$.getJSON(urlChildren, function(data)
  			{
  		     	childrenJson = data;
  		     	updateChildTable();
  		     	updateWishTable();
  			});
  		
  			$.getJSON(urlAdults, function(data)
  			{
  		     	adultsJson = data;
  		     	updateAdultTable();
  			});
  		}	
  		
  		$(function() {
  		    $("form input").keypress(function (e) {
  		        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
  		            $('button[type=submit] .default').click();
  		            return false;
  		        } else {
  		            return true;
  		        }
  		    });
  		});
  		
  		$('html').bind('keypress', function(e)
  		{
  			if(e.keyCode == 13)
  			{
  				return false;
  			}
  		});
	});	
	
	function updateChildTable()
    {
    	$("#tchildbody").empty();
    	
    	for(var i=0; i<childrenJson.length; i++)
		{
    		addChildTableRow(i, childrenJson[i]);	//add row to table
		}
    }
	
	function updateWishTable()
    {
    	$("#twishbody").empty();
    	
    	for(var i=0; i<childrenJson.length; i++)
		{
    		addWishTableRow(i, childrenJson[i]);	//add row to table
		}
    }
	
	function updateAdultTable()
    {
    	$("#tadultbody").empty();
    	
    	for(var i=0; i<adultsJson.length; i++)
		{
    		addAdultTableRow(i, adultsJson[i]);	//add row to table
		}
    }
	
	function addChildTableRow(cnum, child)
    {
        var childinfo = [child.firstname, child.lastname, child.sDOB, child.gender, child.school];
        var fieldname = ["childfn", "childln", "childdob", "childgender", "childschool"];
        var fieldsize = [15, 16, 11, 11, 20];
        
	    var tabBody = document.getElementById("childtable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
    	
        for(index=0; index < childinfo.length; index++)	//create the child info cells
        {
        	cell= document.createElement("td");
    	    content= document.createElement("input");
 	    	content.type="text";
 	    	content.name=fieldname[index] + cnum;
        	content.value = childinfo[index];
        	content.setAttribute("size", fieldsize[index]);
        	cell.appendChild(content);
        	row.appendChild(cell);
        }
        
        btn = document.createElement("button");
        btn.value=cnum;
        btn.type="button";
        btn.innerHTML = "Remove";
        btn.onclick=function() {removeChild(cnum);};
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
	
	function addWishTableRow(cnum, child)
    {
		var childinfo= [child.firstname, child.age + " " + child.gender.toLowerCase()];
		var childfieldsize= [15, 14];
		var wishplaceholder=["Wish 1", "Wish 2", "Wish 3", "Alt. Wish"];
        
	    var tabBody = document.getElementById("wishtable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
         
        for(index=0; index < childinfo.length; index++)	//create the child info cells
        {
        	cell= document.createElement("td");
    	    content= document.createElement("input");
 	    	content.type="text";
        	content.value = childinfo[index];
        	content.readOnly = true;
        	content.setAttribute("size", childfieldsize[index]);
        	cell.appendChild(content);
        	row.appendChild(cell);
        }

        for(wn=0; wn<wishplaceholder.length; wn++)
        {
        	var wlcell= document.createElement("td");
        	var wish= document.createElement("input");
        	wish.type="text";
        	wish.name="wish" + cnum + wn;
        	wish.placeholder= wishplaceholder[wn] + " for " + child.firstname;
        	wish.setAttribute("size", 22);
        	wlcell.appendChild(wish);
        	row.appendChild(wlcell);
        }
        
        tabBody.appendChild(row);
    }
	
	function addAdultTableRow(anum, adult)
    {
	    var tabBody = document.getElementById("adulttable").getElementsByTagName('tbody').item(0);
        row=document.createElement("tr");
        
        cell= document.createElement("td");
        adultname= document.createElement("input");
        adultname.type="text";
        adultname.name="adultname" + anum;
        adultname.value = adult.name;
        adultname.setAttribute("size", 27);
        cell.appendChild(adultname);
        row.appendChild(cell);
        
        cell= document.createElement("td");
        var adultgender= document.createElement("input");
        adultgender.type="text";
        adultgender.name="adultgender" + anum;
        adultgender.value = adult.gender;
        adultgender.setAttribute("size", 11);
        cell.appendChild(adultgender);
        row.appendChild(cell);
        
        var btn = document.createElement("button");
        btn.value= anum;
        btn.type="button";
        btn.innerHTML = "Remove";
        btn.onclick=function() {removeAdult(anum);};
        row.appendChild(btn);
        
        tabBody.appendChild(row);
    }
	
	function addChild()
	{
        var child = {};
        child["firstname"] = document.getElementById('childfn').value;
        child["lastname"] = document.getElementById('childln').value;
        child["sDOB"] = document.getElementById('childdob').value;
        child["gender"] = document.getElementById('childgender').value;
        child["school"] = document.getElementById('childschool').value;
	    child["age"] = getAge(child["sDOB"]);
        childrenJson.push(child);
        
        updateChildTable();
        updateWishTable();
        
        clearAddChild();  
	}
	
	function clearAddChild()
	{
		document.getElementById('childfn').value="";
        document.getElementById('childln').value="";
        document.getElementById('childdob').value="";
        document.getElementById('childgender').value="Boy";
        document.getElementById('childschool').value="";
	}
	
	function removeChild(index)
	{
		console.log("Removing index " + index);
		childrenJson.splice(index, 1);
		
		updateChildTable();
        updateWishTable();	
	}
	
	function addAdult()
	{
        var adult = {};
        adult["name"] = document.getElementById('adultname').value;
        adult["gender"] = document.getElementById('adultgender').value;
        adultsJson.push(adult);
        
        updateAdultTable();
        
        clearAddAdult();  
	}
	
	function clearAddAdult()
	{
		document.getElementById('adultname').value="";
        document.getElementById('adultgender').value="Male";
	}
	
	function removeAdult(index)
	{
		adultsJson.splice(index, 1);
		updateAdultTable();
	}
	
	function getAge(birthdate)
	{
		var curryear = new Date().getFullYear();
		var xmasday = new Date(curryear,11,25,0,0,0,0);
		var birthdate= new Date(birthdate);
		
		var age= [];
		
		if(birthdate >= xmasday)
		{
			age.push('Newborn');
		}
		else
		{
	    	var y= [xmasday.getFullYear(), birthdate.getFullYear()],
	    	ydiff= y[0]-y[1],
	    	m= [xmasday.getMonth(), birthdate.getMonth()],
	    	mdiff= m[0]-m[1],
	    	d= [xmasday.getDate(), birthdate.getDate()],
	    	ddiff= d[0]-d[1];

	    	if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
	    	if(mdiff<0) mdiff+= 12;
	    	if(ddiff<0)
	    	{
	        	birthdate.setMonth(m[1]+1, 0);
	        	ddiff= birthdate.getDate()-d[1]+d[0];
	        	--mdiff;
	    	}
	    	
	    	if(ydiff> 0) age.push(ydiff+ ' yr. old');
	    	else if(mdiff> 0) age.push(mdiff+ ' mos. old');
		}
	    	return age.join('');
	}
	
	function sameAddressClicked(cb)
	{
		var addrElements = ['housenum', 'street', 'unit', 'city', 'zipcode'];
		var delElements = ['delhousenum', 'delstreet', 'delunit', 'delcity', 'delzipcode'];
		for(var i=0; i<delElements.length; i++)
		{
			var addrElement = document.getElementById(addrElements[i]);
			var delElement = document.getElementById(delElements[i]);
			
			if(cb.checked == true)
			{	
				delElement.value = addrElement.value;
				setEnabledReadOnly(delElement, true);
				setEnabledReadOnly(addrElement, true);
			}
			else
			{
				delElement.value = "";
				
				if(delElement.type === 'select-one')
					delElement.selectedIndex = 0;
				
				setEnabledReadOnly(delElement, false);
				setEnabledReadOnly(addrElement, false);
			}
		}
		
		verifyDeliveryAddress();
	}
	
	function setEnabledReadOnly(element, tf)
	{
		if(element.type !== 'select-one')
			element.readOnly = tf;
	}
	
	function mealRqrdClicked(cb)
	{
		var mealCombo = document.getElementById('mealtype');
		var dietres = document.getElementById('dietres');
		//clear the meal type combobox
    	mealCombo.options.length = 0;
		
		if(cb.checked == true)
		{
			var choices = ["Thanksgiving", "December", "Both"];
			mealCombo.disabled = false;
			dietres.disabled = false;
		}
		else
		{
			var choices = ["No Assistance Rqrd"];
			mealCombo.disabled = true;
			dietres.value="";
			dietres.disabled = true;
		}
		
		//add the meal choices
		for (var i=0; i < choices.length; i++)
		{
			var mealOption = document.createElement("option");
			mealOption.text = choices[i];
	    	mealOption.value = choices[i];
	    	try 
	    	{
	        	mealCombo.add(mealOption, null); //Standard 
	    	}
	    	catch(error)
	    	{
	        	mealCombo.add(mealOption); // IE only
	    	}  
		}   	
	}
	function verifyHOHAddress()
	{
		//called when HOH address inputs blur
		var addrElement = [document.getElementById('housenum'), 
		                   document.getElementById('street'), 
		                   document.getElementById('city'), 
		                   document.getElementById('zipcode')];
		
		//check to see that housenum and street are provided
		if(addrElement[0].value !== "" && addrElement[1].value !== "" )
		{
			//form the address url
	        var verifyAddressUrl = createAddressUrl(addrElement, urlAddress);
	        var addrresponse;
	        $.getJSON(verifyAddressUrl, function(data)
	      	{
	      		addrresponse = data;
	      		
	      		if(addrresponse.bAddressValid === true)
	      		{
	      			changeAddressBackground(addrElement, '#FFFFFF');
	      			hohAddressGood = true;
	      		}	
	      		else
	      		{
	      			hohAddressGood = false;
	      			changeAddressBackground(addrElement, errorColor);
//	      			alert("HOH Address invalid: doesn't exist, please correct");
	      		}
	      	});
		}
		else
			hohAddressGood = false;
	}
	function verifyDeliveryAddress()
	{
		//called when HOH address inputs blur
		var addrElement = [document.getElementById('delhousenum'), 
		                   document.getElementById('delstreet'), 
		                   document.getElementById('delcity'), 
		                   document.getElementById('delzipcode')];
		
		//check to see that housenum and street are provided
		if(addrElement[0].value !== "" && addrElement[1].value !== "" )
		{
			//form the address url
	        var verifyAddressUrl = createAddressUrl(addrElement, urlAddress);
	        var addrresponse;
	        $.getJSON(verifyAddressUrl, function(data)
	      	{
	      		addrresponse = data;
	      		
	      		if(addrresponse.bAddressValid === true)
	      		{
	      			changeAddressBackground(addrElement, '#FFFFFF');
	      			delAddressGood = true;
	      		}	
	      		else
	      		{
	      			delAddressGood = false;
	      			changeAddressBackground(addrElement, errorColor);
//	      			alert("Delivery Address invalid: doesn't exist, please correct");
	      		}
	      	});
		}
		else
			delAddressGood = false;
	}
	
	function changeAddressBackground(elements, color)
	{
			elements[0].style.backgroundColor = color;
			elements[1].style.backgroundColor = color;
	}
	function createAddressUrl(addrElement, baseAddress)
	{
		var replText = ["HOUSENUM", "STREET", "CITY", "ZIPCODE"];
		var address = baseAddress;
		for(var i=0; i< addrElement.length; i++)
		{
			address = address.replace(replText[i], addrElement[i].value);	
		}
		
		return address;
	}
	function verifyPhoneNumbers()
	{
		var errorMssg= "";
		
		var phoneName= ["Primary", "Alternate", "2nd Alternate"];
		
		if(document.getElementById('homephone').value=="")
		{
			document.getElementById('homephone').style.backgroundColor= errorColor;
			errorMssg= "Submission Error: Primary Phone # missing"
		}
		else
		{
			var index=0;
			while(index<phoneName.length && verifyPhoneNumber(index))
				index++;
			
			if(index < phoneName.length)	
				errorMssg= "Submission Error: " + phoneName[index] + " Phone # is invalid";	
		}
		
		return errorMssg;	
	}
	function verifyPhoneNumber(elementNum)
	{
		var phoneElement= [document.getElementById('homephone'), 
							document.getElementById('cellphone'),
							document.getElementById('altphone')];
		
		var numberGood = true;
		var number= phoneElement[elementNum].value;
		
		if(number == '')
			phoneElement[elementNum].style.backgroundColor = '#FFFFFF';
		else if(number.length===12 && number.charAt(3)==='-' && number.charAt(7)==='-')
			phoneElement[elementNum].style.backgroundColor = '#FFFFFF';
		else if(number.length===12 && number.charAt(3)==='.' && number.charAt(7)==='.')
			phoneElement[elementNum].style.backgroundColor = '#FFFFFF';
		else if(number.length===10 && number.indexOf("-")===-1 && number.indexOf(".")===-1)
			phoneElement[elementNum].style.backgroundColor = '#FFFFFF';
		else
		{
			numberGood= false;
			phoneElement[elementNum].style.backgroundColor = errorColor;
		}
		
		return numberGood;
	}
	function submitReferral()
	{
		var phoneNumbersGood= true;
		var errorElement = document.getElementById('errormessage');
 
		if(hohAddressGood===false)
			errorElement.textContent = "Submission Error: HoH address does not exist";
		else if(delAddressGood===false)
			errorElement.textContent = "Submission Error: Delivery address does not exist";
		else
		{	
			//check phone numbers
			var phoneMssg= verifyPhoneNumbers();
			if(phoneMssg != '')
			{
				phoneNumbersGood=false;
				errorElement.textContent=phoneMssg;
			}
		}
		
	    return hohAddressGood && delAddressGood && phoneNumbersGood;
	}
  </script>
  <style>
  	.topbar 
    {
    	width:900px;
    	height:72px;
    	margin:0 auto;
    	background-color: #FF0000;
		border: 1px solid black;
	}
	.topbar img
	{
    	float:left;
   		border: 0;
	}
	div.ui-datepicker
	{
		width:480px;
  		background-color: lightgray;
  		font-size:15px;
	}
	form
	{
		width:900px;
		margin:0 auto;
		background-color: #3CB371;
		border: 1px solid black;
	}
	button
    {
        background-color: #336699;
        color: #ffffff;
    }      
	.major
	{
  		padding: 0.2em 0.5em;
  		border:2px solid black;
/*  		background-color: #E8E8E8;	*/
  		background-color: #E5FFCC;
  		font-size:80%;
  		text-align:left;
  	}
  	#topbar p
    {
       	text-align: center;
    }
    #banner
    {
    	font-weight: bold;
    	font-style: italic;
    	font-size: 130%;
	}
	fieldset {background-color: #E8E8E8;}
	#submitspan {float: right;}
	#errormessage
	{
		float: left;
		font-weight: bold;
		font-style: italic;
		color: red;
	}
	table, th, td {border: 1px solid black;}
	th, td {min-width: 60px; }
	button {background-color: #336699; color: #fffff;}
  </style>
</head>
<body>
  <div id="topbar" class="topbar">
    <img src="onclogo" height="55" width="75"/>
    <p><span id="banner">ONC Family Assistance Referral Form</span><br>
	<span id="message">(please complete and click Submit To ONC)</span></p>
  </div>
  <form id="familyreferral" action="referfamily" onsubmit="return submitReferral()" method="post">
  <input type="hidden" name="token" value="REPLACE_TOKEN">
  <input id="year" type="hidden" name="year">
   <input type="hidden" name="targetid" value=TARGETID>
  <br>
  <fieldset>
  <legend class="major">Head of Household Information</legend>
    <input title="First Name" name="hohFN" type="text" size="20" placeholder="First Name" value="HOHFN" required>
    <input title="Last Name" name="hohLN" type="text" size="20" placeholder="Last Name", value="HOHLN" required>
    <input id="homephone" title="Home Phone #" name="homephone" type="text" size="18" placeholder="Primary Phone #" onblur="verifyPhoneNumber(0)" required>
    <input id= "cellphone" title="Cell Phone #" name="cellphone" type="text" size="18" placeholder="Alternate Phone #" onblur="verifyPhoneNumber(1)">
    <input id= "altphone" title="Alternate Phone #" name="altphone" type="text" size="18" placeholder="2nd Alt Phone #" onblur="verifyPhoneNumber(2)">
  	<select title="Primary language" name="language">
		<option value="English">English</option>
		<option value="Spanish">Spanish</option>
		<option value="Arabic">Arabic</option>
		<option value="Korean">Korean</option>
		<option value="Vietnamese">Vietnamese</option>
		<option value="Other">Other</option>
		<option value="?">Unknown</option>
	</select>
	<br>
	<input id="housenum" title="House #" name="housenum" type="text" size="8" placeholder="House #" onblur="verifyHOHAddress()" required>
    <input id="street" title="Street Name" name="street" type="text" size="20" placeholder="Street Name" onblur="verifyHOHAddress()" required>
    <input id="unit" title="Apt. or Unit #" name="unit" type="text" size="8" placeholder="Apt #">
    <input id="city"  title="City" name="city" type="text" size="20" placeholder="City" required>
    <select id="zipcode" title="Zip Code" name="zipcode">
		<option value="20120">20120</option>
		<option value="20121">20121</option>
		<option value="20124">20124</option>
		<option value="20151">20151</option>
		<option value="22033">22033</option>
		<option value="22039">22039</option>
	</select>
	<input title="E-mail address" name="email" type="email" size="30" placeholder="email address">
  </fieldset>
  <br>
  <fieldset>
  <legend class="major">Delivery Address: Provide address that ONC will use for gift delivery</legend>
	<input type="checkbox" id="sameaddress" onclick="sameAddressClicked(this)">Check if same as HOH address, otherwise complete:
	<input id="delhousenum" title="Delivery House #" name="delhousenum" type="text" size="8" placeholder="House #" onblur="verifyDeliveryAddress()" required>
    <input id="delstreet" title="Delivery Street Name" name="delstreet" type="text" size="20" placeholder="Street Name" onblur="verifyDeliveryAddress()" required>
    <input id="delunit" title="Deleivery Apt. or Unit #" name="delunit" type="text" size="8" placeholder="Apt #">
    <input id="delcity" title="Delivery City" name="delcity" type="text" size="20" placeholder="City" required>
    <select id="delzipcode" title="Deleivery Zip Code" name="delzipcode">
		<option value="20120">20120</option>
		<option value="20121">20121</option>
		<option value="20124">20124</option>
		<option value="20151">20151</option>
		<option value="22033">22033</option>
		<option value="22039">22039</option>
	</select>
  </fieldset>
  <br>
  <fieldset>
  <legend class="major">Family Members</legend>
  <fieldset class="gray">
  	<legend>Children in family (ONC will serve children under 18, or 18+ if they are still enrolled in FCPS)</legend>
  	<input id="childfn" title="First name of child to be added" type="text" size="16" placeholder="First Name">
    <input id="childln" title="Last name of child to be added" type="text" size="16" placeholder="Last Name">
    <input id="childdob" title="Date of birth for child to be added" type="text" size="12" placeholder="DoB">
    <select id="childgender" title="Gender of child to be added">
		<option value="Boy">Boy</option>
		<option value="Girl">Girl</option>
		<option value="Unknown">Unknown</option>
	</select>
	<input id="childschool" title="School attended, if any, for child to be added" type="text" size="20" placeholder="School">
	<button type="button" onclick="addChild()" title="Click to add child">Add Child</button>
	<button type="button" onclick="clearAddChild()" title="Click to clear add child fields">Clear</button>
  <table id="childtable" border="1">
  	<thead>
    	<tr>
        	<th>First Name</th>
        	<th>Last Name</th>
        	<th>DoB </th>
        	<th>Gender </th>
        	<th>School </th>
    	</tr>
      </thead>
      <tbody id="tchildbody">
      </tbody>
  </table>
  </fieldset>
  <br>
  <fieldset>
  	<legend>Other adults in family (in addition to the head of household)</legend>
  	<input id="adultname" title="Name" type="text" size="28" placeholder="First & Last Name">
    <select id="adultgender" title="Gender">
		<option value="Male">Male</option>
		<option value="Female">Female</option>
		<option value="Unknown">Unknown</option>
	</select>
	<button type="button" onclick="addAdult()" title="Click to add adult to family">Add Adult</button>
	<button type="button" onclick="clearAddAdult()" title="Click to clear adult fields">Clear</button>
  <table id="adulttable" border="1">
  	<thead>
    	<tr>
        	<th>Name</th>
        	<th>Gender </th>
    	</tr>
    </thead>
    <tbody id="tadultbody">
    </tbody>
</table>
  </fieldset>
  </fieldset>
  <br>
  <fieldset>
   <legend class="major">Gift Assistance: Provide 3 wishes, in priority order, plus an alternate wish, per child; if clothing or footwear, please include size</legend>
  	 <table id="wishtable" border="1">
  	<thead>
    	<tr>
        	<th>First Name</th>
        	<th>Age/Gender</th>
        	<th>Wish 1</th>
        	<th>Wish 2</th>
        	<th>Wish 3</th>
        	<th>Alternate Wish</th>	
    	</tr>
      </thead>
      <tbody id="twishbody">
      </tbody>
  </table>
  </fieldset>
  <br>
  <fieldset>
  <legend class="major">Meal Assistance: ONC will refer family to WFCM or equivalent</legend>
	<input type="checkbox" onclick="mealRqrdClicked(this)" title="Check if family needs meal assistance">Check to request meal assistance for:
    <select id="mealtype" name="mealtype" title="When does the family need meal assistance?" disabled>
		<option value="No Assistance Rqrd">No Assistance Rqrd</option>
	</select>
	<input id="dietres" type="text" name="dietres" size="68" placeholder="Describe any dietary restrictions" title="Describe any family dietary restrictions" disabled>
  </fieldset>
  <br>
  <fieldset>
   <legend class="major">Family Details: Provide details (if any) about family you think ONC should know</legend>
	<input type="text" name="detail" size="128" placeholder="Details about family ONC should know" title="Provide ONC with information about the family you feel is important">
  </fieldset>
  <br>
  <div>
  	<span id="errormessage"></span>
  	<span id="submitspan">
  	  <label for="submit">Please check that all fields are complete prior to submission: </label>
  	  <input id="submit" type="submit" value="Submit to ONC" style="background-color: #336699; color: #ffffff;" title="Click to sumbit family to ONC">
  	</span>
  </div>
</form>
</body>
</html>   